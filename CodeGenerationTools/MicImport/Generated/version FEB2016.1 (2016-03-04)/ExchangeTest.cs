using System;
using System.IO;
using System.Runtime.Serialization;
using System.Xml;
using Microsoft.VisualStudio.TestTools.UnitTesting;

using Mbst.Trading;

namespace Tests.Trading.Instrument
{
    /// <summary>
    /// Exchange unit tests.
    /// <para>Generated automatically from the list of ISO 10383 Exchange/Market Identifier Codes, version FEB2016.1 (2016-03-04).</para>
    /// <para><c>http://www.iso15022.org/MIC/homepageMIC.htm</c></para>
    /// </summary>
    [TestClass]
    public class ExchangeTest
    {
        #region ExchangeConstructorTest
        /// <summary>
        /// A test for Exchange Constructor.
        /// </summary>
        [TestMethod]
        public void ExchangeConstructorTest()
        {
            var target = new Exchange(EuronextMic.Xams);
            Assert.IsTrue(target.Mic == ExchangeMic.Xams);
            target = new Exchange(ExchangeMic.Xpar);
            Assert.IsTrue(target.Mic == ExchangeMic.Xpar);
            target = new Exchange();
            Assert.IsTrue(target.Mic == ExchangeMic.Xams);
        }
        #endregion

        #region CompareToTest
        /// <summary>
        /// A test for CompareTo.
        /// </summary>
        [TestMethod]
        public void CompareToTest()
        {
            var target = new Exchange(ExchangeMic.Xpar);
            var other = new Exchange(ExchangeMic.Xpar);
            Assert.IsTrue(0 == target.CompareTo(other));
            other = new Exchange(ExchangeMic.Xams);
            Assert.IsFalse(0 == target.CompareTo(other));
            Assert.IsFalse(0 == target.CompareTo(null));
        }
        #endregion

        #region EqualsTest
        /// <summary>
        /// A test for Equals.
        /// </summary>
        [TestMethod]
        public void EqualsTest()
        {
            var target = new Exchange(ExchangeMic.Xpar);
            object obj = new Exchange(ExchangeMic.Xpar);
            Assert.IsTrue(target.Equals(obj));
            Assert.IsTrue(target.Equals((Exchange)obj));
            obj = new Exchange(ExchangeMic.Xams);
            Assert.IsFalse(target.Equals(obj));
            obj = null;
            // ReSharper disable once ExpressionIsAlwaysNull
            Assert.IsFalse(target.Equals(obj));
            // ReSharper disable once ExpressionIsAlwaysNull
            Assert.IsFalse(target.Equals((Exchange)obj));
            Assert.IsTrue(target.Equals(target));
        }
        #endregion

        #region GetHashCodeTest
        /// <summary>
        /// A test for GetHashCode.
        /// </summary>
        [TestMethod]
        public void GetHashCodeTest()
        {
            var target = new Exchange(ExchangeMic.Xpar);
            var other = new Exchange(ExchangeMic.Xpar);
            Assert.IsTrue(target.GetHashCode() == other.GetHashCode());
            other = new Exchange(ExchangeMic.Xams);
            Assert.IsFalse(target.GetHashCode() == other.GetHashCode());
        }
        #endregion

        #region ToStringTest
        /// <summary>
        /// A test for ToStringCode.
        /// </summary>
        [TestMethod]
        public void ToStringTest()
        {
            var target = new Exchange(ExchangeMic.Xpar);
            Assert.IsTrue(target.ToString() == ExchangeMic.Xpar.ToString());
            target = new Exchange(ExchangeMic.Xams);
            Assert.IsTrue(target.ToString() == ExchangeMic.Xams.ToString());
        }
        #endregion

        #region OpEqualityTest
        /// <summary>
        /// A test for OpEquality.
        /// </summary>
        [TestMethod]
        public void OpEqualityTest()
        {
            var target = new Exchange(ExchangeMic.Xpar);
            var other = new Exchange(ExchangeMic.Xpar);
            Assert.IsTrue(target == other);
            other = new Exchange(ExchangeMic.Xams);
            Assert.IsFalse(target == other);
            other = null;
            Assert.IsFalse(target == other);
            Assert.IsFalse(other == target);
        }
        #endregion

        #region OpGreaterThanTest
        /// <summary>
        /// A test for OpGreaterThan.
        /// </summary>
        [TestMethod]
        public void OpGreaterThanTest()
        {
            var target = new Exchange(ExchangeMic.Xpar);
            var other = new Exchange(ExchangeMic.Xpar);
            Assert.AreEqual(target > other, (int)target.Mic > (int)other.Mic);
            other = new Exchange(ExchangeMic.Xams);
            Assert.AreEqual(target > other, (int)target.Mic > (int)other.Mic);
            other = null;
            Assert.IsTrue(target > other);
            Assert.IsFalse(other > target);
        }
        #endregion

        #region OpInequalityTest
        /// <summary>
        /// A test for OpInequality.
        /// </summary>
        [TestMethod]
        public void OpInequalityTest()
        {
            var target = new Exchange(ExchangeMic.Xpar);
            var other = new Exchange(ExchangeMic.Xpar);
            Assert.IsFalse(target != other);
            other = new Exchange(ExchangeMic.Xams);
            Assert.IsTrue(target != other);
            other = null;
            Assert.IsTrue(target != other);
            Assert.IsTrue(other != target);
        }
        #endregion

        #region OpLessThanTest
        /// <summary>
        /// A test for OpLessThan.
        /// </summary>
        [TestMethod]
        public void OpGreaterLessTest()
        {
            var target = new Exchange(ExchangeMic.Xpar);
            var other = new Exchange(ExchangeMic.Xpar);
            Assert.AreEqual(target < other, (int)target.Mic < (int)other.Mic);
            other = new Exchange(ExchangeMic.Xams);
            Assert.AreEqual(target < other, (int)target.Mic < (int)other.Mic);
            other = null;
            Assert.IsFalse(target < other);
            Assert.IsFalse(other < target);
        }
        #endregion

        #region CountryTest
        /// <summary>
        /// A test for Country.
        /// </summary>
        [TestMethod]
        public void CountryTest()
        {
            var target = new Exchange(ExchangeMic.Xtir);
            Assert.AreEqual(ExchangeCountry.Albania, target.Country, "Xtir");
            target = new Exchange(ExchangeMic.Xalg);
            Assert.AreEqual(ExchangeCountry.Algeria, target.Country, "Xalg");
            target = new Exchange(ExchangeMic.Bace);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Bace");
            target = new Exchange(ExchangeMic.Bcfs);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Bcfs");
            target = new Exchange(ExchangeMic.Xmvl);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xmvl");
            target = new Exchange(ExchangeMic.Rofx);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Rofx");
            target = new Exchange(ExchangeMic.Xbcc);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xbcc");
            target = new Exchange(ExchangeMic.Mvcx);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Mvcx");
            target = new Exchange(ExchangeMic.Xbcm);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xbcm");
            target = new Exchange(ExchangeMic.Xbcx);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xbcx");
            target = new Exchange(ExchangeMic.Xbue);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xbue");
            target = new Exchange(ExchangeMic.Xmev);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xmev");
            target = new Exchange(ExchangeMic.Xcnf);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xcnf");
            target = new Exchange(ExchangeMic.Xmab);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xmab");
            target = new Exchange(ExchangeMic.Xmtb);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xmtb");
            target = new Exchange(ExchangeMic.Xros);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xros");
            target = new Exchange(ExchangeMic.Xrox);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xrox");
            target = new Exchange(ExchangeMic.Xtuc);
            Assert.AreEqual(ExchangeCountry.Argentina, target.Country, "Xtuc");
            target = new Exchange(ExchangeMic.Xarm);
            Assert.AreEqual(ExchangeCountry.Armenia, target.Country, "Xarm");
            target = new Exchange(ExchangeMic.Apxl);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Apxl");
            target = new Exchange(ExchangeMic.Awbx);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Awbx");
            target = new Exchange(ExchangeMic.Awex);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Awex");
            target = new Exchange(ExchangeMic.Blev);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Blev");
            target = new Exchange(ExchangeMic.Cgma);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Cgma");
            target = new Exchange(ExchangeMic.Chia);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Chia");
            target = new Exchange(ExchangeMic.Cxac);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Cxac");
            target = new Exchange(ExchangeMic.Cxaf);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Cxaf");
            target = new Exchange(ExchangeMic.Cxam);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Cxam");
            target = new Exchange(ExchangeMic.Cxan);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Cxan");
            target = new Exchange(ExchangeMic.Cxap);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Cxap");
            target = new Exchange(ExchangeMic.Cxav);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Cxav");
            target = new Exchange(ExchangeMic.Cxaw);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Cxaw");
            target = new Exchange(ExchangeMic.Clau);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Clau");
            target = new Exchange(ExchangeMic.Csau);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Csau");
            target = new Exchange(ExchangeMic.Cfau);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Cfau");
            target = new Exchange(ExchangeMic.Maqx);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Maqx");
            target = new Exchange(ExchangeMic.Msal);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Msal");
            target = new Exchange(ExchangeMic.Nsxb);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Nsxb");
            target = new Exchange(ExchangeMic.Siga);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Siga");
            target = new Exchange(ExchangeMic.Simv);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Simv");
            target = new Exchange(ExchangeMic.Xasx);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Xasx");
            target = new Exchange(ExchangeMic.Asxb);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Asxb");
            target = new Exchange(ExchangeMic.Asxc);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Asxc");
            target = new Exchange(ExchangeMic.Asxp);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Asxp");
            target = new Exchange(ExchangeMic.Asxt);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Asxt");
            target = new Exchange(ExchangeMic.Asxv);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Asxv");
            target = new Exchange(ExchangeMic.Xsfe);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Xsfe");
            target = new Exchange(ExchangeMic.Xfex);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Xfex");
            target = new Exchange(ExchangeMic.Xnec);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Xnec");
            target = new Exchange(ExchangeMic.Xyie);
            Assert.AreEqual(ExchangeCountry.Australia, target.Country, "Xyie");
            target = new Exchange(ExchangeMic.Exaa);
            Assert.AreEqual(ExchangeCountry.Austria, target.Country, "Exaa");
            target = new Exchange(ExchangeMic.Xwbo);
            Assert.AreEqual(ExchangeCountry.Austria, target.Country, "Xwbo");
            target = new Exchange(ExchangeMic.Wbah);
            Assert.AreEqual(ExchangeCountry.Austria, target.Country, "Wbah");
            target = new Exchange(ExchangeMic.Wbdm);
            Assert.AreEqual(ExchangeCountry.Austria, target.Country, "Wbdm");
            target = new Exchange(ExchangeMic.Wbgf);
            Assert.AreEqual(ExchangeCountry.Austria, target.Country, "Wbgf");
            target = new Exchange(ExchangeMic.Xceg);
            Assert.AreEqual(ExchangeCountry.Austria, target.Country, "Xceg");
            target = new Exchange(ExchangeMic.Xvie);
            Assert.AreEqual(ExchangeCountry.Austria, target.Country, "Xvie");
            target = new Exchange(ExchangeMic.Bsex);
            Assert.AreEqual(ExchangeCountry.Azerbaijan, target.Country, "Bsex");
            target = new Exchange(ExchangeMic.Xibe);
            Assert.AreEqual(ExchangeCountry.Azerbaijan, target.Country, "Xibe");
            target = new Exchange(ExchangeMic.Xbaa);
            Assert.AreEqual(ExchangeCountry.Bahamas, target.Country, "Xbaa");
            target = new Exchange(ExchangeMic.Bfex);
            Assert.AreEqual(ExchangeCountry.Bahrain, target.Country, "Bfex");
            target = new Exchange(ExchangeMic.Xbah);
            Assert.AreEqual(ExchangeCountry.Bahrain, target.Country, "Xbah");
            target = new Exchange(ExchangeMic.Xchg);
            Assert.AreEqual(ExchangeCountry.Bangladesh, target.Country, "Xchg");
            target = new Exchange(ExchangeMic.Xdha);
            Assert.AreEqual(ExchangeCountry.Bangladesh, target.Country, "Xdha");
            target = new Exchange(ExchangeMic.Xbab);
            Assert.AreEqual(ExchangeCountry.Barbados, target.Country, "Xbab");
            target = new Exchange(ExchangeMic.Bajm);
            Assert.AreEqual(ExchangeCountry.Barbados, target.Country, "Bajm");
            target = new Exchange(ExchangeMic.Bcse);
            Assert.AreEqual(ExchangeCountry.Belarus, target.Country, "Bcse");
            target = new Exchange(ExchangeMic.Blpx);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Blpx");
            target = new Exchange(ExchangeMic.Bmts);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Bmts");
            target = new Exchange(ExchangeMic.Mtsd);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Mtsd");
            target = new Exchange(ExchangeMic.Mtsf);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Mtsf");
            target = new Exchange(ExchangeMic.Xbru);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Xbru");
            target = new Exchange(ExchangeMic.Alxb);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Alxb");
            target = new Exchange(ExchangeMic.Enxb);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Enxb");
            target = new Exchange(ExchangeMic.Mlxb);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Mlxb");
            target = new Exchange(ExchangeMic.Tnlb);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Tnlb");
            target = new Exchange(ExchangeMic.Vpxb);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Vpxb");
            target = new Exchange(ExchangeMic.Xbrd);
            Assert.AreEqual(ExchangeCountry.Belgium, target.Country, "Xbrd");
            target = new Exchange(ExchangeMic.Xbda);
            Assert.AreEqual(ExchangeCountry.Bermuda, target.Country, "Xbda");
            target = new Exchange(ExchangeMic.Xbol);
            Assert.AreEqual(ExchangeCountry.Bolivia, target.Country, "Xbol");
            target = new Exchange(ExchangeMic.Xblb);
            Assert.AreEqual(ExchangeCountry.BosniaHerzegovina, target.Country, "Xblb");
            target = new Exchange(ExchangeMic.Blbf);
            Assert.AreEqual(ExchangeCountry.BosniaHerzegovina, target.Country, "Blbf");
            target = new Exchange(ExchangeMic.Xsse);
            Assert.AreEqual(ExchangeCountry.BosniaHerzegovina, target.Country, "Xsse");
            target = new Exchange(ExchangeMic.Xbot);
            Assert.AreEqual(ExchangeCountry.Botswana, target.Country, "Xbot");
            target = new Exchange(ExchangeMic.Bote);
            Assert.AreEqual(ExchangeCountry.Botswana, target.Country, "Bote");
            target = new Exchange(ExchangeMic.Botv);
            Assert.AreEqual(ExchangeCountry.Botswana, target.Country, "Botv");
            target = new Exchange(ExchangeMic.Bcmm);
            Assert.AreEqual(ExchangeCountry.Brazil, target.Country, "Bcmm");
            target = new Exchange(ExchangeMic.Bovm);
            Assert.AreEqual(ExchangeCountry.Brazil, target.Country, "Bovm");
            target = new Exchange(ExchangeMic.Brix);
            Assert.AreEqual(ExchangeCountry.Brazil, target.Country, "Brix");
            target = new Exchange(ExchangeMic.Bvmf);
            Assert.AreEqual(ExchangeCountry.Brazil, target.Country, "Bvmf");
            target = new Exchange(ExchangeMic.Ceti);
            Assert.AreEqual(ExchangeCountry.Brazil, target.Country, "Ceti");
            target = new Exchange(ExchangeMic.Selc);
            Assert.AreEqual(ExchangeCountry.Brazil, target.Country, "Selc");
            target = new Exchange(ExchangeMic.Ibex);
            Assert.AreEqual(ExchangeCountry.Bulgaria, target.Country, "Ibex");
            target = new Exchange(ExchangeMic.Xbul);
            Assert.AreEqual(ExchangeCountry.Bulgaria, target.Country, "Xbul");
            target = new Exchange(ExchangeMic.Xcsx);
            Assert.AreEqual(ExchangeCountry.Cambodia, target.Country, "Xcsx");
            target = new Exchange(ExchangeMic.Xdsx);
            Assert.AreEqual(ExchangeCountry.Cameroon, target.Country, "Xdsx");
            target = new Exchange(ExchangeMic.Canx);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Canx");
            target = new Exchange(ExchangeMic.Chic);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Chic");
            target = new Exchange(ExchangeMic.Xcx2);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Xcx2");
            target = new Exchange(ExchangeMic.Cotc);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Cotc");
            target = new Exchange(ExchangeMic.Ifca);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Ifca");
            target = new Exchange(ExchangeMic.Ivzx);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Ivzx");
            target = new Exchange(ExchangeMic.Lica);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Lica");
            target = new Exchange(ExchangeMic.Matn);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Matn");
            target = new Exchange(ExchangeMic.Neoe);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Neoe");
            target = new Exchange(ExchangeMic.Ngxc);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Ngxc");
            target = new Exchange(ExchangeMic.Omga);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Omga");
            target = new Exchange(ExchangeMic.Lynx);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Lynx");
            target = new Exchange(ExchangeMic.Tmxs);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Tmxs");
            target = new Exchange(ExchangeMic.Xats);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Xats");
            target = new Exchange(ExchangeMic.Xbbk);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Xbbk");
            target = new Exchange(ExchangeMic.Xcnq);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Xcnq");
            target = new Exchange(ExchangeMic.Pure);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Pure");
            target = new Exchange(ExchangeMic.Xicx);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Xicx");
            target = new Exchange(ExchangeMic.Xmoc);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Xmoc");
            target = new Exchange(ExchangeMic.Xmod);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Xmod");
            target = new Exchange(ExchangeMic.Xtse);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Xtse");
            target = new Exchange(ExchangeMic.Xtsx);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Xtsx");
            target = new Exchange(ExchangeMic.Xtnx);
            Assert.AreEqual(ExchangeCountry.Canada, target.Country, "Xtnx");
            target = new Exchange(ExchangeMic.Xbvc);
            Assert.AreEqual(ExchangeCountry.CapeVerde, target.Country, "Xbvc");
            target = new Exchange(ExchangeMic.Xcay);
            Assert.AreEqual(ExchangeCountry.CaymanIslands, target.Country, "Xcay");
            target = new Exchange(ExchangeMic.Bova);
            Assert.AreEqual(ExchangeCountry.Chile, target.Country, "Bova");
            target = new Exchange(ExchangeMic.Xbcl);
            Assert.AreEqual(ExchangeCountry.Chile, target.Country, "Xbcl");
            target = new Exchange(ExchangeMic.Xsgo);
            Assert.AreEqual(ExchangeCountry.Chile, target.Country, "Xsgo");
            target = new Exchange(ExchangeMic.Ccfx);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Ccfx");
            target = new Exchange(ExchangeMic.Cssx);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Cssx");
            target = new Exchange(ExchangeMic.Sgex);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Sgex");
            target = new Exchange(ExchangeMic.Xcfe);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Xcfe");
            target = new Exchange(ExchangeMic.Xdce);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Xdce");
            target = new Exchange(ExchangeMic.Xsge);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Xsge");
            target = new Exchange(ExchangeMic.Xine);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Xine");
            target = new Exchange(ExchangeMic.Xshe);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Xshe");
            target = new Exchange(ExchangeMic.Xsec);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Xsec");
            target = new Exchange(ExchangeMic.Xshg);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Xshg");
            target = new Exchange(ExchangeMic.Xssc);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Xssc");
            target = new Exchange(ExchangeMic.Xzce);
            Assert.AreEqual(ExchangeCountry.China, target.Country, "Xzce");
            target = new Exchange(ExchangeMic.Xbog);
            Assert.AreEqual(ExchangeCountry.Colombia, target.Country, "Xbog");
            target = new Exchange(ExchangeMic.Xbnv);
            Assert.AreEqual(ExchangeCountry.CostaRica, target.Country, "Xbnv");
            target = new Exchange(ExchangeMic.Xcro);
            Assert.AreEqual(ExchangeCountry.Croatia, target.Country, "Xcro");
            target = new Exchange(ExchangeMic.Xtrz);
            Assert.AreEqual(ExchangeCountry.Croatia, target.Country, "Xtrz");
            target = new Exchange(ExchangeMic.Xzag);
            Assert.AreEqual(ExchangeCountry.Croatia, target.Country, "Xzag");
            target = new Exchange(ExchangeMic.Xzam);
            Assert.AreEqual(ExchangeCountry.Croatia, target.Country, "Xzam");
            target = new Exchange(ExchangeMic.Dcsx);
            Assert.AreEqual(ExchangeCountry.Curacao, target.Country, "Dcsx");
            target = new Exchange(ExchangeMic.Xcys);
            Assert.AreEqual(ExchangeCountry.Cyprus, target.Country, "Xcys");
            target = new Exchange(ExchangeMic.Xcyo);
            Assert.AreEqual(ExchangeCountry.Cyprus, target.Country, "Xcyo");
            target = new Exchange(ExchangeMic.Xecm);
            Assert.AreEqual(ExchangeCountry.Cyprus, target.Country, "Xecm");
            target = new Exchange(ExchangeMic.Xpra);
            Assert.AreEqual(ExchangeCountry.CzechRepublic, target.Country, "Xpra");
            target = new Exchange(ExchangeMic.Xprm);
            Assert.AreEqual(ExchangeCountry.CzechRepublic, target.Country, "Xprm");
            target = new Exchange(ExchangeMic.Xpxe);
            Assert.AreEqual(ExchangeCountry.CzechRepublic, target.Country, "Xpxe");
            target = new Exchange(ExchangeMic.Xrmz);
            Assert.AreEqual(ExchangeCountry.CzechRepublic, target.Country, "Xrmz");
            target = new Exchange(ExchangeMic.Xrmo);
            Assert.AreEqual(ExchangeCountry.CzechRepublic, target.Country, "Xrmo");
            target = new Exchange(ExchangeMic.Dktc);
            Assert.AreEqual(ExchangeCountry.Denmark, target.Country, "Dktc");
            target = new Exchange(ExchangeMic.Gxgr);
            Assert.AreEqual(ExchangeCountry.Denmark, target.Country, "Gxgr");
            target = new Exchange(ExchangeMic.Gxgf);
            Assert.AreEqual(ExchangeCountry.Denmark, target.Country, "Gxgf");
            target = new Exchange(ExchangeMic.Gxgm);
            Assert.AreEqual(ExchangeCountry.Denmark, target.Country, "Gxgm");
            target = new Exchange(ExchangeMic.Npga);
            Assert.AreEqual(ExchangeCountry.Denmark, target.Country, "Npga");
            target = new Exchange(ExchangeMic.Xcse);
            Assert.AreEqual(ExchangeCountry.Denmark, target.Country, "Xcse");
            target = new Exchange(ExchangeMic.Dcse);
            Assert.AreEqual(ExchangeCountry.Denmark, target.Country, "Dcse");
            target = new Exchange(ExchangeMic.Dndk);
            Assert.AreEqual(ExchangeCountry.Denmark, target.Country, "Dndk");
            target = new Exchange(ExchangeMic.Fndk);
            Assert.AreEqual(ExchangeCountry.Denmark, target.Country, "Fndk");
            target = new Exchange(ExchangeMic.Xbvr);
            Assert.AreEqual(ExchangeCountry.DominicanRepublic, target.Country, "Xbvr");
            target = new Exchange(ExchangeMic.Xgua);
            Assert.AreEqual(ExchangeCountry.Ecuador, target.Country, "Xgua");
            target = new Exchange(ExchangeMic.Xqui);
            Assert.AreEqual(ExchangeCountry.Ecuador, target.Country, "Xqui");
            target = new Exchange(ExchangeMic.Nilx);
            Assert.AreEqual(ExchangeCountry.Egypt, target.Country, "Nilx");
            target = new Exchange(ExchangeMic.Xcai);
            Assert.AreEqual(ExchangeCountry.Egypt, target.Country, "Xcai");
            target = new Exchange(ExchangeMic.Xsva);
            Assert.AreEqual(ExchangeCountry.Salvador, target.Country, "Xsva");
            target = new Exchange(ExchangeMic.Xtal);
            Assert.AreEqual(ExchangeCountry.Estonia, target.Country, "Xtal");
            target = new Exchange(ExchangeMic.Fnee);
            Assert.AreEqual(ExchangeCountry.Estonia, target.Country, "Fnee");
            target = new Exchange(ExchangeMic.Vmfx);
            Assert.AreEqual(ExchangeCountry.FaroeIslands, target.Country, "Vmfx");
            target = new Exchange(ExchangeMic.Xsps);
            Assert.AreEqual(ExchangeCountry.Fiji, target.Country, "Xsps");
            target = new Exchange(ExchangeMic.Fgex);
            Assert.AreEqual(ExchangeCountry.Finland, target.Country, "Fgex");
            target = new Exchange(ExchangeMic.Xhel);
            Assert.AreEqual(ExchangeCountry.Finland, target.Country, "Xhel");
            target = new Exchange(ExchangeMic.Dhel);
            Assert.AreEqual(ExchangeCountry.Finland, target.Country, "Dhel");
            target = new Exchange(ExchangeMic.Dnfi);
            Assert.AreEqual(ExchangeCountry.Finland, target.Country, "Dnfi");
            target = new Exchange(ExchangeMic.Fnfi);
            Assert.AreEqual(ExchangeCountry.Finland, target.Country, "Fnfi");
            target = new Exchange(ExchangeMic.Coal);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Coal");
            target = new Exchange(ExchangeMic.Epex);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Epex");
            target = new Exchange(ExchangeMic.Fmts);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Fmts");
            target = new Exchange(ExchangeMic.Gmtf);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Gmtf");
            target = new Exchange(ExchangeMic.Lchc);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Lchc");
            target = new Exchange(ExchangeMic.Xafr);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Xafr");
            target = new Exchange(ExchangeMic.Xbln);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Xbln");
            target = new Exchange(ExchangeMic.Xpar);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Xpar");
            target = new Exchange(ExchangeMic.Alxp);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Alxp");
            target = new Exchange(ExchangeMic.Mtch);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Mtch");
            target = new Exchange(ExchangeMic.Xmat);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Xmat");
            target = new Exchange(ExchangeMic.Xmli);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Xmli");
            target = new Exchange(ExchangeMic.Xmon);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Xmon");
            target = new Exchange(ExchangeMic.Xpow);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Xpow");
            target = new Exchange(ExchangeMic.Xpsf);
            Assert.AreEqual(ExchangeCountry.France, target.Country, "Xpsf");
            target = new Exchange(ExchangeMic.Xgse);
            Assert.AreEqual(ExchangeCountry.Georgia, target.Country, "Xgse");
            target = new Exchange(ExchangeMic.X360T);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "X360T");
            target = new Exchange(ExchangeMic.Cats);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Cats");
            target = new Exchange(ExchangeMic.Dbox);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Dbox");
            target = new Exchange(ExchangeMic.Auto);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Auto");
            target = new Exchange(ExchangeMic.Tgat);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Tgat");
            target = new Exchange(ExchangeMic.Xgat);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xgat");
            target = new Exchange(ExchangeMic.Xgrm);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xgrm");
            target = new Exchange(ExchangeMic.Xber);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xber");
            target = new Exchange(ExchangeMic.Bera);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Bera");
            target = new Exchange(ExchangeMic.Berb);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Berb");
            target = new Exchange(ExchangeMic.Berc);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Berc");
            target = new Exchange(ExchangeMic.Eqta);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Eqta");
            target = new Exchange(ExchangeMic.Eqtb);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Eqtb");
            target = new Exchange(ExchangeMic.Eqtc);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Eqtc");
            target = new Exchange(ExchangeMic.Eqtd);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Eqtd");
            target = new Exchange(ExchangeMic.Xeqt);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xeqt");
            target = new Exchange(ExchangeMic.Zobx);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Zobx");
            target = new Exchange(ExchangeMic.Xdus);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xdus");
            target = new Exchange(ExchangeMic.Dusa);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Dusa");
            target = new Exchange(ExchangeMic.Dusb);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Dusb");
            target = new Exchange(ExchangeMic.Dusc);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Dusc");
            target = new Exchange(ExchangeMic.Dusd);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Dusd");
            target = new Exchange(ExchangeMic.Xqtx);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xqtx");
            target = new Exchange(ExchangeMic.Xecb);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xecb");
            target = new Exchange(ExchangeMic.Xecc);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xecc");
            target = new Exchange(ExchangeMic.Xeee);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xeee");
            target = new Exchange(ExchangeMic.Xeeo);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xeeo");
            target = new Exchange(ExchangeMic.Xeer);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xeer");
            target = new Exchange(ExchangeMic.Xeum);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xeum");
            target = new Exchange(ExchangeMic.Xeur);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xeur");
            target = new Exchange(ExchangeMic.Ecag);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Ecag");
            target = new Exchange(ExchangeMic.Xere);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xere");
            target = new Exchange(ExchangeMic.Xert);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xert");
            target = new Exchange(ExchangeMic.Xeub);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xeub");
            target = new Exchange(ExchangeMic.Xeup);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xeup");
            target = new Exchange(ExchangeMic.Xfra);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xfra");
            target = new Exchange(ExchangeMic.Fraa);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Fraa");
            target = new Exchange(ExchangeMic.Frab);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Frab");
            target = new Exchange(ExchangeMic.Frad);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Frad");
            target = new Exchange(ExchangeMic.Xdbc);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xdbc");
            target = new Exchange(ExchangeMic.Xdbv);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xdbv");
            target = new Exchange(ExchangeMic.Xdbx);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xdbx");
            target = new Exchange(ExchangeMic.Xeta);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xeta");
            target = new Exchange(ExchangeMic.Xetb);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xetb");
            target = new Exchange(ExchangeMic.Xetr);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xetr");
            target = new Exchange(ExchangeMic.Xnew);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xnew");
            target = new Exchange(ExchangeMic.Xham);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xham");
            target = new Exchange(ExchangeMic.Hama);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Hama");
            target = new Exchange(ExchangeMic.Hamb);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Hamb");
            target = new Exchange(ExchangeMic.Xhan);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xhan");
            target = new Exchange(ExchangeMic.Hana);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Hana");
            target = new Exchange(ExchangeMic.Hanb);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Hanb");
            target = new Exchange(ExchangeMic.Xinv);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xinv");
            target = new Exchange(ExchangeMic.Xmun);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xmun");
            target = new Exchange(ExchangeMic.Muna);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Muna");
            target = new Exchange(ExchangeMic.Munb);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Munb");
            target = new Exchange(ExchangeMic.Munc);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Munc");
            target = new Exchange(ExchangeMic.Mund);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Mund");
            target = new Exchange(ExchangeMic.Xsco);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xsco");
            target = new Exchange(ExchangeMic.Xsc1);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xsc1");
            target = new Exchange(ExchangeMic.Xsc2);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xsc2");
            target = new Exchange(ExchangeMic.Xsc3);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xsc3");
            target = new Exchange(ExchangeMic.Xstu);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xstu");
            target = new Exchange(ExchangeMic.Euwx);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Euwx");
            target = new Exchange(ExchangeMic.Stua);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Stua");
            target = new Exchange(ExchangeMic.Stub);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Stub");
            target = new Exchange(ExchangeMic.Xxsc);
            Assert.AreEqual(ExchangeCountry.Germany, target.Country, "Xxsc");
            target = new Exchange(ExchangeMic.Xgha);
            Assert.AreEqual(ExchangeCountry.Ghana, target.Country, "Xgha");
            target = new Exchange(ExchangeMic.Gsxl);
            Assert.AreEqual(ExchangeCountry.Gibraltar, target.Country, "Gsxl");
            target = new Exchange(ExchangeMic.Asex);
            Assert.AreEqual(ExchangeCountry.Greece, target.Country, "Asex");
            target = new Exchange(ExchangeMic.Enax);
            Assert.AreEqual(ExchangeCountry.Greece, target.Country, "Enax");
            target = new Exchange(ExchangeMic.Euax);
            Assert.AreEqual(ExchangeCountry.Greece, target.Country, "Euax");
            target = new Exchange(ExchangeMic.Hotc);
            Assert.AreEqual(ExchangeCountry.Greece, target.Country, "Hotc");
            target = new Exchange(ExchangeMic.Xade);
            Assert.AreEqual(ExchangeCountry.Greece, target.Country, "Xade");
            target = new Exchange(ExchangeMic.Xath);
            Assert.AreEqual(ExchangeCountry.Greece, target.Country, "Xath");
            target = new Exchange(ExchangeMic.Xipo);
            Assert.AreEqual(ExchangeCountry.Greece, target.Country, "Xipo");
            target = new Exchange(ExchangeMic.Hdat);
            Assert.AreEqual(ExchangeCountry.Greece, target.Country, "Hdat");
            target = new Exchange(ExchangeMic.Hemo);
            Assert.AreEqual(ExchangeCountry.Greece, target.Country, "Hemo");
            target = new Exchange(ExchangeMic.Xgtg);
            Assert.AreEqual(ExchangeCountry.Guatemala, target.Country, "Xgtg");
            target = new Exchange(ExchangeMic.Xcie);
            Assert.AreEqual(ExchangeCountry.ChannelIslands, target.Country, "Xcie");
            target = new Exchange(ExchangeMic.Gsci);
            Assert.AreEqual(ExchangeCountry.Guyana, target.Country, "Gsci");
            target = new Exchange(ExchangeMic.Xbcv);
            Assert.AreEqual(ExchangeCountry.Honduras, target.Country, "Xbcv");
            target = new Exchange(ExchangeMic.Cgmh);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Cgmh");
            target = new Exchange(ExchangeMic.Clhk);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Clhk");
            target = new Exchange(ExchangeMic.Cshk);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Cshk");
            target = new Exchange(ExchangeMic.Cfhk);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Cfhk");
            target = new Exchange(ExchangeMic.Dbhk);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Dbhk");
            target = new Exchange(ExchangeMic.Eotc);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Eotc");
            target = new Exchange(ExchangeMic.Hsxa);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Hsxa");
            target = new Exchange(ExchangeMic.Maqh);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Maqh");
            target = new Exchange(ExchangeMic.Sigh);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Sigh");
            target = new Exchange(ExchangeMic.Tocp);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Tocp");
            target = new Exchange(ExchangeMic.Ubsx);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Ubsx");
            target = new Exchange(ExchangeMic.Xcgs);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Xcgs");
            target = new Exchange(ExchangeMic.Xhkf);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Xhkf");
            target = new Exchange(ExchangeMic.Xhkg);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Xhkg");
            target = new Exchange(ExchangeMic.Shsc);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Shsc");
            target = new Exchange(ExchangeMic.Xgem);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Xgem");
            target = new Exchange(ExchangeMic.Xihk);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Xihk");
            target = new Exchange(ExchangeMic.Xpst);
            Assert.AreEqual(ExchangeCountry.HongKong, target.Country, "Xpst");
            target = new Exchange(ExchangeMic.Beta);
            Assert.AreEqual(ExchangeCountry.Hungary, target.Country, "Beta");
            target = new Exchange(ExchangeMic.Hupx);
            Assert.AreEqual(ExchangeCountry.Hungary, target.Country, "Hupx");
            target = new Exchange(ExchangeMic.Kccp);
            Assert.AreEqual(ExchangeCountry.Hungary, target.Country, "Kccp");
            target = new Exchange(ExchangeMic.Xbud);
            Assert.AreEqual(ExchangeCountry.Hungary, target.Country, "Xbud");
            target = new Exchange(ExchangeMic.Xgas);
            Assert.AreEqual(ExchangeCountry.Hungary, target.Country, "Xgas");
            target = new Exchange(ExchangeMic.Xice);
            Assert.AreEqual(ExchangeCountry.Iceland, target.Country, "Xice");
            target = new Exchange(ExchangeMic.Dice);
            Assert.AreEqual(ExchangeCountry.Iceland, target.Country, "Dice");
            target = new Exchange(ExchangeMic.Dnis);
            Assert.AreEqual(ExchangeCountry.Iceland, target.Country, "Dnis");
            target = new Exchange(ExchangeMic.Fnis);
            Assert.AreEqual(ExchangeCountry.Iceland, target.Country, "Fnis");
            target = new Exchange(ExchangeMic.Acex);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Acex");
            target = new Exchange(ExchangeMic.Cdsl);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Cdsl");
            target = new Exchange(ExchangeMic.Icxl);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Icxl");
            target = new Exchange(ExchangeMic.Isex);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Isex");
            target = new Exchange(ExchangeMic.Mcxx);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Mcxx");
            target = new Exchange(ExchangeMic.Nbot);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Nbot");
            target = new Exchange(ExchangeMic.Nmce);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Nmce");
            target = new Exchange(ExchangeMic.Otcx);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Otcx");
            target = new Exchange(ExchangeMic.Pxil);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Pxil");
            target = new Exchange(ExchangeMic.Xban);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Xban");
            target = new Exchange(ExchangeMic.Xbom);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Xbom");
            target = new Exchange(ExchangeMic.Bsme);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Bsme");
            target = new Exchange(ExchangeMic.Xcal);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Xcal");
            target = new Exchange(ExchangeMic.Xdes);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Xdes");
            target = new Exchange(ExchangeMic.Ximc);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Ximc");
            target = new Exchange(ExchangeMic.Xmds);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Xmds");
            target = new Exchange(ExchangeMic.Xncd);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Xncd");
            target = new Exchange(ExchangeMic.Xnse);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Xnse");
            target = new Exchange(ExchangeMic.Xuse);
            Assert.AreEqual(ExchangeCountry.India, target.Country, "Xuse");
            target = new Exchange(ExchangeMic.Icdx);
            Assert.AreEqual(ExchangeCountry.Indonesia, target.Country, "Icdx");
            target = new Exchange(ExchangeMic.Xbbj);
            Assert.AreEqual(ExchangeCountry.Indonesia, target.Country, "Xbbj");
            target = new Exchange(ExchangeMic.Xidx);
            Assert.AreEqual(ExchangeCountry.Indonesia, target.Country, "Xidx");
            target = new Exchange(ExchangeMic.Xjnb);
            Assert.AreEqual(ExchangeCountry.Indonesia, target.Country, "Xjnb");
            target = new Exchange(ExchangeMic.Imex);
            Assert.AreEqual(ExchangeCountry.Iran, target.Country, "Imex");
            target = new Exchange(ExchangeMic.Xteh);
            Assert.AreEqual(ExchangeCountry.Iran, target.Country, "Xteh");
            target = new Exchange(ExchangeMic.Xiqs);
            Assert.AreEqual(ExchangeCountry.Iraq, target.Country, "Xiqs");
            target = new Exchange(ExchangeMic.Xpos);
            Assert.AreEqual(ExchangeCountry.Ireland, target.Country, "Xpos");
            target = new Exchange(ExchangeMic.Xcde);
            Assert.AreEqual(ExchangeCountry.Ireland, target.Country, "Xcde");
            target = new Exchange(ExchangeMic.Xdub);
            Assert.AreEqual(ExchangeCountry.Ireland, target.Country, "Xdub");
            target = new Exchange(ExchangeMic.Xatl);
            Assert.AreEqual(ExchangeCountry.Ireland, target.Country, "Xatl");
            target = new Exchange(ExchangeMic.Xesm);
            Assert.AreEqual(ExchangeCountry.Ireland, target.Country, "Xesm");
            target = new Exchange(ExchangeMic.Xeye);
            Assert.AreEqual(ExchangeCountry.Ireland, target.Country, "Xeye");
            target = new Exchange(ExchangeMic.Xmsm);
            Assert.AreEqual(ExchangeCountry.Ireland, target.Country, "Xmsm");
            target = new Exchange(ExchangeMic.Xebi);
            Assert.AreEqual(ExchangeCountry.Ireland, target.Country, "Xebi");
            target = new Exchange(ExchangeMic.Xtae);
            Assert.AreEqual(ExchangeCountry.Israel, target.Country, "Xtae");
            target = new Exchange(ExchangeMic.Cgit);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Cgit");
            target = new Exchange(ExchangeMic.Cgcm);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Cgcm");
            target = new Exchange(ExchangeMic.Cgdb);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Cgdb");
            target = new Exchange(ExchangeMic.Cgeb);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Cgeb");
            target = new Exchange(ExchangeMic.Cggd);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Cggd");
            target = new Exchange(ExchangeMic.Cgnd);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Cgnd");
            target = new Exchange(ExchangeMic.Cgqd);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Cgqd");
            target = new Exchange(ExchangeMic.Cgqt);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Cgqt");
            target = new Exchange(ExchangeMic.Cgtr);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Cgtr");
            target = new Exchange(ExchangeMic.Emid);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Emid");
            target = new Exchange(ExchangeMic.Emdr);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Emdr");
            target = new Exchange(ExchangeMic.Emir);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Emir");
            target = new Exchange(ExchangeMic.Etlx);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Etlx");
            target = new Exchange(ExchangeMic.Hmtf);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Hmtf");
            target = new Exchange(ExchangeMic.Hmod);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Hmod");
            target = new Exchange(ExchangeMic.Mtsc);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Mtsc");
            target = new Exchange(ExchangeMic.Bond);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Bond");
            target = new Exchange(ExchangeMic.Mtsm);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Mtsm");
            target = new Exchange(ExchangeMic.Ssob);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Ssob");
            target = new Exchange(ExchangeMic.Xgme);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Xgme");
            target = new Exchange(ExchangeMic.Xmil);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Xmil");
            target = new Exchange(ExchangeMic.Etfp);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Etfp");
            target = new Exchange(ExchangeMic.Mivx);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Mivx");
            target = new Exchange(ExchangeMic.Motx);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Motx");
            target = new Exchange(ExchangeMic.Mtaa);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Mtaa");
            target = new Exchange(ExchangeMic.Mtah);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Mtah");
            target = new Exchange(ExchangeMic.Sedx);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Sedx");
            target = new Exchange(ExchangeMic.Xaim);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Xaim");
            target = new Exchange(ExchangeMic.Xdmi);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Xdmi");
            target = new Exchange(ExchangeMic.Xmot);
            Assert.AreEqual(ExchangeCountry.Italy, target.Country, "Xmot");
            target = new Exchange(ExchangeMic.Xbrv);
            Assert.AreEqual(ExchangeCountry.IvoryCoast, target.Country, "Xbrv");
            target = new Exchange(ExchangeMic.Xjam);
            Assert.AreEqual(ExchangeCountry.Jamaica, target.Country, "Xjam");
            target = new Exchange(ExchangeMic.Betp);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Betp");
            target = new Exchange(ExchangeMic.Chij);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Chij");
            target = new Exchange(ExchangeMic.Chis);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Chis");
            target = new Exchange(ExchangeMic.Chiv);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Chiv");
            target = new Exchange(ExchangeMic.Citx);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Citx");
            target = new Exchange(ExchangeMic.Citd);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Citd");
            target = new Exchange(ExchangeMic.Cljp);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Cljp");
            target = new Exchange(ExchangeMic.Cmet);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Cmet");
            target = new Exchange(ExchangeMic.Csjp);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Csjp");
            target = new Exchange(ExchangeMic.Cfjp);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Cfjp");
            target = new Exchange(ExchangeMic.Drct);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Drct");
            target = new Exchange(ExchangeMic.Lxjp);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Lxjp");
            target = new Exchange(ExchangeMic.Maqj);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Maqj");
            target = new Exchange(ExchangeMic.Mizx);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Mizx");
            target = new Exchange(ExchangeMic.Msms);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Msms");
            target = new Exchange(ExchangeMic.Nmrj);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Nmrj");
            target = new Exchange(ExchangeMic.Nxjp);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Nxjp");
            target = new Exchange(ExchangeMic.Nxse);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Nxse");
            target = new Exchange(ExchangeMic.Nxvw);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Nxvw");
            target = new Exchange(ExchangeMic.Sbij);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Sbij");
            target = new Exchange(ExchangeMic.Sbiu);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Sbiu");
            target = new Exchange(ExchangeMic.Sbiv);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Sbiv");
            target = new Exchange(ExchangeMic.Xsbi);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xsbi");
            target = new Exchange(ExchangeMic.Sigj);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Sigj");
            target = new Exchange(ExchangeMic.Xfka);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xfka");
            target = new Exchange(ExchangeMic.Xijp);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xijp");
            target = new Exchange(ExchangeMic.Jasr);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Jasr");
            target = new Exchange(ExchangeMic.Xjpx);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xjpx");
            target = new Exchange(ExchangeMic.Xjas);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xjas");
            target = new Exchange(ExchangeMic.Xose);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xose");
            target = new Exchange(ExchangeMic.Xosj);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xosj");
            target = new Exchange(ExchangeMic.Xtam);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xtam");
            target = new Exchange(ExchangeMic.Xtk1);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xtk1");
            target = new Exchange(ExchangeMic.Xtk2);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xtk2");
            target = new Exchange(ExchangeMic.Xtk3);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xtk3");
            target = new Exchange(ExchangeMic.Xtks);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xtks");
            target = new Exchange(ExchangeMic.Xkac);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xkac");
            target = new Exchange(ExchangeMic.Xngo);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xngo");
            target = new Exchange(ExchangeMic.Xnks);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xnks");
            target = new Exchange(ExchangeMic.Xsap);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xsap");
            target = new Exchange(ExchangeMic.Xtff);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xtff");
            target = new Exchange(ExchangeMic.Xtkt);
            Assert.AreEqual(ExchangeCountry.Japan, target.Country, "Xtkt");
            target = new Exchange(ExchangeMic.Xamm);
            Assert.AreEqual(ExchangeCountry.Jordan, target.Country, "Xamm");
            target = new Exchange(ExchangeMic.Etsc);
            Assert.AreEqual(ExchangeCountry.Kazakhstan, target.Country, "Etsc");
            target = new Exchange(ExchangeMic.Xkaz);
            Assert.AreEqual(ExchangeCountry.Kazakhstan, target.Country, "Xkaz");
            target = new Exchange(ExchangeMic.Xnai);
            Assert.AreEqual(ExchangeCountry.Kenya, target.Country, "Xnai");
            target = new Exchange(ExchangeMic.Xkfb);
            Assert.AreEqual(ExchangeCountry.Korea, target.Country, "Xkfb");
            target = new Exchange(ExchangeMic.Xkrx);
            Assert.AreEqual(ExchangeCountry.Korea, target.Country, "Xkrx");
            target = new Exchange(ExchangeMic.Xkcm);
            Assert.AreEqual(ExchangeCountry.Korea, target.Country, "Xkcm");
            target = new Exchange(ExchangeMic.Xkem);
            Assert.AreEqual(ExchangeCountry.Korea, target.Country, "Xkem");
            target = new Exchange(ExchangeMic.Xkfe);
            Assert.AreEqual(ExchangeCountry.Korea, target.Country, "Xkfe");
            target = new Exchange(ExchangeMic.Xkon);
            Assert.AreEqual(ExchangeCountry.Korea, target.Country, "Xkon");
            target = new Exchange(ExchangeMic.Xkos);
            Assert.AreEqual(ExchangeCountry.Korea, target.Country, "Xkos");
            target = new Exchange(ExchangeMic.Xkuw);
            Assert.AreEqual(ExchangeCountry.Kuwait, target.Country, "Xkuw");
            target = new Exchange(ExchangeMic.Xkse);
            Assert.AreEqual(ExchangeCountry.Kyrgyzstan, target.Country, "Xkse");
            target = new Exchange(ExchangeMic.Xlao);
            Assert.AreEqual(ExchangeCountry.Laos, target.Country, "Xlao");
            target = new Exchange(ExchangeMic.Xris);
            Assert.AreEqual(ExchangeCountry.Latvia, target.Country, "Xris");
            target = new Exchange(ExchangeMic.Fnlv);
            Assert.AreEqual(ExchangeCountry.Latvia, target.Country, "Fnlv");
            target = new Exchange(ExchangeMic.Xbey);
            Assert.AreEqual(ExchangeCountry.Lebanon, target.Country, "Xbey");
            target = new Exchange(ExchangeMic.Xlsm);
            Assert.AreEqual(ExchangeCountry.LibyanArabJamahiriya, target.Country, "Xlsm");
            target = new Exchange(ExchangeMic.Bapx);
            Assert.AreEqual(ExchangeCountry.Lithuania, target.Country, "Bapx");
            target = new Exchange(ExchangeMic.Getb);
            Assert.AreEqual(ExchangeCountry.Lithuania, target.Country, "Getb");
            target = new Exchange(ExchangeMic.Xlit);
            Assert.AreEqual(ExchangeCountry.Lithuania, target.Country, "Xlit");
            target = new Exchange(ExchangeMic.Fnlt);
            Assert.AreEqual(ExchangeCountry.Lithuania, target.Country, "Fnlt");
            target = new Exchange(ExchangeMic.Cclx);
            Assert.AreEqual(ExchangeCountry.Luxembourg, target.Country, "Cclx");
            target = new Exchange(ExchangeMic.Xlux);
            Assert.AreEqual(ExchangeCountry.Luxembourg, target.Country, "Xlux");
            target = new Exchange(ExchangeMic.Emtf);
            Assert.AreEqual(ExchangeCountry.Luxembourg, target.Country, "Emtf");
            target = new Exchange(ExchangeMic.Xves);
            Assert.AreEqual(ExchangeCountry.Luxembourg, target.Country, "Xves");
            target = new Exchange(ExchangeMic.Xmae);
            Assert.AreEqual(ExchangeCountry.Macedonia, target.Country, "Xmae");
            target = new Exchange(ExchangeMic.Xmdg);
            Assert.AreEqual(ExchangeCountry.Madagascar, target.Country, "Xmdg");
            target = new Exchange(ExchangeMic.Xmsw);
            Assert.AreEqual(ExchangeCountry.Malawi, target.Country, "Xmsw");
            target = new Exchange(ExchangeMic.Xkls);
            Assert.AreEqual(ExchangeCountry.Malaysia, target.Country, "Xkls");
            target = new Exchange(ExchangeMic.Mesq);
            Assert.AreEqual(ExchangeCountry.Malaysia, target.Country, "Mesq");
            target = new Exchange(ExchangeMic.Xlfx);
            Assert.AreEqual(ExchangeCountry.Malaysia, target.Country, "Xlfx");
            target = new Exchange(ExchangeMic.Xrbm);
            Assert.AreEqual(ExchangeCountry.Malaysia, target.Country, "Xrbm");
            target = new Exchange(ExchangeMic.Malx);
            Assert.AreEqual(ExchangeCountry.Maldives, target.Country, "Malx");
            target = new Exchange(ExchangeMic.Ewsm);
            Assert.AreEqual(ExchangeCountry.Malta, target.Country, "Ewsm");
            target = new Exchange(ExchangeMic.Xmal);
            Assert.AreEqual(ExchangeCountry.Malta, target.Country, "Xmal");
            target = new Exchange(ExchangeMic.Gbot);
            Assert.AreEqual(ExchangeCountry.Mauritius, target.Country, "Gbot");
            target = new Exchange(ExchangeMic.Xafx);
            Assert.AreEqual(ExchangeCountry.Mauritius, target.Country, "Xafx");
            target = new Exchange(ExchangeMic.Xmau);
            Assert.AreEqual(ExchangeCountry.Mauritius, target.Country, "Xmau");
            target = new Exchange(ExchangeMic.Cgmx);
            Assert.AreEqual(ExchangeCountry.Mexico, target.Country, "Cgmx");
            target = new Exchange(ExchangeMic.Xemd);
            Assert.AreEqual(ExchangeCountry.Mexico, target.Country, "Xemd");
            target = new Exchange(ExchangeMic.Xmex);
            Assert.AreEqual(ExchangeCountry.Mexico, target.Country, "Xmex");
            target = new Exchange(ExchangeMic.Xmol);
            Assert.AreEqual(ExchangeCountry.Moldova, target.Country, "Xmol");
            target = new Exchange(ExchangeMic.Xula);
            Assert.AreEqual(ExchangeCountry.Mongolia, target.Country, "Xula");
            target = new Exchange(ExchangeMic.Xmnx);
            Assert.AreEqual(ExchangeCountry.Montenegro, target.Country, "Xmnx");
            target = new Exchange(ExchangeMic.Xcas);
            Assert.AreEqual(ExchangeCountry.Morocco, target.Country, "Xcas");
            target = new Exchange(ExchangeMic.Xbvm);
            Assert.AreEqual(ExchangeCountry.Mozambique, target.Country, "Xbvm");
            target = new Exchange(ExchangeMic.Xnam);
            Assert.AreEqual(ExchangeCountry.Namibia, target.Country, "Xnam");
            target = new Exchange(ExchangeMic.Xnep);
            Assert.AreEqual(ExchangeCountry.Nepal, target.Country, "Xnep");
            target = new Exchange(ExchangeMic.Nzfx);
            Assert.AreEqual(ExchangeCountry.NewZealand, target.Country, "Nzfx");
            target = new Exchange(ExchangeMic.Xnze);
            Assert.AreEqual(ExchangeCountry.NewZealand, target.Country, "Xnze");
            target = new Exchange(ExchangeMic.Xman);
            Assert.AreEqual(ExchangeCountry.Nicaragua, target.Country, "Xman");
            target = new Exchange(ExchangeMic.Nasx);
            Assert.AreEqual(ExchangeCountry.Nigeria, target.Country, "Nasx");
            target = new Exchange(ExchangeMic.Xnsa);
            Assert.AreEqual(ExchangeCountry.Nigeria, target.Country, "Xnsa");
            target = new Exchange(ExchangeMic.Fish);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Fish");
            target = new Exchange(ExchangeMic.Fshx);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Fshx");
            target = new Exchange(ExchangeMic.Icas);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Icas");
            target = new Exchange(ExchangeMic.Nexo);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Nexo");
            target = new Exchange(ExchangeMic.Nops);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Nops");
            target = new Exchange(ExchangeMic.Norx);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Norx");
            target = new Exchange(ExchangeMic.Nosc);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Nosc");
            target = new Exchange(ExchangeMic.Notc);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Notc");
            target = new Exchange(ExchangeMic.Oslc);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Oslc");
            target = new Exchange(ExchangeMic.Xima);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Xima");
            target = new Exchange(ExchangeMic.Xosl);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Xosl");
            target = new Exchange(ExchangeMic.Merd);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Merd");
            target = new Exchange(ExchangeMic.Merk);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Merk");
            target = new Exchange(ExchangeMic.Nibr);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Nibr");
            target = new Exchange(ExchangeMic.Xoad);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Xoad");
            target = new Exchange(ExchangeMic.Xoam);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Xoam");
            target = new Exchange(ExchangeMic.Xoas);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Xoas");
            target = new Exchange(ExchangeMic.Xosc);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Xosc");
            target = new Exchange(ExchangeMic.Xosd);
            Assert.AreEqual(ExchangeCountry.Norway, target.Country, "Xosd");
            target = new Exchange(ExchangeMic.Xmus);
            Assert.AreEqual(ExchangeCountry.Oman, target.Country, "Xmus");
            target = new Exchange(ExchangeMic.Ncel);
            Assert.AreEqual(ExchangeCountry.Pakistan, target.Country, "Ncel");
            target = new Exchange(ExchangeMic.Xisl);
            Assert.AreEqual(ExchangeCountry.Pakistan, target.Country, "Xisl");
            target = new Exchange(ExchangeMic.Xkar);
            Assert.AreEqual(ExchangeCountry.Pakistan, target.Country, "Xkar");
            target = new Exchange(ExchangeMic.Xlah);
            Assert.AreEqual(ExchangeCountry.Pakistan, target.Country, "Xlah");
            target = new Exchange(ExchangeMic.Xpae);
            Assert.AreEqual(ExchangeCountry.PalestinianTerritory, target.Country, "Xpae");
            target = new Exchange(ExchangeMic.Xpty);
            Assert.AreEqual(ExchangeCountry.Panama, target.Country, "Xpty");
            target = new Exchange(ExchangeMic.Xpom);
            Assert.AreEqual(ExchangeCountry.PapuaNewGuinea, target.Country, "Xpom");
            target = new Exchange(ExchangeMic.Xvpa);
            Assert.AreEqual(ExchangeCountry.Paraguay, target.Country, "Xvpa");
            target = new Exchange(ExchangeMic.Xlim);
            Assert.AreEqual(ExchangeCountry.Peru, target.Country, "Xlim");
            target = new Exchange(ExchangeMic.Clph);
            Assert.AreEqual(ExchangeCountry.Philippines, target.Country, "Clph");
            target = new Exchange(ExchangeMic.Pdex);
            Assert.AreEqual(ExchangeCountry.Philippines, target.Country, "Pdex");
            target = new Exchange(ExchangeMic.Xphs);
            Assert.AreEqual(ExchangeCountry.Philippines, target.Country, "Xphs");
            target = new Exchange(ExchangeMic.Kdpw);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Kdpw");
            target = new Exchange(ExchangeMic.Xwar);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Xwar");
            target = new Exchange(ExchangeMic.Bosp);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Bosp");
            target = new Exchange(ExchangeMic.Plpd);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Plpd");
            target = new Exchange(ExchangeMic.Plpx);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Plpx");
            target = new Exchange(ExchangeMic.Rpwc);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Rpwc");
            target = new Exchange(ExchangeMic.Tbsp);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Tbsp");
            target = new Exchange(ExchangeMic.Wbcl);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Wbcl");
            target = new Exchange(ExchangeMic.Wbon);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Wbon");
            target = new Exchange(ExchangeMic.Wder);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Wder");
            target = new Exchange(ExchangeMic.Wetp);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Wetp");
            target = new Exchange(ExchangeMic.Wgas);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Wgas");
            target = new Exchange(ExchangeMic.Wind);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Wind");
            target = new Exchange(ExchangeMic.Wmtf);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Wmtf");
            target = new Exchange(ExchangeMic.Xnco);
            Assert.AreEqual(ExchangeCountry.Poland, target.Country, "Xnco");
            target = new Exchange(ExchangeMic.Omic);
            Assert.AreEqual(ExchangeCountry.Portugal, target.Country, "Omic");
            target = new Exchange(ExchangeMic.Opex);
            Assert.AreEqual(ExchangeCountry.Portugal, target.Country, "Opex");
            target = new Exchange(ExchangeMic.Xlis);
            Assert.AreEqual(ExchangeCountry.Portugal, target.Country, "Xlis");
            target = new Exchange(ExchangeMic.Alxl);
            Assert.AreEqual(ExchangeCountry.Portugal, target.Country, "Alxl");
            target = new Exchange(ExchangeMic.Enxl);
            Assert.AreEqual(ExchangeCountry.Portugal, target.Country, "Enxl");
            target = new Exchange(ExchangeMic.Mfox);
            Assert.AreEqual(ExchangeCountry.Portugal, target.Country, "Mfox");
            target = new Exchange(ExchangeMic.Omip);
            Assert.AreEqual(ExchangeCountry.Portugal, target.Country, "Omip");
            target = new Exchange(ExchangeMic.Wqxl);
            Assert.AreEqual(ExchangeCountry.Portugal, target.Country, "Wqxl");
            target = new Exchange(ExchangeMic.Dsmd);
            Assert.AreEqual(ExchangeCountry.Qatar, target.Country, "Dsmd");
            target = new Exchange(ExchangeMic.Trpx);
            Assert.AreEqual(ExchangeCountry.RepublicOfSeychelles, target.Country, "Trpx");
            target = new Exchange(ExchangeMic.Bmfx);
            Assert.AreEqual(ExchangeCountry.Romania, target.Country, "Bmfx");
            target = new Exchange(ExchangeMic.Bmfa);
            Assert.AreEqual(ExchangeCountry.Romania, target.Country, "Bmfa");
            target = new Exchange(ExchangeMic.Bmfm);
            Assert.AreEqual(ExchangeCountry.Romania, target.Country, "Bmfm");
            target = new Exchange(ExchangeMic.Sbmf);
            Assert.AreEqual(ExchangeCountry.Romania, target.Country, "Sbmf");
            target = new Exchange(ExchangeMic.Xbrm);
            Assert.AreEqual(ExchangeCountry.Romania, target.Country, "Xbrm");
            target = new Exchange(ExchangeMic.Xbse);
            Assert.AreEqual(ExchangeCountry.Romania, target.Country, "Xbse");
            target = new Exchange(ExchangeMic.Xbsd);
            Assert.AreEqual(ExchangeCountry.Romania, target.Country, "Xbsd");
            target = new Exchange(ExchangeMic.Xcan);
            Assert.AreEqual(ExchangeCountry.Romania, target.Country, "Xcan");
            target = new Exchange(ExchangeMic.Xras);
            Assert.AreEqual(ExchangeCountry.Romania, target.Country, "Xras");
            target = new Exchange(ExchangeMic.Xrpm);
            Assert.AreEqual(ExchangeCountry.Romania, target.Country, "Xrpm");
            target = new Exchange(ExchangeMic.Misx);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Misx");
            target = new Exchange(ExchangeMic.Rtsx);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Rtsx");
            target = new Exchange(ExchangeMic.Namx);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Namx");
            target = new Exchange(ExchangeMic.Rpdx);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Rpdx");
            target = new Exchange(ExchangeMic.Rusx);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Rusx");
            target = new Exchange(ExchangeMic.Spim);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Spim");
            target = new Exchange(ExchangeMic.Xmos);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Xmos");
            target = new Exchange(ExchangeMic.Xpet);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Xpet");
            target = new Exchange(ExchangeMic.Xpic);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Xpic");
            target = new Exchange(ExchangeMic.Xrus);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Xrus");
            target = new Exchange(ExchangeMic.Xsam);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Xsam");
            target = new Exchange(ExchangeMic.Xsib);
            Assert.AreEqual(ExchangeCountry.Russia, target.Country, "Xsib");
            target = new Exchange(ExchangeMic.Rotc);
            Assert.AreEqual(ExchangeCountry.Rwanda, target.Country, "Rotc");
            target = new Exchange(ExchangeMic.Rsex);
            Assert.AreEqual(ExchangeCountry.Rwanda, target.Country, "Rsex");
            target = new Exchange(ExchangeMic.Xecs);
            Assert.AreEqual(ExchangeCountry.SaintKittsNevis, target.Country, "Xecs");
            target = new Exchange(ExchangeMic.Xsau);
            Assert.AreEqual(ExchangeCountry.SaudiArabia, target.Country, "Xsau");
            target = new Exchange(ExchangeMic.Xbel);
            Assert.AreEqual(ExchangeCountry.Serbia, target.Country, "Xbel");
            target = new Exchange(ExchangeMic.Cltd);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Cltd");
            target = new Exchange(ExchangeMic.Ecal);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Ecal");
            target = new Exchange(ExchangeMic.Eeal);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Eeal");
            target = new Exchange(ExchangeMic.Ifsg);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Ifsg");
            target = new Exchange(ExchangeMic.Jadx);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Jadx");
            target = new Exchange(ExchangeMic.Smex);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Smex");
            target = new Exchange(ExchangeMic.Tfsa);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Tfsa");
            target = new Exchange(ExchangeMic.Xses);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Xses");
            target = new Exchange(ExchangeMic.Xsca);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Xsca");
            target = new Exchange(ExchangeMic.Xsce);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Xsce");
            target = new Exchange(ExchangeMic.Xsim);
            Assert.AreEqual(ExchangeCountry.Singapore, target.Country, "Xsim");
            target = new Exchange(ExchangeMic.Spxe);
            Assert.AreEqual(ExchangeCountry.Slovakia, target.Country, "Spxe");
            target = new Exchange(ExchangeMic.Xbra);
            Assert.AreEqual(ExchangeCountry.Slovakia, target.Country, "Xbra");
            target = new Exchange(ExchangeMic.Xlju);
            Assert.AreEqual(ExchangeCountry.Slovenia, target.Country, "Xlju");
            target = new Exchange(ExchangeMic.Xsop);
            Assert.AreEqual(ExchangeCountry.Slovenia, target.Country, "Xsop");
            target = new Exchange(ExchangeMic.Xjse);
            Assert.AreEqual(ExchangeCountry.SouthAfrica, target.Country, "Xjse");
            target = new Exchange(ExchangeMic.Altx);
            Assert.AreEqual(ExchangeCountry.SouthAfrica, target.Country, "Altx");
            target = new Exchange(ExchangeMic.Xbes);
            Assert.AreEqual(ExchangeCountry.SouthAfrica, target.Country, "Xbes");
            target = new Exchange(ExchangeMic.Xsaf);
            Assert.AreEqual(ExchangeCountry.SouthAfrica, target.Country, "Xsaf");
            target = new Exchange(ExchangeMic.Xsfa);
            Assert.AreEqual(ExchangeCountry.SouthAfrica, target.Country, "Xsfa");
            target = new Exchange(ExchangeMic.Yldx);
            Assert.AreEqual(ExchangeCountry.SouthAfrica, target.Country, "Yldx");
            target = new Exchange(ExchangeMic.Bmex);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Bmex");
            target = new Exchange(ExchangeMic.Bmcl);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Bmcl");
            target = new Exchange(ExchangeMic.Mabx);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Mabx");
            target = new Exchange(ExchangeMic.Marf);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Marf");
            target = new Exchange(ExchangeMic.Merf);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Merf");
            target = new Exchange(ExchangeMic.Send);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Send");
            target = new Exchange(ExchangeMic.Xbar);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xbar");
            target = new Exchange(ExchangeMic.Xbil);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xbil");
            target = new Exchange(ExchangeMic.Xdrf);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xdrf");
            target = new Exchange(ExchangeMic.Xlat);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xlat");
            target = new Exchange(ExchangeMic.Xmad);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xmad");
            target = new Exchange(ExchangeMic.Xmce);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xmce");
            target = new Exchange(ExchangeMic.Xmpw);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xmpw");
            target = new Exchange(ExchangeMic.Xmrv);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xmrv");
            target = new Exchange(ExchangeMic.Xval);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xval");
            target = new Exchange(ExchangeMic.Ibgh);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Ibgh");
            target = new Exchange(ExchangeMic.Mibg);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Mibg");
            target = new Exchange(ExchangeMic.Omel);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Omel");
            target = new Exchange(ExchangeMic.Pave);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Pave");
            target = new Exchange(ExchangeMic.Xdpa);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xdpa");
            target = new Exchange(ExchangeMic.Xnaf);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xnaf");
            target = new Exchange(ExchangeMic.Xsrm);
            Assert.AreEqual(ExchangeCountry.Spain, target.Country, "Xsrm");
            target = new Exchange(ExchangeMic.Xcol);
            Assert.AreEqual(ExchangeCountry.SriLanka, target.Country, "Xcol");
            target = new Exchange(ExchangeMic.Xkha);
            Assert.AreEqual(ExchangeCountry.Sudan, target.Country, "Xkha");
            target = new Exchange(ExchangeMic.Xswa);
            Assert.AreEqual(ExchangeCountry.Swaziland, target.Country, "Xswa");
            target = new Exchange(ExchangeMic.Cryd);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Cryd");
            target = new Exchange(ExchangeMic.Cryx);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Cryx");
            target = new Exchange(ExchangeMic.Sebx);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Sebx");
            target = new Exchange(ExchangeMic.Ensx);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Ensx");
            target = new Exchange(ExchangeMic.Xngm);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Xngm");
            target = new Exchange(ExchangeMic.Nmtf);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Nmtf");
            target = new Exchange(ExchangeMic.Xndx);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Xndx");
            target = new Exchange(ExchangeMic.Xnmr);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Xnmr");
            target = new Exchange(ExchangeMic.Xsat);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Xsat");
            target = new Exchange(ExchangeMic.Xsto);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Xsto");
            target = new Exchange(ExchangeMic.Csto);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Csto");
            target = new Exchange(ExchangeMic.Dnse);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Dnse");
            target = new Exchange(ExchangeMic.Dsto);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Dsto");
            target = new Exchange(ExchangeMic.Fnse);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Fnse");
            target = new Exchange(ExchangeMic.Xopv);
            Assert.AreEqual(ExchangeCountry.Sweden, target.Country, "Xopv");
            target = new Exchange(ExchangeMic.Aixe);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Aixe");
            target = new Exchange(ExchangeMic.Dots);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Dots");
            target = new Exchange(ExchangeMic.Euch);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Euch");
            target = new Exchange(ExchangeMic.Eurm);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Eurm");
            target = new Exchange(ExchangeMic.Eusc);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Eusc");
            target = new Exchange(ExchangeMic.Eusp);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Eusp");
            target = new Exchange(ExchangeMic.Stox);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Stox");
            target = new Exchange(ExchangeMic.Xscu);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Xscu");
            target = new Exchange(ExchangeMic.Xstv);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Xstv");
            target = new Exchange(ExchangeMic.Xstx);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Xstx");
            target = new Exchange(ExchangeMic.Ubsg);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Ubsg");
            target = new Exchange(ExchangeMic.Ubsc);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Ubsc");
            target = new Exchange(ExchangeMic.Ubsf);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Ubsf");
            target = new Exchange(ExchangeMic.Xbrn);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Xbrn");
            target = new Exchange(ExchangeMic.Xswx);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Xswx");
            target = new Exchange(ExchangeMic.Xbtr);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Xbtr");
            target = new Exchange(ExchangeMic.Xicb);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Xicb");
            target = new Exchange(ExchangeMic.Xqmh);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Xqmh");
            target = new Exchange(ExchangeMic.Xvtx);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Xvtx");
            target = new Exchange(ExchangeMic.Zkbx);
            Assert.AreEqual(ExchangeCountry.Switzerland, target.Country, "Zkbx");
            target = new Exchange(ExchangeMic.Xdse);
            Assert.AreEqual(ExchangeCountry.Syria, target.Country, "Xdse");
            target = new Exchange(ExchangeMic.Roco);
            Assert.AreEqual(ExchangeCountry.Taiwan, target.Country, "Roco");
            target = new Exchange(ExchangeMic.Xtaf);
            Assert.AreEqual(ExchangeCountry.Taiwan, target.Country, "Xtaf");
            target = new Exchange(ExchangeMic.Xtai);
            Assert.AreEqual(ExchangeCountry.Taiwan, target.Country, "Xtai");
            target = new Exchange(ExchangeMic.Xdar);
            Assert.AreEqual(ExchangeCountry.Tanzania, target.Country, "Xdar");
            target = new Exchange(ExchangeMic.Afet);
            Assert.AreEqual(ExchangeCountry.Thailand, target.Country, "Afet");
            target = new Exchange(ExchangeMic.Beex);
            Assert.AreEqual(ExchangeCountry.Thailand, target.Country, "Beex");
            target = new Exchange(ExchangeMic.Tfex);
            Assert.AreEqual(ExchangeCountry.Thailand, target.Country, "Tfex");
            target = new Exchange(ExchangeMic.Xbkk);
            Assert.AreEqual(ExchangeCountry.Thailand, target.Country, "Xbkk");
            target = new Exchange(ExchangeMic.Xbkf);
            Assert.AreEqual(ExchangeCountry.Thailand, target.Country, "Xbkf");
            target = new Exchange(ExchangeMic.Xmai);
            Assert.AreEqual(ExchangeCountry.Thailand, target.Country, "Xmai");
            target = new Exchange(ExchangeMic.Clmx);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Clmx");
            target = new Exchange(ExchangeMic.Hchc);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Hchc");
            target = new Exchange(ExchangeMic.Ndex);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Ndex");
            target = new Exchange(ExchangeMic.Ndxs);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Ndxs");
            target = new Exchange(ExchangeMic.Nlpx);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Nlpx");
            target = new Exchange(ExchangeMic.Tomx);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Tomx");
            target = new Exchange(ExchangeMic.Tomd);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Tomd");
            target = new Exchange(ExchangeMic.Xams);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Xams");
            target = new Exchange(ExchangeMic.Alxa);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Alxa");
            target = new Exchange(ExchangeMic.Tnla);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Tnla");
            target = new Exchange(ExchangeMic.Xeuc);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Xeuc");
            target = new Exchange(ExchangeMic.Xeue);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Xeue");
            target = new Exchange(ExchangeMic.Xeui);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Xeui");
            target = new Exchange(ExchangeMic.Xems);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Xems");
            target = new Exchange(ExchangeMic.Xhft);
            Assert.AreEqual(ExchangeCountry.Netherlands, target.Country, "Xhft");
            target = new Exchange(ExchangeMic.Xtrn);
            Assert.AreEqual(ExchangeCountry.TrinidadTobago, target.Country, "Xtrn");
            target = new Exchange(ExchangeMic.Xtun);
            Assert.AreEqual(ExchangeCountry.Tunisia, target.Country, "Xtun");
            target = new Exchange(ExchangeMic.Xist);
            Assert.AreEqual(ExchangeCountry.Turkey, target.Country, "Xist");
            target = new Exchange(ExchangeMic.Xdsm);
            Assert.AreEqual(ExchangeCountry.Turkey, target.Country, "Xdsm");
            target = new Exchange(ExchangeMic.Xeqy);
            Assert.AreEqual(ExchangeCountry.Turkey, target.Country, "Xeqy");
            target = new Exchange(ExchangeMic.Xfno);
            Assert.AreEqual(ExchangeCountry.Turkey, target.Country, "Xfno");
            target = new Exchange(ExchangeMic.Xpms);
            Assert.AreEqual(ExchangeCountry.Turkey, target.Country, "Xpms");
            target = new Exchange(ExchangeMic.Ultx);
            Assert.AreEqual(ExchangeCountry.Uganda, target.Country, "Ultx");
            target = new Exchange(ExchangeMic.Xuga);
            Assert.AreEqual(ExchangeCountry.Uganda, target.Country, "Xuga");
            target = new Exchange(ExchangeMic.Eese);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Eese");
            target = new Exchange(ExchangeMic.Pfts);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Pfts");
            target = new Exchange(ExchangeMic.Pftq);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Pftq");
            target = new Exchange(ExchangeMic.Sepe);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Sepe");
            target = new Exchange(ExchangeMic.Ukex);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Ukex");
            target = new Exchange(ExchangeMic.Xdfb);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Xdfb");
            target = new Exchange(ExchangeMic.Xkhr);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Xkhr");
            target = new Exchange(ExchangeMic.Xkie);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Xkie");
            target = new Exchange(ExchangeMic.Xkis);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Xkis");
            target = new Exchange(ExchangeMic.Xode);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Xode");
            target = new Exchange(ExchangeMic.Xpri);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Xpri");
            target = new Exchange(ExchangeMic.Xuax);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Xuax");
            target = new Exchange(ExchangeMic.Xukr);
            Assert.AreEqual(ExchangeCountry.Ukraine, target.Country, "Xukr");
            target = new Exchange(ExchangeMic.Dgcx);
            Assert.AreEqual(ExchangeCountry.ArabEmirates, target.Country, "Dgcx");
            target = new Exchange(ExchangeMic.Difx);
            Assert.AreEqual(ExchangeCountry.ArabEmirates, target.Country, "Difx");
            target = new Exchange(ExchangeMic.Dumx);
            Assert.AreEqual(ExchangeCountry.ArabEmirates, target.Country, "Dumx");
            target = new Exchange(ExchangeMic.Xads);
            Assert.AreEqual(ExchangeCountry.ArabEmirates, target.Country, "Xads");
            target = new Exchange(ExchangeMic.Xdfm);
            Assert.AreEqual(ExchangeCountry.ArabEmirates, target.Country, "Xdfm");
            target = new Exchange(ExchangeMic.Aqxe);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Aqxe");
            target = new Exchange(ExchangeMic.Balt);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Balt");
            target = new Exchange(ExchangeMic.Bltx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Bltx");
            target = new Exchange(ExchangeMic.Bcxe);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Bcxe");
            target = new Exchange(ExchangeMic.Batd);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Batd");
            target = new Exchange(ExchangeMic.Bate);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Bate");
            target = new Exchange(ExchangeMic.Batf);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Batf");
            target = new Exchange(ExchangeMic.Batp);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Batp");
            target = new Exchange(ExchangeMic.Botc);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Botc");
            target = new Exchange(ExchangeMic.Chid);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Chid");
            target = new Exchange(ExchangeMic.Chio);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Chio");
            target = new Exchange(ExchangeMic.Chix);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Chix");
            target = new Exchange(ExchangeMic.Bgci);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Bgci");
            target = new Exchange(ExchangeMic.Bgcb);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Bgcb");
            target = new Exchange(ExchangeMic.Blox);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Blox");
            target = new Exchange(ExchangeMic.Bmtf);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Bmtf");
            target = new Exchange(ExchangeMic.Boat);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Boat");
            target = new Exchange(ExchangeMic.Bosc);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Bosc");
            target = new Exchange(ExchangeMic.Brnx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Brnx");
            target = new Exchange(ExchangeMic.Caze);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Caze");
            target = new Exchange(ExchangeMic.Cco2);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Cco2");
            target = new Exchange(ExchangeMic.Cgme);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Cgme");
            target = new Exchange(ExchangeMic.Chev);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Chev");
            target = new Exchange(ExchangeMic.Blnk);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Blnk");
            target = new Exchange(ExchangeMic.Cmee);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Cmee");
            target = new Exchange(ExchangeMic.Cmec);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Cmec");
            target = new Exchange(ExchangeMic.Cmed);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Cmed");
            target = new Exchange(ExchangeMic.Cmmt);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Cmmt");
            target = new Exchange(ExchangeMic.Cseu);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Cseu");
            target = new Exchange(ExchangeMic.Cscf);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Cscf");
            target = new Exchange(ExchangeMic.Dbix);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Dbix");
            target = new Exchange(ExchangeMic.Dbcr);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Dbcr");
            target = new Exchange(ExchangeMic.Dbcx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Dbcx");
            target = new Exchange(ExchangeMic.Dbdc);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Dbdc");
            target = new Exchange(ExchangeMic.Dbmo);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Dbmo");
            target = new Exchange(ExchangeMic.Dbse);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Dbse");
            target = new Exchange(ExchangeMic.Encl);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Encl");
            target = new Exchange(ExchangeMic.Eqld);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Eqld");
            target = new Exchange(ExchangeMic.Exeu);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Exeu");
            target = new Exchange(ExchangeMic.Exbo);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Exbo");
            target = new Exchange(ExchangeMic.Excp);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Excp");
            target = new Exchange(ExchangeMic.Exmp);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Exmp");
            target = new Exchange(ExchangeMic.Exor);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Exor");
            target = new Exchange(ExchangeMic.Exsi);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Exsi");
            target = new Exchange(ExchangeMic.Exvp);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Exvp");
            target = new Exchange(ExchangeMic.Fair);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Fair");
            target = new Exchange(ExchangeMic.Gemx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Gemx");
            target = new Exchange(ExchangeMic.Gfic);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Gfic");
            target = new Exchange(ExchangeMic.Gfif);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Gfif");
            target = new Exchange(ExchangeMic.Gfin);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Gfin");
            target = new Exchange(ExchangeMic.Gfir);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Gfir");
            target = new Exchange(ExchangeMic.Gmeg);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Gmeg");
            target = new Exchange(ExchangeMic.Xgcx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xgcx");
            target = new Exchange(ExchangeMic.Xgdx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xgdx");
            target = new Exchange(ExchangeMic.Xgsx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xgsx");
            target = new Exchange(ExchangeMic.Xldx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xldx");
            target = new Exchange(ExchangeMic.Grif);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Grif");
            target = new Exchange(ExchangeMic.Grse);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Grse");
            target = new Exchange(ExchangeMic.Hsxe);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Hsxe");
            target = new Exchange(ExchangeMic.Ibal);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ibal");
            target = new Exchange(ExchangeMic.Icap);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Icap");
            target = new Exchange(ExchangeMic.Btee);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Btee");
            target = new Exchange(ExchangeMic.Ebsx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ebsx");
            target = new Exchange(ExchangeMic.Icah);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Icah");
            target = new Exchange(ExchangeMic.Icen);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Icen");
            target = new Exchange(ExchangeMic.Icse);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Icse");
            target = new Exchange(ExchangeMic.Ictq);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ictq");
            target = new Exchange(ExchangeMic.Isdx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Isdx");
            target = new Exchange(ExchangeMic.Wclk);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Wclk");
            target = new Exchange(ExchangeMic.Ifeu);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ifeu");
            target = new Exchange(ExchangeMic.Cxrt);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Cxrt");
            target = new Exchange(ExchangeMic.Ifen);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ifen");
            target = new Exchange(ExchangeMic.Ifll);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ifll");
            target = new Exchange(ExchangeMic.Iflo);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Iflo");
            target = new Exchange(ExchangeMic.Iflx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Iflx");
            target = new Exchange(ExchangeMic.Ifut);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ifut");
            target = new Exchange(ExchangeMic.Iswa);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Iswa");
            target = new Exchange(ExchangeMic.Kleu);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Kleu");
            target = new Exchange(ExchangeMic.Liqu);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Liqu");
            target = new Exchange(ExchangeMic.Liqf);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Liqf");
            target = new Exchange(ExchangeMic.Liqh);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Liqh");
            target = new Exchange(ExchangeMic.Lmax);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Lmax");
            target = new Exchange(ExchangeMic.Lmad);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Lmad");
            target = new Exchange(ExchangeMic.Lmae);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Lmae");
            target = new Exchange(ExchangeMic.Lmaf);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Lmaf");
            target = new Exchange(ExchangeMic.Lmao);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Lmao");
            target = new Exchange(ExchangeMic.Lmec);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Lmec");
            target = new Exchange(ExchangeMic.Lotc);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Lotc");
            target = new Exchange(ExchangeMic.Pldx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Pldx");
            target = new Exchange(ExchangeMic.Lppm);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Lppm");
            target = new Exchange(ExchangeMic.Mael);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mael");
            target = new Exchange(ExchangeMic.Mfgl);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mfgl");
            target = new Exchange(ExchangeMic.Mlxn);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mlxn");
            target = new Exchange(ExchangeMic.Mlax);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mlax");
            target = new Exchange(ExchangeMic.Mleu);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mleu");
            target = new Exchange(ExchangeMic.Mlve);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mlve");
            target = new Exchange(ExchangeMic.Msip);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Msip");
            target = new Exchange(ExchangeMic.Mytr);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mytr");
            target = new Exchange(ExchangeMic.N2Ex);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "N2Ex");
            target = new Exchange(ExchangeMic.Ndcm);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ndcm");
            target = new Exchange(ExchangeMic.Noff);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Noff");
            target = new Exchange(ExchangeMic.Nuro);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Nuro");
            target = new Exchange(ExchangeMic.Nurd);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Nurd");
            target = new Exchange(ExchangeMic.Xnlx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xnlx");
            target = new Exchange(ExchangeMic.Nxeu);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Nxeu");
            target = new Exchange(ExchangeMic.Peel);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Peel");
            target = new Exchange(ExchangeMic.Xphx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xphx");
            target = new Exchange(ExchangeMic.Xrsp);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xrsp");
            target = new Exchange(ExchangeMic.Pieu);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Pieu");
            target = new Exchange(ExchangeMic.Pirm);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Pirm");
            target = new Exchange(ExchangeMic.Qwix);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Qwix");
            target = new Exchange(ExchangeMic.Rbce);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Rbce");
            target = new Exchange(ExchangeMic.Rbsx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Rbsx");
            target = new Exchange(ExchangeMic.Rtsl);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Rtsl");
            target = new Exchange(ExchangeMic.Secf);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Secf");
            target = new Exchange(ExchangeMic.Sgmx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Sgmx");
            target = new Exchange(ExchangeMic.Shar);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Shar");
            target = new Exchange(ExchangeMic.Spec);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Spec");
            target = new Exchange(ExchangeMic.Sprz);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Sprz");
            target = new Exchange(ExchangeMic.Ssex);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ssex");
            target = new Exchange(ExchangeMic.Swap);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Swap");
            target = new Exchange(ExchangeMic.Tfsv);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tfsv");
            target = new Exchange(ExchangeMic.Tpie);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tpie");
            target = new Exchange(ExchangeMic.Trde);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Trde");
            target = new Exchange(ExchangeMic.Dbvx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Dbvx");
            target = new Exchange(ExchangeMic.Parx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Parx");
            target = new Exchange(ExchangeMic.Tcds);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tcds");
            target = new Exchange(ExchangeMic.Tfsg);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tfsg");
            target = new Exchange(ExchangeMic.Trdx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Trdx");
            target = new Exchange(ExchangeMic.Vola);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Vola");
            target = new Exchange(ExchangeMic.Treu);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Treu");
            target = new Exchange(ExchangeMic.Trqx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Trqx");
            target = new Exchange(ExchangeMic.Trqm);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Trqm");
            target = new Exchange(ExchangeMic.Ubsl);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ubsl");
            target = new Exchange(ExchangeMic.Ubse);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ubse");
            target = new Exchange(ExchangeMic.Ukgd);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ukgd");
            target = new Exchange(ExchangeMic.Ukpx);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Ukpx");
            target = new Exchange(ExchangeMic.Vega);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Vega");
            target = new Exchange(ExchangeMic.Wins);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Wins");
            target = new Exchange(ExchangeMic.Xalt);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xalt");
            target = new Exchange(ExchangeMic.Xcor);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xcor");
            target = new Exchange(ExchangeMic.Xgcl);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xgcl");
            target = new Exchange(ExchangeMic.Xlbm);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xlbm");
            target = new Exchange(ExchangeMic.Xlch);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xlch");
            target = new Exchange(ExchangeMic.Xldn);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xldn");
            target = new Exchange(ExchangeMic.Xlme);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xlme");
            target = new Exchange(ExchangeMic.Xlon);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xlon");
            target = new Exchange(ExchangeMic.Xlod);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xlod");
            target = new Exchange(ExchangeMic.Xmts);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xmts");
            target = new Exchange(ExchangeMic.Amts);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Amts");
            target = new Exchange(ExchangeMic.Bvuk);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Bvuk");
            target = new Exchange(ExchangeMic.Eacm);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Eacm");
            target = new Exchange(ExchangeMic.Emts);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Emts");
            target = new Exchange(ExchangeMic.Gmts);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Gmts");
            target = new Exchange(ExchangeMic.Hung);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Hung");
            target = new Exchange(ExchangeMic.Imts);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Imts");
            target = new Exchange(ExchangeMic.Mczk);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mczk");
            target = new Exchange(ExchangeMic.Mtsa);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mtsa");
            target = new Exchange(ExchangeMic.Mtsg);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mtsg");
            target = new Exchange(ExchangeMic.Mtss);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mtss");
            target = new Exchange(ExchangeMic.Mtsw);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Mtsw");
            target = new Exchange(ExchangeMic.Port);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Port");
            target = new Exchange(ExchangeMic.Prme);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Prme");
            target = new Exchange(ExchangeMic.Rmts);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Rmts");
            target = new Exchange(ExchangeMic.Smts);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Smts");
            target = new Exchange(ExchangeMic.Vmts);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Vmts");
            target = new Exchange(ExchangeMic.Xsga);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xsga");
            target = new Exchange(ExchangeMic.Xsmp);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xsmp");
            target = new Exchange(ExchangeMic.Xswb);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xswb");
            target = new Exchange(ExchangeMic.Xtup);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xtup");
            target = new Exchange(ExchangeMic.Tben);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tben");
            target = new Exchange(ExchangeMic.Tbla);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tbla");
            target = new Exchange(ExchangeMic.Tpcd);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tpcd");
            target = new Exchange(ExchangeMic.Tpeq);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tpeq");
            target = new Exchange(ExchangeMic.Tpfd);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tpfd");
            target = new Exchange(ExchangeMic.Tpre);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tpre");
            target = new Exchange(ExchangeMic.Tpsd);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tpsd");
            target = new Exchange(ExchangeMic.Tpsp);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Tpsp");
            target = new Exchange(ExchangeMic.Xtpe);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xtpe");
            target = new Exchange(ExchangeMic.Xubs);
            Assert.AreEqual(ExchangeCountry.UnitedKingdom, target.Country, "Xubs");
            target = new Exchange(ExchangeMic.Aats);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Aats");
            target = new Exchange(ExchangeMic.Aqua);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Aqua");
            target = new Exchange(ExchangeMic.Atdf);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Atdf");
            target = new Exchange(ExchangeMic.Core);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Core");
            target = new Exchange(ExchangeMic.Baml);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Baml");
            target = new Exchange(ExchangeMic.Mlco);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mlco");
            target = new Exchange(ExchangeMic.Mlvx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mlvx");
            target = new Exchange(ExchangeMic.Barx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Barx");
            target = new Exchange(ExchangeMic.Bard);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bard");
            target = new Exchange(ExchangeMic.Barl);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Barl");
            target = new Exchange(ExchangeMic.Bcdx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bcdx");
            target = new Exchange(ExchangeMic.Bats);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bats");
            target = new Exchange(ExchangeMic.Bato);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bato");
            target = new Exchange(ExchangeMic.Baty);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Baty");
            target = new Exchange(ExchangeMic.Byxd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Byxd");
            target = new Exchange(ExchangeMic.Bzxd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bzxd");
            target = new Exchange(ExchangeMic.Bbsf);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bbsf");
            target = new Exchange(ExchangeMic.Bgcf);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bgcf");
            target = new Exchange(ExchangeMic.Bgcd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bgcd");
            target = new Exchange(ExchangeMic.Bids);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bids");
            target = new Exchange(ExchangeMic.Bltd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bltd");
            target = new Exchange(ExchangeMic.Bpol);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bpol");
            target = new Exchange(ExchangeMic.Bndd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bndd");
            target = new Exchange(ExchangeMic.Bnyc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bnyc");
            target = new Exchange(ExchangeMic.Nyfx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nyfx");
            target = new Exchange(ExchangeMic.Vtex);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Vtex");
            target = new Exchange(ExchangeMic.Btec);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Btec");
            target = new Exchange(ExchangeMic.Icsu);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Icsu");
            target = new Exchange(ExchangeMic.Cded);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cded");
            target = new Exchange(ExchangeMic.Cgmi);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cgmi");
            target = new Exchange(ExchangeMic.Cblc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cblc");
            target = new Exchange(ExchangeMic.Cgmu);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cgmu");
            target = new Exchange(ExchangeMic.Cicx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cicx");
            target = new Exchange(ExchangeMic.Lqfi);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Lqfi");
            target = new Exchange(ExchangeMic.Cmsf);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cmsf");
            target = new Exchange(ExchangeMic.Cred);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cred");
            target = new Exchange(ExchangeMic.Caes);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Caes");
            target = new Exchange(ExchangeMic.Cslp);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cslp");
            target = new Exchange(ExchangeMic.Dbsx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Dbsx");
            target = new Exchange(ExchangeMic.Deal);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Deal");
            target = new Exchange(ExchangeMic.Edge);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Edge");
            target = new Exchange(ExchangeMic.Eddp);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Eddp");
            target = new Exchange(ExchangeMic.Edga);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Edga");
            target = new Exchange(ExchangeMic.Edgd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Edgd");
            target = new Exchange(ExchangeMic.Edgo);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Edgo");
            target = new Exchange(ExchangeMic.Edgx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Edgx");
            target = new Exchange(ExchangeMic.Eris);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Eris");
            target = new Exchange(ExchangeMic.Fast);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Fast");
            target = new Exchange(ExchangeMic.Finr);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Finr");
            target = new Exchange(ExchangeMic.Finn);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Finn");
            target = new Exchange(ExchangeMic.Fino);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Fino");
            target = new Exchange(ExchangeMic.Finy);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Finy");
            target = new Exchange(ExchangeMic.Ootc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ootc");
            target = new Exchange(ExchangeMic.Xadf);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xadf");
            target = new Exchange(ExchangeMic.Fxal);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Fxal");
            target = new Exchange(ExchangeMic.Fxcm);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Fxcm");
            target = new Exchange(ExchangeMic.G1xx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "G1xx");
            target = new Exchange(ExchangeMic.Gllc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Gllc");
            target = new Exchange(ExchangeMic.Glps);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Glps");
            target = new Exchange(ExchangeMic.Govx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Govx");
            target = new Exchange(ExchangeMic.Gree);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Gree");
            target = new Exchange(ExchangeMic.Gsef);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Gsef");
            target = new Exchange(ExchangeMic.Gtco);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Gtco");
            target = new Exchange(ExchangeMic.Hegx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Hegx");
            target = new Exchange(ExchangeMic.Hppo);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Hppo");
            target = new Exchange(ExchangeMic.Hsfx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Hsfx");
            target = new Exchange(ExchangeMic.Icel);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Icel");
            target = new Exchange(ExchangeMic.Iexg);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Iexg");
            target = new Exchange(ExchangeMic.Ifus);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ifus");
            target = new Exchange(ExchangeMic.Ices);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ices");
            target = new Exchange(ExchangeMic.Iepa);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Iepa");
            target = new Exchange(ExchangeMic.Ifed);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ifed");
            target = new Exchange(ExchangeMic.Imag);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Imag");
            target = new Exchange(ExchangeMic.Imbd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Imbd");
            target = new Exchange(ExchangeMic.Imcc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Imcc");
            target = new Exchange(ExchangeMic.Imcg);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Imcg");
            target = new Exchange(ExchangeMic.Imco);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Imco");
            target = new Exchange(ExchangeMic.Imcr);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Imcr");
            target = new Exchange(ExchangeMic.Imen);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Imen");
            target = new Exchange(ExchangeMic.Imeq);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Imeq");
            target = new Exchange(ExchangeMic.Imfx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Imfx");
            target = new Exchange(ExchangeMic.Imir);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Imir");
            target = new Exchange(ExchangeMic.Isda);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Isda");
            target = new Exchange(ExchangeMic.Itgi);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Itgi");
            target = new Exchange(ExchangeMic.Jefx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Jefx");
            target = new Exchange(ExchangeMic.Jpmx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Jpmx");
            target = new Exchange(ExchangeMic.Jsef);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Jsef");
            target = new Exchange(ExchangeMic.Jses);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Jses");
            target = new Exchange(ExchangeMic.Jsjx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Jsjx");
            target = new Exchange(ExchangeMic.Knig);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Knig");
            target = new Exchange(ExchangeMic.Kncm);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Kncm");
            target = new Exchange(ExchangeMic.Knem);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Knem");
            target = new Exchange(ExchangeMic.Knli);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Knli");
            target = new Exchange(ExchangeMic.Knmx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Knmx");
            target = new Exchange(ExchangeMic.Lasf);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Lasf");
            target = new Exchange(ExchangeMic.Levl);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Levl");
            target = new Exchange(ExchangeMic.Lius);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Lius");
            target = new Exchange(ExchangeMic.Lifi);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Lifi");
            target = new Exchange(ExchangeMic.Liuh);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Liuh");
            target = new Exchange(ExchangeMic.Lqed);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Lqed");
            target = new Exchange(ExchangeMic.Ltaa);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ltaa");
            target = new Exchange(ExchangeMic.Lmnx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Lmnx");
            target = new Exchange(ExchangeMic.Mihi);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mihi");
            target = new Exchange(ExchangeMic.Mprl);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mprl");
            target = new Exchange(ExchangeMic.Xmio);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xmio");
            target = new Exchange(ExchangeMic.Msco);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Msco");
            target = new Exchange(ExchangeMic.Mslp);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mslp");
            target = new Exchange(ExchangeMic.Mspl);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mspl");
            target = new Exchange(ExchangeMic.Msrp);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Msrp");
            target = new Exchange(ExchangeMic.Mstx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mstx");
            target = new Exchange(ExchangeMic.Mtus);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mtus");
            target = new Exchange(ExchangeMic.Bvus);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bvus");
            target = new Exchange(ExchangeMic.Mtsb);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mtsb");
            target = new Exchange(ExchangeMic.Mtxx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mtxx");
            target = new Exchange(ExchangeMic.Mtxa);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mtxa");
            target = new Exchange(ExchangeMic.Mtxc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mtxc");
            target = new Exchange(ExchangeMic.Mtxm);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mtxm");
            target = new Exchange(ExchangeMic.Mtxs);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mtxs");
            target = new Exchange(ExchangeMic.Nblx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nblx");
            target = new Exchange(ExchangeMic.Nfsc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nfsc");
            target = new Exchange(ExchangeMic.Nfsa);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nfsa");
            target = new Exchange(ExchangeMic.Nfsd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nfsd");
            target = new Exchange(ExchangeMic.Xstm);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xstm");
            target = new Exchange(ExchangeMic.Nmra);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nmra");
            target = new Exchange(ExchangeMic.Nodx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nodx");
            target = new Exchange(ExchangeMic.Nxus);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nxus");
            target = new Exchange(ExchangeMic.Nypc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nypc");
            target = new Exchange(ExchangeMic.Ollc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ollc");
            target = new Exchange(ExchangeMic.Opra);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Opra");
            target = new Exchange(ExchangeMic.Otcm);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Otcm");
            target = new Exchange(ExchangeMic.Cave);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cave");
            target = new Exchange(ExchangeMic.Otcb);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Otcb");
            target = new Exchange(ExchangeMic.Otcq);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Otcq");
            target = new Exchange(ExchangeMic.Pinc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Pinc");
            target = new Exchange(ExchangeMic.Pini);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Pini");
            target = new Exchange(ExchangeMic.Pinl);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Pinl");
            target = new Exchange(ExchangeMic.Pinx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Pinx");
            target = new Exchange(ExchangeMic.Psgm);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Psgm");
            target = new Exchange(ExchangeMic.Pdqx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Pdqx");
            target = new Exchange(ExchangeMic.Pdqd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Pdqd");
            target = new Exchange(ExchangeMic.Pipe);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Pipe");
            target = new Exchange(ExchangeMic.Prse);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Prse");
            target = new Exchange(ExchangeMic.Pulx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Pulx");
            target = new Exchange(ExchangeMic.Ricx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ricx");
            target = new Exchange(ExchangeMic.Ricd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ricd");
            target = new Exchange(ExchangeMic.Sgma);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Sgma");
            target = new Exchange(ExchangeMic.Shaw);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Shaw");
            target = new Exchange(ExchangeMic.Shad);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Shad");
            target = new Exchange(ExchangeMic.Soho);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Soho");
            target = new Exchange(ExchangeMic.Sstx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Sstx");
            target = new Exchange(ExchangeMic.Tera);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Tera");
            target = new Exchange(ExchangeMic.Tfsu);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Tfsu");
            target = new Exchange(ExchangeMic.Trck);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Trck");
            target = new Exchange(ExchangeMic.Trux);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Trux");
            target = new Exchange(ExchangeMic.Tru1);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Tru1");
            target = new Exchange(ExchangeMic.Tru2);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Tru2");
            target = new Exchange(ExchangeMic.Trwb);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Trwb");
            target = new Exchange(ExchangeMic.Dwsf);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Dwsf");
            target = new Exchange(ExchangeMic.Twsf);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Twsf");
            target = new Exchange(ExchangeMic.Tsbx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Tsbx");
            target = new Exchange(ExchangeMic.Tsef);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Tsef");
            target = new Exchange(ExchangeMic.Ubsa);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ubsa");
            target = new Exchange(ExchangeMic.Ubsp);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ubsp");
            target = new Exchange(ExchangeMic.Welx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Welx");
            target = new Exchange(ExchangeMic.Wsag);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Wsag");
            target = new Exchange(ExchangeMic.Xaqs);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xaqs");
            target = new Exchange(ExchangeMic.Xbox);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xbox");
            target = new Exchange(ExchangeMic.Xcbo);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xcbo");
            target = new Exchange(ExchangeMic.C2Ox);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "C2Ox");
            target = new Exchange(ExchangeMic.Cbsx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cbsx");
            target = new Exchange(ExchangeMic.Xcbf);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xcbf");
            target = new Exchange(ExchangeMic.Xcbt);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xcbt");
            target = new Exchange(ExchangeMic.Fcbt);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Fcbt");
            target = new Exchange(ExchangeMic.Xkbt);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xkbt");
            target = new Exchange(ExchangeMic.Xcff);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xcff");
            target = new Exchange(ExchangeMic.Xchi);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xchi");
            target = new Exchange(ExchangeMic.Xcis);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xcis");
            target = new Exchange(ExchangeMic.Xcme);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xcme");
            target = new Exchange(ExchangeMic.Cbts);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cbts");
            target = new Exchange(ExchangeMic.Cecs);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cecs");
            target = new Exchange(ExchangeMic.Cmes);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Cmes");
            target = new Exchange(ExchangeMic.Fcme);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Fcme");
            target = new Exchange(ExchangeMic.Glbx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Glbx");
            target = new Exchange(ExchangeMic.Nyms);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nyms");
            target = new Exchange(ExchangeMic.Ximm);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Ximm");
            target = new Exchange(ExchangeMic.Xiom);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xiom");
            target = new Exchange(ExchangeMic.Xcur);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xcur");
            target = new Exchange(ExchangeMic.Xelx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xelx");
            target = new Exchange(ExchangeMic.Xfci);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xfci");
            target = new Exchange(ExchangeMic.Xgmx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xgmx");
            target = new Exchange(ExchangeMic.Xins);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xins");
            target = new Exchange(ExchangeMic.Iblx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Iblx");
            target = new Exchange(ExchangeMic.Icbx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Icbx");
            target = new Exchange(ExchangeMic.Icro);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Icro");
            target = new Exchange(ExchangeMic.Iidx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Iidx");
            target = new Exchange(ExchangeMic.Mocx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mocx");
            target = new Exchange(ExchangeMic.Rcbx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Rcbx");
            target = new Exchange(ExchangeMic.Xisx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xisx");
            target = new Exchange(ExchangeMic.Gmni);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Gmni");
            target = new Exchange(ExchangeMic.Mcry);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Mcry");
            target = new Exchange(ExchangeMic.Xisa);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xisa");
            target = new Exchange(ExchangeMic.Xise);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xise");
            target = new Exchange(ExchangeMic.Xmer);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xmer");
            target = new Exchange(ExchangeMic.Xmge);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xmge");
            target = new Exchange(ExchangeMic.Xnas);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xnas");
            target = new Exchange(ExchangeMic.Bosd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Bosd");
            target = new Exchange(ExchangeMic.Espd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Espd");
            target = new Exchange(ExchangeMic.Nasd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nasd");
            target = new Exchange(ExchangeMic.Xbos);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xbos");
            target = new Exchange(ExchangeMic.Xbrt);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xbrt");
            target = new Exchange(ExchangeMic.Xbxo);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xbxo");
            target = new Exchange(ExchangeMic.Xncm);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xncm");
            target = new Exchange(ExchangeMic.Xndq);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xndq");
            target = new Exchange(ExchangeMic.Xngs);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xngs");
            target = new Exchange(ExchangeMic.Xnim);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xnim");
            target = new Exchange(ExchangeMic.Xnms);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xnms");
            target = new Exchange(ExchangeMic.Xpbt);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xpbt");
            target = new Exchange(ExchangeMic.Xphl);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xphl");
            target = new Exchange(ExchangeMic.Xpho);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xpho");
            target = new Exchange(ExchangeMic.Xpor);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xpor");
            target = new Exchange(ExchangeMic.Xpsx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xpsx");
            target = new Exchange(ExchangeMic.Xnym);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xnym");
            target = new Exchange(ExchangeMic.Xcec);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xcec");
            target = new Exchange(ExchangeMic.Xnye);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xnye");
            target = new Exchange(ExchangeMic.Xnyl);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xnyl");
            target = new Exchange(ExchangeMic.Xnys);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xnys");
            target = new Exchange(ExchangeMic.Aldp);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Aldp");
            target = new Exchange(ExchangeMic.Amxo);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Amxo");
            target = new Exchange(ExchangeMic.Arcd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Arcd");
            target = new Exchange(ExchangeMic.Arco);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Arco");
            target = new Exchange(ExchangeMic.Arcx);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Arcx");
            target = new Exchange(ExchangeMic.Nysd);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Nysd");
            target = new Exchange(ExchangeMic.Xase);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xase");
            target = new Exchange(ExchangeMic.Xnli);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xnli");
            target = new Exchange(ExchangeMic.Xoch);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xoch");
            target = new Exchange(ExchangeMic.Xotc);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xotc");
            target = new Exchange(ExchangeMic.Xsef);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xsef");
            target = new Exchange(ExchangeMic.Xwee);
            Assert.AreEqual(ExchangeCountry.UnitedStates, target.Country, "Xwee");
            target = new Exchange(ExchangeMic.Bvur);
            Assert.AreEqual(ExchangeCountry.Uruguay, target.Country, "Bvur");
            target = new Exchange(ExchangeMic.Xmnt);
            Assert.AreEqual(ExchangeCountry.Uruguay, target.Country, "Xmnt");
            target = new Exchange(ExchangeMic.Xcet);
            Assert.AreEqual(ExchangeCountry.Uzbekistan, target.Country, "Xcet");
            target = new Exchange(ExchangeMic.Xcue);
            Assert.AreEqual(ExchangeCountry.Uzbekistan, target.Country, "Xcue");
            target = new Exchange(ExchangeMic.Xkce);
            Assert.AreEqual(ExchangeCountry.Uzbekistan, target.Country, "Xkce");
            target = new Exchange(ExchangeMic.Xste);
            Assert.AreEqual(ExchangeCountry.Uzbekistan, target.Country, "Xste");
            target = new Exchange(ExchangeMic.Xuni);
            Assert.AreEqual(ExchangeCountry.Uzbekistan, target.Country, "Xuni");
            target = new Exchange(ExchangeMic.Gxma);
            Assert.AreEqual(ExchangeCountry.Vanuatu, target.Country, "Gxma");
            target = new Exchange(ExchangeMic.Bvca);
            Assert.AreEqual(ExchangeCountry.Venezuela, target.Country, "Bvca");
            target = new Exchange(ExchangeMic.Hstc);
            Assert.AreEqual(ExchangeCountry.VietNam, target.Country, "Hstc");
            target = new Exchange(ExchangeMic.Xhnx);
            Assert.AreEqual(ExchangeCountry.VietNam, target.Country, "Xhnx");
            target = new Exchange(ExchangeMic.Xstc);
            Assert.AreEqual(ExchangeCountry.VietNam, target.Country, "Xstc");
            target = new Exchange(ExchangeMic.Xlus);
            Assert.AreEqual(ExchangeCountry.Zambia, target.Country, "Xlus");
            target = new Exchange(ExchangeMic.Xzim);
            Assert.AreEqual(ExchangeCountry.Zimbabwe, target.Country, "Xzim");
            target = new Exchange(ExchangeMic.Xoff);
            Assert.AreEqual(ExchangeCountry.NoCountry, target.Country, "Xoff");
            target = new Exchange(ExchangeMic.Xxxx);
            Assert.AreEqual(ExchangeCountry.NoCountry, target.Country, "Xxxx");
            target = new Exchange(ExchangeMic.Xxxx);
            Assert.AreEqual(ExchangeCountry.NoCountry, target.Country, "Xxxx");
        }
        #endregion

        #region TimeZoneTest
        /// <summary>
        /// A test for TimeZone.
        /// </summary>
        [TestMethod]
        public void TimeZoneTest()
        {
            var target = new Exchange(ExchangeMic.Xtir);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xtir");
            target = new Exchange(ExchangeMic.Xalg);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xalg");
            target = new Exchange(ExchangeMic.Exaa);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Exaa");
            target = new Exchange(ExchangeMic.Xwbo);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xwbo");
            target = new Exchange(ExchangeMic.Wbah);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wbah");
            target = new Exchange(ExchangeMic.Wbdm);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wbdm");
            target = new Exchange(ExchangeMic.Wbgf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wbgf");
            target = new Exchange(ExchangeMic.Xceg);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xceg");
            target = new Exchange(ExchangeMic.Xvie);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xvie");
            target = new Exchange(ExchangeMic.Blpx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Blpx");
            target = new Exchange(ExchangeMic.Bmts);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Bmts");
            target = new Exchange(ExchangeMic.Mtsd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mtsd");
            target = new Exchange(ExchangeMic.Mtsf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mtsf");
            target = new Exchange(ExchangeMic.Xbru);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xbru");
            target = new Exchange(ExchangeMic.Alxb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Alxb");
            target = new Exchange(ExchangeMic.Enxb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Enxb");
            target = new Exchange(ExchangeMic.Mlxb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mlxb");
            target = new Exchange(ExchangeMic.Tnlb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Tnlb");
            target = new Exchange(ExchangeMic.Vpxb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Vpxb");
            target = new Exchange(ExchangeMic.Xbrd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xbrd");
            target = new Exchange(ExchangeMic.Xpra);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xpra");
            target = new Exchange(ExchangeMic.Xprm);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xprm");
            target = new Exchange(ExchangeMic.Xpxe);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xpxe");
            target = new Exchange(ExchangeMic.Xrmz);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xrmz");
            target = new Exchange(ExchangeMic.Xrmo);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xrmo");
            target = new Exchange(ExchangeMic.Dktc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dktc");
            target = new Exchange(ExchangeMic.Gxgr);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Gxgr");
            target = new Exchange(ExchangeMic.Gxgf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Gxgf");
            target = new Exchange(ExchangeMic.Gxgm);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Gxgm");
            target = new Exchange(ExchangeMic.Npga);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Npga");
            target = new Exchange(ExchangeMic.Xcse);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xcse");
            target = new Exchange(ExchangeMic.Dcse);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dcse");
            target = new Exchange(ExchangeMic.Dndk);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dndk");
            target = new Exchange(ExchangeMic.Fndk);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Fndk");
            target = new Exchange(ExchangeMic.Coal);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Coal");
            target = new Exchange(ExchangeMic.Epex);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Epex");
            target = new Exchange(ExchangeMic.Fmts);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Fmts");
            target = new Exchange(ExchangeMic.Gmtf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Gmtf");
            target = new Exchange(ExchangeMic.Lchc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Lchc");
            target = new Exchange(ExchangeMic.Xafr);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xafr");
            target = new Exchange(ExchangeMic.Xbln);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xbln");
            target = new Exchange(ExchangeMic.Xpar);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xpar");
            target = new Exchange(ExchangeMic.Alxp);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Alxp");
            target = new Exchange(ExchangeMic.Mtch);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mtch");
            target = new Exchange(ExchangeMic.Xmat);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmat");
            target = new Exchange(ExchangeMic.Xmli);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmli");
            target = new Exchange(ExchangeMic.Xmon);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmon");
            target = new Exchange(ExchangeMic.Xpow);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xpow");
            target = new Exchange(ExchangeMic.Xpsf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xpsf");
            target = new Exchange(ExchangeMic.X360T);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "X360T");
            target = new Exchange(ExchangeMic.Cats);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cats");
            target = new Exchange(ExchangeMic.Dbox);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dbox");
            target = new Exchange(ExchangeMic.Auto);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Auto");
            target = new Exchange(ExchangeMic.Tgat);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Tgat");
            target = new Exchange(ExchangeMic.Xgat);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xgat");
            target = new Exchange(ExchangeMic.Xgrm);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xgrm");
            target = new Exchange(ExchangeMic.Xber);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xber");
            target = new Exchange(ExchangeMic.Bera);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Bera");
            target = new Exchange(ExchangeMic.Berb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Berb");
            target = new Exchange(ExchangeMic.Berc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Berc");
            target = new Exchange(ExchangeMic.Eqta);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Eqta");
            target = new Exchange(ExchangeMic.Eqtb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Eqtb");
            target = new Exchange(ExchangeMic.Eqtc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Eqtc");
            target = new Exchange(ExchangeMic.Eqtd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Eqtd");
            target = new Exchange(ExchangeMic.Xeqt);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeqt");
            target = new Exchange(ExchangeMic.Zobx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Zobx");
            target = new Exchange(ExchangeMic.Xdus);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xdus");
            target = new Exchange(ExchangeMic.Dusa);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dusa");
            target = new Exchange(ExchangeMic.Dusb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dusb");
            target = new Exchange(ExchangeMic.Dusc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dusc");
            target = new Exchange(ExchangeMic.Dusd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dusd");
            target = new Exchange(ExchangeMic.Xqtx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xqtx");
            target = new Exchange(ExchangeMic.Xecb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xecb");
            target = new Exchange(ExchangeMic.Xecc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xecc");
            target = new Exchange(ExchangeMic.Xeee);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeee");
            target = new Exchange(ExchangeMic.Xeeo);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeeo");
            target = new Exchange(ExchangeMic.Xeer);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeer");
            target = new Exchange(ExchangeMic.Xeum);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeum");
            target = new Exchange(ExchangeMic.Xeur);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeur");
            target = new Exchange(ExchangeMic.Ecag);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Ecag");
            target = new Exchange(ExchangeMic.Xere);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xere");
            target = new Exchange(ExchangeMic.Xert);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xert");
            target = new Exchange(ExchangeMic.Xeub);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeub");
            target = new Exchange(ExchangeMic.Xeup);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeup");
            target = new Exchange(ExchangeMic.Xfra);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xfra");
            target = new Exchange(ExchangeMic.Fraa);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Fraa");
            target = new Exchange(ExchangeMic.Frab);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Frab");
            target = new Exchange(ExchangeMic.Frad);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Frad");
            target = new Exchange(ExchangeMic.Xdbc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xdbc");
            target = new Exchange(ExchangeMic.Xdbv);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xdbv");
            target = new Exchange(ExchangeMic.Xdbx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xdbx");
            target = new Exchange(ExchangeMic.Xeta);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeta");
            target = new Exchange(ExchangeMic.Xetb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xetb");
            target = new Exchange(ExchangeMic.Xetr);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xetr");
            target = new Exchange(ExchangeMic.Xnew);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xnew");
            target = new Exchange(ExchangeMic.Xham);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xham");
            target = new Exchange(ExchangeMic.Hama);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Hama");
            target = new Exchange(ExchangeMic.Hamb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Hamb");
            target = new Exchange(ExchangeMic.Xhan);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xhan");
            target = new Exchange(ExchangeMic.Hana);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Hana");
            target = new Exchange(ExchangeMic.Hanb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Hanb");
            target = new Exchange(ExchangeMic.Xinv);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xinv");
            target = new Exchange(ExchangeMic.Xmun);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmun");
            target = new Exchange(ExchangeMic.Muna);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Muna");
            target = new Exchange(ExchangeMic.Munb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Munb");
            target = new Exchange(ExchangeMic.Munc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Munc");
            target = new Exchange(ExchangeMic.Mund);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mund");
            target = new Exchange(ExchangeMic.Xsco);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xsco");
            target = new Exchange(ExchangeMic.Xsc1);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xsc1");
            target = new Exchange(ExchangeMic.Xsc2);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xsc2");
            target = new Exchange(ExchangeMic.Xsc3);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xsc3");
            target = new Exchange(ExchangeMic.Xstu);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xstu");
            target = new Exchange(ExchangeMic.Euwx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Euwx");
            target = new Exchange(ExchangeMic.Stua);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Stua");
            target = new Exchange(ExchangeMic.Stub);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Stub");
            target = new Exchange(ExchangeMic.Xxsc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xxsc");
            target = new Exchange(ExchangeMic.Cgit);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cgit");
            target = new Exchange(ExchangeMic.Cgcm);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cgcm");
            target = new Exchange(ExchangeMic.Cgdb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cgdb");
            target = new Exchange(ExchangeMic.Cgeb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cgeb");
            target = new Exchange(ExchangeMic.Cggd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cggd");
            target = new Exchange(ExchangeMic.Cgnd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cgnd");
            target = new Exchange(ExchangeMic.Cgqd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cgqd");
            target = new Exchange(ExchangeMic.Cgqt);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cgqt");
            target = new Exchange(ExchangeMic.Cgtr);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cgtr");
            target = new Exchange(ExchangeMic.Emid);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Emid");
            target = new Exchange(ExchangeMic.Emdr);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Emdr");
            target = new Exchange(ExchangeMic.Emir);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Emir");
            target = new Exchange(ExchangeMic.Etlx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Etlx");
            target = new Exchange(ExchangeMic.Hmtf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Hmtf");
            target = new Exchange(ExchangeMic.Hmod);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Hmod");
            target = new Exchange(ExchangeMic.Mtsc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mtsc");
            target = new Exchange(ExchangeMic.Bond);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Bond");
            target = new Exchange(ExchangeMic.Mtsm);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mtsm");
            target = new Exchange(ExchangeMic.Ssob);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Ssob");
            target = new Exchange(ExchangeMic.Xgme);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xgme");
            target = new Exchange(ExchangeMic.Xmil);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmil");
            target = new Exchange(ExchangeMic.Etfp);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Etfp");
            target = new Exchange(ExchangeMic.Mivx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mivx");
            target = new Exchange(ExchangeMic.Motx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Motx");
            target = new Exchange(ExchangeMic.Mtaa);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mtaa");
            target = new Exchange(ExchangeMic.Mtah);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mtah");
            target = new Exchange(ExchangeMic.Sedx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Sedx");
            target = new Exchange(ExchangeMic.Xaim);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xaim");
            target = new Exchange(ExchangeMic.Xdmi);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xdmi");
            target = new Exchange(ExchangeMic.Xmot);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmot");
            target = new Exchange(ExchangeMic.Spxe);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Spxe");
            target = new Exchange(ExchangeMic.Xbra);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xbra");
            target = new Exchange(ExchangeMic.Bmex);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Bmex");
            target = new Exchange(ExchangeMic.Bmcl);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Bmcl");
            target = new Exchange(ExchangeMic.Mabx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mabx");
            target = new Exchange(ExchangeMic.Marf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Marf");
            target = new Exchange(ExchangeMic.Merf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Merf");
            target = new Exchange(ExchangeMic.Send);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Send");
            target = new Exchange(ExchangeMic.Xbar);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xbar");
            target = new Exchange(ExchangeMic.Xbil);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xbil");
            target = new Exchange(ExchangeMic.Xdrf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xdrf");
            target = new Exchange(ExchangeMic.Xlat);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xlat");
            target = new Exchange(ExchangeMic.Xmad);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmad");
            target = new Exchange(ExchangeMic.Xmce);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmce");
            target = new Exchange(ExchangeMic.Xmpw);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmpw");
            target = new Exchange(ExchangeMic.Xmrv);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmrv");
            target = new Exchange(ExchangeMic.Xval);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xval");
            target = new Exchange(ExchangeMic.Ibgh);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Ibgh");
            target = new Exchange(ExchangeMic.Mibg);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mibg");
            target = new Exchange(ExchangeMic.Omel);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Omel");
            target = new Exchange(ExchangeMic.Pave);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Pave");
            target = new Exchange(ExchangeMic.Xdpa);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xdpa");
            target = new Exchange(ExchangeMic.Xnaf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xnaf");
            target = new Exchange(ExchangeMic.Xsrm);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xsrm");
            target = new Exchange(ExchangeMic.Cryd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cryd");
            target = new Exchange(ExchangeMic.Cryx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cryx");
            target = new Exchange(ExchangeMic.Sebx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Sebx");
            target = new Exchange(ExchangeMic.Ensx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Ensx");
            target = new Exchange(ExchangeMic.Xngm);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xngm");
            target = new Exchange(ExchangeMic.Nmtf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Nmtf");
            target = new Exchange(ExchangeMic.Xndx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xndx");
            target = new Exchange(ExchangeMic.Xnmr);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xnmr");
            target = new Exchange(ExchangeMic.Xsat);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xsat");
            target = new Exchange(ExchangeMic.Xsto);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xsto");
            target = new Exchange(ExchangeMic.Csto);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Csto");
            target = new Exchange(ExchangeMic.Dnse);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dnse");
            target = new Exchange(ExchangeMic.Dsto);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dsto");
            target = new Exchange(ExchangeMic.Fnse);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Fnse");
            target = new Exchange(ExchangeMic.Xopv);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xopv");
            target = new Exchange(ExchangeMic.Aixe);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Aixe");
            target = new Exchange(ExchangeMic.Dots);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Dots");
            target = new Exchange(ExchangeMic.Euch);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Euch");
            target = new Exchange(ExchangeMic.Eurm);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Eurm");
            target = new Exchange(ExchangeMic.Eusc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Eusc");
            target = new Exchange(ExchangeMic.Eusp);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Eusp");
            target = new Exchange(ExchangeMic.Stox);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Stox");
            target = new Exchange(ExchangeMic.Xscu);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xscu");
            target = new Exchange(ExchangeMic.Xstv);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xstv");
            target = new Exchange(ExchangeMic.Xstx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xstx");
            target = new Exchange(ExchangeMic.Ubsg);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Ubsg");
            target = new Exchange(ExchangeMic.Ubsc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Ubsc");
            target = new Exchange(ExchangeMic.Ubsf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Ubsf");
            target = new Exchange(ExchangeMic.Xbrn);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xbrn");
            target = new Exchange(ExchangeMic.Xswx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xswx");
            target = new Exchange(ExchangeMic.Xbtr);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xbtr");
            target = new Exchange(ExchangeMic.Xicb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xicb");
            target = new Exchange(ExchangeMic.Xqmh);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xqmh");
            target = new Exchange(ExchangeMic.Xvtx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xvtx");
            target = new Exchange(ExchangeMic.Zkbx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Zkbx");
            target = new Exchange(ExchangeMic.Clmx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Clmx");
            target = new Exchange(ExchangeMic.Hchc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Hchc");
            target = new Exchange(ExchangeMic.Ndex);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Ndex");
            target = new Exchange(ExchangeMic.Ndxs);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Ndxs");
            target = new Exchange(ExchangeMic.Nlpx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Nlpx");
            target = new Exchange(ExchangeMic.Tomx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Tomx");
            target = new Exchange(ExchangeMic.Tomd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Tomd");
            target = new Exchange(ExchangeMic.Xams);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xams");
            target = new Exchange(ExchangeMic.Alxa);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Alxa");
            target = new Exchange(ExchangeMic.Tnla);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Tnla");
            target = new Exchange(ExchangeMic.Xeuc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeuc");
            target = new Exchange(ExchangeMic.Xeue);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeue");
            target = new Exchange(ExchangeMic.Xeui);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xeui");
            target = new Exchange(ExchangeMic.Xems);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xems");
            target = new Exchange(ExchangeMic.Xhft);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xhft");
            target = new Exchange(ExchangeMic.Xbel);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xbel");
            target = new Exchange(ExchangeMic.Nasx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Nasx");
            target = new Exchange(ExchangeMic.Xnsa);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xnsa");
            target = new Exchange(ExchangeMic.Kdpw);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Kdpw");
            target = new Exchange(ExchangeMic.Xwar);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xwar");
            target = new Exchange(ExchangeMic.Bosp);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Bosp");
            target = new Exchange(ExchangeMic.Plpd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Plpd");
            target = new Exchange(ExchangeMic.Plpx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Plpx");
            target = new Exchange(ExchangeMic.Rpwc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Rpwc");
            target = new Exchange(ExchangeMic.Tbsp);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Tbsp");
            target = new Exchange(ExchangeMic.Wbcl);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wbcl");
            target = new Exchange(ExchangeMic.Wbon);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wbon");
            target = new Exchange(ExchangeMic.Wder);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wder");
            target = new Exchange(ExchangeMic.Wetp);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wetp");
            target = new Exchange(ExchangeMic.Wgas);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wgas");
            target = new Exchange(ExchangeMic.Wind);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wind");
            target = new Exchange(ExchangeMic.Wmtf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wmtf");
            target = new Exchange(ExchangeMic.Xnco);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xnco");
            target = new Exchange(ExchangeMic.Fish);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Fish");
            target = new Exchange(ExchangeMic.Fshx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Fshx");
            target = new Exchange(ExchangeMic.Icas);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Icas");
            target = new Exchange(ExchangeMic.Nexo);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Nexo");
            target = new Exchange(ExchangeMic.Nops);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Nops");
            target = new Exchange(ExchangeMic.Norx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Norx");
            target = new Exchange(ExchangeMic.Nosc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Nosc");
            target = new Exchange(ExchangeMic.Notc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Notc");
            target = new Exchange(ExchangeMic.Oslc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Oslc");
            target = new Exchange(ExchangeMic.Xima);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xima");
            target = new Exchange(ExchangeMic.Xosl);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xosl");
            target = new Exchange(ExchangeMic.Merd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Merd");
            target = new Exchange(ExchangeMic.Merk);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Merk");
            target = new Exchange(ExchangeMic.Nibr);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Nibr");
            target = new Exchange(ExchangeMic.Xoad);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xoad");
            target = new Exchange(ExchangeMic.Xoam);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xoam");
            target = new Exchange(ExchangeMic.Xoas);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xoas");
            target = new Exchange(ExchangeMic.Xosc);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xosc");
            target = new Exchange(ExchangeMic.Xosd);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xosd");
            target = new Exchange(ExchangeMic.Xnam);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xnam");
            target = new Exchange(ExchangeMic.Xmnx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmnx");
            target = new Exchange(ExchangeMic.Ewsm);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Ewsm");
            target = new Exchange(ExchangeMic.Xmal);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmal");
            target = new Exchange(ExchangeMic.Xmae);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xmae");
            target = new Exchange(ExchangeMic.Cclx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Cclx");
            target = new Exchange(ExchangeMic.Xlux);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xlux");
            target = new Exchange(ExchangeMic.Emtf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Emtf");
            target = new Exchange(ExchangeMic.Xves);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xves");
            target = new Exchange(ExchangeMic.Beta);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Beta");
            target = new Exchange(ExchangeMic.Hupx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Hupx");
            target = new Exchange(ExchangeMic.Kccp);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Kccp");
            target = new Exchange(ExchangeMic.Xbud);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xbud");
            target = new Exchange(ExchangeMic.Xgas);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xgas");
            target = new Exchange(ExchangeMic.Xblb);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xblb");
            target = new Exchange(ExchangeMic.Blbf);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Blbf");
            target = new Exchange(ExchangeMic.Xsse);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xsse");
            target = new Exchange(ExchangeMic.Xcro);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xcro");
            target = new Exchange(ExchangeMic.Xtrz);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xtrz");
            target = new Exchange(ExchangeMic.Xzag);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xzag");
            target = new Exchange(ExchangeMic.Xzam);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xzam");
            target = new Exchange(ExchangeMic.Xtun);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xtun");
            target = new Exchange(ExchangeMic.Xdsx);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xdsx");
            target = new Exchange(ExchangeMic.Bcse);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Bcse");
            target = new Exchange(ExchangeMic.Xcys);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xcys");
            target = new Exchange(ExchangeMic.Xcyo);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xcyo");
            target = new Exchange(ExchangeMic.Xecm);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xecm");
            target = new Exchange(ExchangeMic.Xtal);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xtal");
            target = new Exchange(ExchangeMic.Fnee);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Fnee");
            target = new Exchange(ExchangeMic.Asex);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Asex");
            target = new Exchange(ExchangeMic.Enax);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Enax");
            target = new Exchange(ExchangeMic.Euax);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Euax");
            target = new Exchange(ExchangeMic.Hotc);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Hotc");
            target = new Exchange(ExchangeMic.Xade);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xade");
            target = new Exchange(ExchangeMic.Xath);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xath");
            target = new Exchange(ExchangeMic.Xipo);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xipo");
            target = new Exchange(ExchangeMic.Hdat);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Hdat");
            target = new Exchange(ExchangeMic.Hemo);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Hemo");
            target = new Exchange(ExchangeMic.Fgex);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Fgex");
            target = new Exchange(ExchangeMic.Xhel);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xhel");
            target = new Exchange(ExchangeMic.Dhel);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Dhel");
            target = new Exchange(ExchangeMic.Dnfi);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Dnfi");
            target = new Exchange(ExchangeMic.Fnfi);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Fnfi");
            target = new Exchange(ExchangeMic.Xtae);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xtae");
            target = new Exchange(ExchangeMic.Xbey);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xbey");
            target = new Exchange(ExchangeMic.Xris);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xris");
            target = new Exchange(ExchangeMic.Fnlv);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Fnlv");
            target = new Exchange(ExchangeMic.Bapx);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Bapx");
            target = new Exchange(ExchangeMic.Getb);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Getb");
            target = new Exchange(ExchangeMic.Xlit);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xlit");
            target = new Exchange(ExchangeMic.Fnlt);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Fnlt");
            target = new Exchange(ExchangeMic.Xmol);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xmol");
            target = new Exchange(ExchangeMic.Xjse);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xjse");
            target = new Exchange(ExchangeMic.Altx);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Altx");
            target = new Exchange(ExchangeMic.Xbes);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xbes");
            target = new Exchange(ExchangeMic.Xsaf);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xsaf");
            target = new Exchange(ExchangeMic.Xsfa);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xsfa");
            target = new Exchange(ExchangeMic.Yldx);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Yldx");
            target = new Exchange(ExchangeMic.Xist);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xist");
            target = new Exchange(ExchangeMic.Xdsm);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xdsm");
            target = new Exchange(ExchangeMic.Xeqy);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xeqy");
            target = new Exchange(ExchangeMic.Xfno);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xfno");
            target = new Exchange(ExchangeMic.Xpms);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xpms");
            target = new Exchange(ExchangeMic.Eese);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Eese");
            target = new Exchange(ExchangeMic.Pfts);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Pfts");
            target = new Exchange(ExchangeMic.Pftq);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Pftq");
            target = new Exchange(ExchangeMic.Sepe);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Sepe");
            target = new Exchange(ExchangeMic.Ukex);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Ukex");
            target = new Exchange(ExchangeMic.Xdfb);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xdfb");
            target = new Exchange(ExchangeMic.Xkhr);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xkhr");
            target = new Exchange(ExchangeMic.Xkie);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xkie");
            target = new Exchange(ExchangeMic.Xkis);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xkis");
            target = new Exchange(ExchangeMic.Xode);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xode");
            target = new Exchange(ExchangeMic.Xpri);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xpri");
            target = new Exchange(ExchangeMic.Xuax);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xuax");
            target = new Exchange(ExchangeMic.Xukr);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xukr");
            target = new Exchange(ExchangeMic.Bmfx);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Bmfx");
            target = new Exchange(ExchangeMic.Bmfa);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Bmfa");
            target = new Exchange(ExchangeMic.Bmfm);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Bmfm");
            target = new Exchange(ExchangeMic.Sbmf);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Sbmf");
            target = new Exchange(ExchangeMic.Xbrm);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xbrm");
            target = new Exchange(ExchangeMic.Xbse);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xbse");
            target = new Exchange(ExchangeMic.Xbsd);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xbsd");
            target = new Exchange(ExchangeMic.Xcan);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xcan");
            target = new Exchange(ExchangeMic.Xras);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xras");
            target = new Exchange(ExchangeMic.Xrpm);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xrpm");
            target = new Exchange(ExchangeMic.Rotc);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Rotc");
            target = new Exchange(ExchangeMic.Rsex);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Rsex");
            target = new Exchange(ExchangeMic.Xpae);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xpae");
            target = new Exchange(ExchangeMic.Xamm);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xamm");
            target = new Exchange(ExchangeMic.Nilx);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Nilx");
            target = new Exchange(ExchangeMic.Xcai);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xcai");
            target = new Exchange(ExchangeMic.Ibex);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Ibex");
            target = new Exchange(ExchangeMic.Xbul);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xbul");
            target = new Exchange(ExchangeMic.Xswa);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xswa");
            target = new Exchange(ExchangeMic.Xbvm);
            Assert.AreEqual(new TimeSpan(2, 0, 0), target.TimeZone, "Xbvm");
            target = new Exchange(ExchangeMic.Misx);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Misx");
            target = new Exchange(ExchangeMic.Rtsx);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Rtsx");
            target = new Exchange(ExchangeMic.Namx);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Namx");
            target = new Exchange(ExchangeMic.Rpdx);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Rpdx");
            target = new Exchange(ExchangeMic.Rusx);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Rusx");
            target = new Exchange(ExchangeMic.Spim);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Spim");
            target = new Exchange(ExchangeMic.Xmos);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xmos");
            target = new Exchange(ExchangeMic.Xpet);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xpet");
            target = new Exchange(ExchangeMic.Xpic);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xpic");
            target = new Exchange(ExchangeMic.Xrus);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xrus");
            target = new Exchange(ExchangeMic.Xsam);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xsam");
            target = new Exchange(ExchangeMic.Xsib);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xsib");
            target = new Exchange(ExchangeMic.Dsmd);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Dsmd");
            target = new Exchange(ExchangeMic.Xkuw);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xkuw");
            target = new Exchange(ExchangeMic.Xnai);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xnai");
            target = new Exchange(ExchangeMic.Xiqs);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xiqs");
            target = new Exchange(ExchangeMic.Bfex);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Bfex");
            target = new Exchange(ExchangeMic.Xbah);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xbah");
            target = new Exchange(ExchangeMic.Ultx);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Ultx");
            target = new Exchange(ExchangeMic.Xuga);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xuga");
            target = new Exchange(ExchangeMic.Xdar);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xdar");
            target = new Exchange(ExchangeMic.Xkha);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xkha");
            target = new Exchange(ExchangeMic.Xmdg);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xmdg");
            target = new Exchange(ExchangeMic.Xdse);
            Assert.AreEqual(new TimeSpan(3, 0, 0), target.TimeZone, "Xdse");
            target = new Exchange(ExchangeMic.Imex);
            Assert.AreEqual(new TimeSpan(3, 30, 0), target.TimeZone, "Imex");
            target = new Exchange(ExchangeMic.Xteh);
            Assert.AreEqual(new TimeSpan(3, 30, 0), target.TimeZone, "Xteh");
            target = new Exchange(ExchangeMic.Dgcx);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Dgcx");
            target = new Exchange(ExchangeMic.Difx);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Difx");
            target = new Exchange(ExchangeMic.Dumx);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Dumx");
            target = new Exchange(ExchangeMic.Xads);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Xads");
            target = new Exchange(ExchangeMic.Xdfm);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Xdfm");
            target = new Exchange(ExchangeMic.Xecs);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Xecs");
            target = new Exchange(ExchangeMic.Gbot);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Gbot");
            target = new Exchange(ExchangeMic.Xafx);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Xafx");
            target = new Exchange(ExchangeMic.Xmau);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Xmau");
            target = new Exchange(ExchangeMic.Xarm);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Xarm");
            target = new Exchange(ExchangeMic.Bsex);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Bsex");
            target = new Exchange(ExchangeMic.Xibe);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Xibe");
            target = new Exchange(ExchangeMic.Xmus);
            Assert.AreEqual(new TimeSpan(4, 0, 0), target.TimeZone, "Xmus");
            target = new Exchange(ExchangeMic.Ncel);
            Assert.AreEqual(new TimeSpan(5, 0, 0), target.TimeZone, "Ncel");
            target = new Exchange(ExchangeMic.Xisl);
            Assert.AreEqual(new TimeSpan(5, 0, 0), target.TimeZone, "Xisl");
            target = new Exchange(ExchangeMic.Xkar);
            Assert.AreEqual(new TimeSpan(5, 0, 0), target.TimeZone, "Xkar");
            target = new Exchange(ExchangeMic.Xlah);
            Assert.AreEqual(new TimeSpan(5, 0, 0), target.TimeZone, "Xlah");
            target = new Exchange(ExchangeMic.Xcet);
            Assert.AreEqual(new TimeSpan(5, 0, 0), target.TimeZone, "Xcet");
            target = new Exchange(ExchangeMic.Xcue);
            Assert.AreEqual(new TimeSpan(5, 0, 0), target.TimeZone, "Xcue");
            target = new Exchange(ExchangeMic.Xkce);
            Assert.AreEqual(new TimeSpan(5, 0, 0), target.TimeZone, "Xkce");
            target = new Exchange(ExchangeMic.Xste);
            Assert.AreEqual(new TimeSpan(5, 0, 0), target.TimeZone, "Xste");
            target = new Exchange(ExchangeMic.Xuni);
            Assert.AreEqual(new TimeSpan(5, 0, 0), target.TimeZone, "Xuni");
            target = new Exchange(ExchangeMic.Xcol);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Xcol");
            target = new Exchange(ExchangeMic.Acex);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Acex");
            target = new Exchange(ExchangeMic.Cdsl);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Cdsl");
            target = new Exchange(ExchangeMic.Icxl);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Icxl");
            target = new Exchange(ExchangeMic.Isex);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Isex");
            target = new Exchange(ExchangeMic.Mcxx);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Mcxx");
            target = new Exchange(ExchangeMic.Nbot);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Nbot");
            target = new Exchange(ExchangeMic.Nmce);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Nmce");
            target = new Exchange(ExchangeMic.Otcx);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Otcx");
            target = new Exchange(ExchangeMic.Pxil);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Pxil");
            target = new Exchange(ExchangeMic.Xban);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Xban");
            target = new Exchange(ExchangeMic.Xbom);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Xbom");
            target = new Exchange(ExchangeMic.Bsme);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Bsme");
            target = new Exchange(ExchangeMic.Xcal);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Xcal");
            target = new Exchange(ExchangeMic.Xdes);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Xdes");
            target = new Exchange(ExchangeMic.Ximc);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Ximc");
            target = new Exchange(ExchangeMic.Xmds);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Xmds");
            target = new Exchange(ExchangeMic.Xncd);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Xncd");
            target = new Exchange(ExchangeMic.Xnse);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Xnse");
            target = new Exchange(ExchangeMic.Xuse);
            Assert.AreEqual(new TimeSpan(5, 30, 0), target.TimeZone, "Xuse");
            target = new Exchange(ExchangeMic.Xnep);
            Assert.AreEqual(new TimeSpan(5, 45, 0), target.TimeZone, "Xnep");
            target = new Exchange(ExchangeMic.Xkse);
            Assert.AreEqual(new TimeSpan(6, 0, 0), target.TimeZone, "Xkse");
            target = new Exchange(ExchangeMic.Etsc);
            Assert.AreEqual(new TimeSpan(6, 0, 0), target.TimeZone, "Etsc");
            target = new Exchange(ExchangeMic.Xkaz);
            Assert.AreEqual(new TimeSpan(6, 0, 0), target.TimeZone, "Xkaz");
            target = new Exchange(ExchangeMic.Cltd);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Cltd");
            target = new Exchange(ExchangeMic.Ecal);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Ecal");
            target = new Exchange(ExchangeMic.Eeal);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Eeal");
            target = new Exchange(ExchangeMic.Ifsg);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Ifsg");
            target = new Exchange(ExchangeMic.Jadx);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Jadx");
            target = new Exchange(ExchangeMic.Smex);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Smex");
            target = new Exchange(ExchangeMic.Tfsa);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Tfsa");
            target = new Exchange(ExchangeMic.Xses);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Xses");
            target = new Exchange(ExchangeMic.Xsca);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Xsca");
            target = new Exchange(ExchangeMic.Xsce);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Xsce");
            target = new Exchange(ExchangeMic.Xsim);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Xsim");
            target = new Exchange(ExchangeMic.Icdx);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Icdx");
            target = new Exchange(ExchangeMic.Xbbj);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Xbbj");
            target = new Exchange(ExchangeMic.Xidx);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Xidx");
            target = new Exchange(ExchangeMic.Xjnb);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Xjnb");
            target = new Exchange(ExchangeMic.Afet);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Afet");
            target = new Exchange(ExchangeMic.Beex);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Beex");
            target = new Exchange(ExchangeMic.Tfex);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Tfex");
            target = new Exchange(ExchangeMic.Xbkk);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Xbkk");
            target = new Exchange(ExchangeMic.Xbkf);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Xbkf");
            target = new Exchange(ExchangeMic.Xmai);
            Assert.AreEqual(new TimeSpan(7, 0, 0), target.TimeZone, "Xmai");
            target = new Exchange(ExchangeMic.Clph);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Clph");
            target = new Exchange(ExchangeMic.Pdex);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Pdex");
            target = new Exchange(ExchangeMic.Xphs);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xphs");
            target = new Exchange(ExchangeMic.Xula);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xula");
            target = new Exchange(ExchangeMic.Xkls);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xkls");
            target = new Exchange(ExchangeMic.Mesq);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Mesq");
            target = new Exchange(ExchangeMic.Xlfx);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xlfx");
            target = new Exchange(ExchangeMic.Xrbm);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xrbm");
            target = new Exchange(ExchangeMic.Cgmh);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Cgmh");
            target = new Exchange(ExchangeMic.Clhk);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Clhk");
            target = new Exchange(ExchangeMic.Cshk);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Cshk");
            target = new Exchange(ExchangeMic.Cfhk);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Cfhk");
            target = new Exchange(ExchangeMic.Dbhk);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Dbhk");
            target = new Exchange(ExchangeMic.Eotc);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Eotc");
            target = new Exchange(ExchangeMic.Hsxa);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Hsxa");
            target = new Exchange(ExchangeMic.Maqh);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Maqh");
            target = new Exchange(ExchangeMic.Sigh);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Sigh");
            target = new Exchange(ExchangeMic.Tocp);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Tocp");
            target = new Exchange(ExchangeMic.Ubsx);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Ubsx");
            target = new Exchange(ExchangeMic.Xcgs);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xcgs");
            target = new Exchange(ExchangeMic.Xhkf);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xhkf");
            target = new Exchange(ExchangeMic.Xhkg);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xhkg");
            target = new Exchange(ExchangeMic.Shsc);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Shsc");
            target = new Exchange(ExchangeMic.Xgem);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xgem");
            target = new Exchange(ExchangeMic.Xihk);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xihk");
            target = new Exchange(ExchangeMic.Xpst);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xpst");
            target = new Exchange(ExchangeMic.Ccfx);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Ccfx");
            target = new Exchange(ExchangeMic.Cssx);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Cssx");
            target = new Exchange(ExchangeMic.Sgex);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Sgex");
            target = new Exchange(ExchangeMic.Xcfe);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xcfe");
            target = new Exchange(ExchangeMic.Xdce);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xdce");
            target = new Exchange(ExchangeMic.Xsge);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xsge");
            target = new Exchange(ExchangeMic.Xine);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xine");
            target = new Exchange(ExchangeMic.Xshe);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xshe");
            target = new Exchange(ExchangeMic.Xsec);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xsec");
            target = new Exchange(ExchangeMic.Xshg);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xshg");
            target = new Exchange(ExchangeMic.Xssc);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xssc");
            target = new Exchange(ExchangeMic.Xzce);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xzce");
            target = new Exchange(ExchangeMic.Xchg);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xchg");
            target = new Exchange(ExchangeMic.Xdha);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xdha");
            target = new Exchange(ExchangeMic.Roco);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Roco");
            target = new Exchange(ExchangeMic.Xtaf);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xtaf");
            target = new Exchange(ExchangeMic.Xtai);
            Assert.AreEqual(new TimeSpan(8, 0, 0), target.TimeZone, "Xtai");
            target = new Exchange(ExchangeMic.Xkfb);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xkfb");
            target = new Exchange(ExchangeMic.Xkrx);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xkrx");
            target = new Exchange(ExchangeMic.Xkcm);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xkcm");
            target = new Exchange(ExchangeMic.Xkem);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xkem");
            target = new Exchange(ExchangeMic.Xkfe);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xkfe");
            target = new Exchange(ExchangeMic.Xkon);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xkon");
            target = new Exchange(ExchangeMic.Xkos);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xkos");
            target = new Exchange(ExchangeMic.Betp);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Betp");
            target = new Exchange(ExchangeMic.Chij);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Chij");
            target = new Exchange(ExchangeMic.Chis);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Chis");
            target = new Exchange(ExchangeMic.Chiv);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Chiv");
            target = new Exchange(ExchangeMic.Citx);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Citx");
            target = new Exchange(ExchangeMic.Citd);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Citd");
            target = new Exchange(ExchangeMic.Cljp);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Cljp");
            target = new Exchange(ExchangeMic.Cmet);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Cmet");
            target = new Exchange(ExchangeMic.Csjp);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Csjp");
            target = new Exchange(ExchangeMic.Cfjp);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Cfjp");
            target = new Exchange(ExchangeMic.Drct);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Drct");
            target = new Exchange(ExchangeMic.Lxjp);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Lxjp");
            target = new Exchange(ExchangeMic.Maqj);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Maqj");
            target = new Exchange(ExchangeMic.Mizx);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Mizx");
            target = new Exchange(ExchangeMic.Msms);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Msms");
            target = new Exchange(ExchangeMic.Nmrj);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Nmrj");
            target = new Exchange(ExchangeMic.Nxjp);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Nxjp");
            target = new Exchange(ExchangeMic.Nxse);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Nxse");
            target = new Exchange(ExchangeMic.Nxvw);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Nxvw");
            target = new Exchange(ExchangeMic.Sbij);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Sbij");
            target = new Exchange(ExchangeMic.Sbiu);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Sbiu");
            target = new Exchange(ExchangeMic.Sbiv);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Sbiv");
            target = new Exchange(ExchangeMic.Xsbi);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xsbi");
            target = new Exchange(ExchangeMic.Sigj);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Sigj");
            target = new Exchange(ExchangeMic.Xfka);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xfka");
            target = new Exchange(ExchangeMic.Xijp);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xijp");
            target = new Exchange(ExchangeMic.Jasr);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Jasr");
            target = new Exchange(ExchangeMic.Xjpx);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xjpx");
            target = new Exchange(ExchangeMic.Xjas);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xjas");
            target = new Exchange(ExchangeMic.Xose);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xose");
            target = new Exchange(ExchangeMic.Xosj);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xosj");
            target = new Exchange(ExchangeMic.Xtam);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xtam");
            target = new Exchange(ExchangeMic.Xtk1);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xtk1");
            target = new Exchange(ExchangeMic.Xtk2);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xtk2");
            target = new Exchange(ExchangeMic.Xtk3);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xtk3");
            target = new Exchange(ExchangeMic.Xtks);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xtks");
            target = new Exchange(ExchangeMic.Xkac);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xkac");
            target = new Exchange(ExchangeMic.Xngo);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xngo");
            target = new Exchange(ExchangeMic.Xnks);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xnks");
            target = new Exchange(ExchangeMic.Xsap);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xsap");
            target = new Exchange(ExchangeMic.Xtff);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xtff");
            target = new Exchange(ExchangeMic.Xtkt);
            Assert.AreEqual(new TimeSpan(9, 0, 0), target.TimeZone, "Xtkt");
            target = new Exchange(ExchangeMic.Apxl);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Apxl");
            target = new Exchange(ExchangeMic.Awbx);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Awbx");
            target = new Exchange(ExchangeMic.Awex);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Awex");
            target = new Exchange(ExchangeMic.Blev);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Blev");
            target = new Exchange(ExchangeMic.Cgma);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Cgma");
            target = new Exchange(ExchangeMic.Chia);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Chia");
            target = new Exchange(ExchangeMic.Cxac);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Cxac");
            target = new Exchange(ExchangeMic.Cxaf);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Cxaf");
            target = new Exchange(ExchangeMic.Cxam);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Cxam");
            target = new Exchange(ExchangeMic.Cxan);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Cxan");
            target = new Exchange(ExchangeMic.Cxap);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Cxap");
            target = new Exchange(ExchangeMic.Cxav);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Cxav");
            target = new Exchange(ExchangeMic.Cxaw);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Cxaw");
            target = new Exchange(ExchangeMic.Clau);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Clau");
            target = new Exchange(ExchangeMic.Csau);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Csau");
            target = new Exchange(ExchangeMic.Cfau);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Cfau");
            target = new Exchange(ExchangeMic.Maqx);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Maqx");
            target = new Exchange(ExchangeMic.Msal);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Msal");
            target = new Exchange(ExchangeMic.Nsxb);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Nsxb");
            target = new Exchange(ExchangeMic.Siga);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Siga");
            target = new Exchange(ExchangeMic.Simv);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Simv");
            target = new Exchange(ExchangeMic.Xasx);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Xasx");
            target = new Exchange(ExchangeMic.Asxb);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Asxb");
            target = new Exchange(ExchangeMic.Asxc);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Asxc");
            target = new Exchange(ExchangeMic.Asxp);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Asxp");
            target = new Exchange(ExchangeMic.Asxt);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Asxt");
            target = new Exchange(ExchangeMic.Asxv);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Asxv");
            target = new Exchange(ExchangeMic.Xsfe);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Xsfe");
            target = new Exchange(ExchangeMic.Xfex);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Xfex");
            target = new Exchange(ExchangeMic.Xnec);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Xnec");
            target = new Exchange(ExchangeMic.Xyie);
            Assert.AreEqual(new TimeSpan(10, 0, 0), target.TimeZone, "Xyie");
            target = new Exchange(ExchangeMic.Xsps);
            Assert.AreEqual(new TimeSpan(12, 0, 0), target.TimeZone, "Xsps");
            target = new Exchange(ExchangeMic.Nzfx);
            Assert.AreEqual(new TimeSpan(12, 0, 0), target.TimeZone, "Nzfx");
            target = new Exchange(ExchangeMic.Xnze);
            Assert.AreEqual(new TimeSpan(12, 0, 0), target.TimeZone, "Xnze");
            target = new Exchange(ExchangeMic.Xbvc);
            Assert.AreEqual(new TimeSpan(-1, 0, 0), target.TimeZone, "Xbvc");
            target = new Exchange(ExchangeMic.Xvpa);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xvpa");
            target = new Exchange(ExchangeMic.Bcmm);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Bcmm");
            target = new Exchange(ExchangeMic.Bovm);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Bovm");
            target = new Exchange(ExchangeMic.Brix);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Brix");
            target = new Exchange(ExchangeMic.Bvmf);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Bvmf");
            target = new Exchange(ExchangeMic.Ceti);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Ceti");
            target = new Exchange(ExchangeMic.Selc);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Selc");
            target = new Exchange(ExchangeMic.Bvur);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Bvur");
            target = new Exchange(ExchangeMic.Xmnt);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xmnt");
            target = new Exchange(ExchangeMic.Bace);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Bace");
            target = new Exchange(ExchangeMic.Bcfs);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Bcfs");
            target = new Exchange(ExchangeMic.Xmvl);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xmvl");
            target = new Exchange(ExchangeMic.Rofx);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Rofx");
            target = new Exchange(ExchangeMic.Xbcc);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xbcc");
            target = new Exchange(ExchangeMic.Mvcx);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Mvcx");
            target = new Exchange(ExchangeMic.Xbcm);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xbcm");
            target = new Exchange(ExchangeMic.Xbcx);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xbcx");
            target = new Exchange(ExchangeMic.Xbue);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xbue");
            target = new Exchange(ExchangeMic.Xmev);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xmev");
            target = new Exchange(ExchangeMic.Xcnf);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xcnf");
            target = new Exchange(ExchangeMic.Xmab);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xmab");
            target = new Exchange(ExchangeMic.Xmtb);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xmtb");
            target = new Exchange(ExchangeMic.Xros);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xros");
            target = new Exchange(ExchangeMic.Xrox);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xrox");
            target = new Exchange(ExchangeMic.Xtuc);
            Assert.AreEqual(new TimeSpan(-3, 0, 0), target.TimeZone, "Xtuc");
            target = new Exchange(ExchangeMic.Xpom);
            Assert.AreEqual(new TimeSpan(-4, 0, 0), target.TimeZone, "Xpom");
            target = new Exchange(ExchangeMic.Xbrv);
            Assert.AreEqual(new TimeSpan(-4, 0, 0), target.TimeZone, "Xbrv");
            target = new Exchange(ExchangeMic.Xbvr);
            Assert.AreEqual(new TimeSpan(-4, 0, 0), target.TimeZone, "Xbvr");
            target = new Exchange(ExchangeMic.Bova);
            Assert.AreEqual(new TimeSpan(-4, 0, 0), target.TimeZone, "Bova");
            target = new Exchange(ExchangeMic.Xbcl);
            Assert.AreEqual(new TimeSpan(-4, 0, 0), target.TimeZone, "Xbcl");
            target = new Exchange(ExchangeMic.Xsgo);
            Assert.AreEqual(new TimeSpan(-4, 0, 0), target.TimeZone, "Xsgo");
            target = new Exchange(ExchangeMic.Xbol);
            Assert.AreEqual(new TimeSpan(-4, 0, 0), target.TimeZone, "Xbol");
            target = new Exchange(ExchangeMic.Xbda);
            Assert.AreEqual(new TimeSpan(-4, 0, 0), target.TimeZone, "Xbda");
            target = new Exchange(ExchangeMic.Bvca);
            Assert.AreEqual(new TimeSpan(-4, -30, 0), target.TimeZone, "Bvca");
            target = new Exchange(ExchangeMic.Xtrn);
            Assert.AreEqual(new TimeSpan(-4, -30, 0), target.TimeZone, "Xtrn");
            target = new Exchange(ExchangeMic.Xbab);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xbab");
            target = new Exchange(ExchangeMic.Bajm);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bajm");
            target = new Exchange(ExchangeMic.Xcay);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcay");
            target = new Exchange(ExchangeMic.Xpty);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xpty");
            target = new Exchange(ExchangeMic.Xlim);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xlim");
            target = new Exchange(ExchangeMic.Xjam);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xjam");
            target = new Exchange(ExchangeMic.Xbaa);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xbaa");
            target = new Exchange(ExchangeMic.Xgua);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xgua");
            target = new Exchange(ExchangeMic.Xqui);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xqui");
            target = new Exchange(ExchangeMic.Xbog);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xbog");
            target = new Exchange(ExchangeMic.Canx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Canx");
            target = new Exchange(ExchangeMic.Chic);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Chic");
            target = new Exchange(ExchangeMic.Xcx2);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcx2");
            target = new Exchange(ExchangeMic.Cotc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cotc");
            target = new Exchange(ExchangeMic.Ifca);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ifca");
            target = new Exchange(ExchangeMic.Ivzx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ivzx");
            target = new Exchange(ExchangeMic.Lica);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Lica");
            target = new Exchange(ExchangeMic.Matn);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Matn");
            target = new Exchange(ExchangeMic.Neoe);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Neoe");
            target = new Exchange(ExchangeMic.Ngxc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ngxc");
            target = new Exchange(ExchangeMic.Omga);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Omga");
            target = new Exchange(ExchangeMic.Lynx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Lynx");
            target = new Exchange(ExchangeMic.Tmxs);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Tmxs");
            target = new Exchange(ExchangeMic.Xats);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xats");
            target = new Exchange(ExchangeMic.Xbbk);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xbbk");
            target = new Exchange(ExchangeMic.Xcnq);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcnq");
            target = new Exchange(ExchangeMic.Pure);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Pure");
            target = new Exchange(ExchangeMic.Xicx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xicx");
            target = new Exchange(ExchangeMic.Xmoc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xmoc");
            target = new Exchange(ExchangeMic.Xmod);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xmod");
            target = new Exchange(ExchangeMic.Xtse);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xtse");
            target = new Exchange(ExchangeMic.Xtsx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xtsx");
            target = new Exchange(ExchangeMic.Xtnx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xtnx");
            target = new Exchange(ExchangeMic.Aats);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Aats");
            target = new Exchange(ExchangeMic.Aqua);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Aqua");
            target = new Exchange(ExchangeMic.Atdf);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Atdf");
            target = new Exchange(ExchangeMic.Core);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Core");
            target = new Exchange(ExchangeMic.Baml);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Baml");
            target = new Exchange(ExchangeMic.Mlco);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mlco");
            target = new Exchange(ExchangeMic.Mlvx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mlvx");
            target = new Exchange(ExchangeMic.Barx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Barx");
            target = new Exchange(ExchangeMic.Bard);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bard");
            target = new Exchange(ExchangeMic.Barl);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Barl");
            target = new Exchange(ExchangeMic.Bcdx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bcdx");
            target = new Exchange(ExchangeMic.Bats);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bats");
            target = new Exchange(ExchangeMic.Bato);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bato");
            target = new Exchange(ExchangeMic.Baty);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Baty");
            target = new Exchange(ExchangeMic.Byxd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Byxd");
            target = new Exchange(ExchangeMic.Bzxd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bzxd");
            target = new Exchange(ExchangeMic.Bbsf);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bbsf");
            target = new Exchange(ExchangeMic.Bgcf);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bgcf");
            target = new Exchange(ExchangeMic.Bgcd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bgcd");
            target = new Exchange(ExchangeMic.Bids);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bids");
            target = new Exchange(ExchangeMic.Bltd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bltd");
            target = new Exchange(ExchangeMic.Bpol);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bpol");
            target = new Exchange(ExchangeMic.Bndd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bndd");
            target = new Exchange(ExchangeMic.Bnyc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bnyc");
            target = new Exchange(ExchangeMic.Nyfx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nyfx");
            target = new Exchange(ExchangeMic.Vtex);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Vtex");
            target = new Exchange(ExchangeMic.Btec);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Btec");
            target = new Exchange(ExchangeMic.Icsu);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Icsu");
            target = new Exchange(ExchangeMic.Cded);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cded");
            target = new Exchange(ExchangeMic.Cgmi);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cgmi");
            target = new Exchange(ExchangeMic.Cblc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cblc");
            target = new Exchange(ExchangeMic.Cgmu);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cgmu");
            target = new Exchange(ExchangeMic.Cicx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cicx");
            target = new Exchange(ExchangeMic.Lqfi);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Lqfi");
            target = new Exchange(ExchangeMic.Cmsf);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cmsf");
            target = new Exchange(ExchangeMic.Cred);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cred");
            target = new Exchange(ExchangeMic.Caes);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Caes");
            target = new Exchange(ExchangeMic.Cslp);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cslp");
            target = new Exchange(ExchangeMic.Dbsx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Dbsx");
            target = new Exchange(ExchangeMic.Deal);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Deal");
            target = new Exchange(ExchangeMic.Edge);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Edge");
            target = new Exchange(ExchangeMic.Eddp);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Eddp");
            target = new Exchange(ExchangeMic.Edga);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Edga");
            target = new Exchange(ExchangeMic.Edgd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Edgd");
            target = new Exchange(ExchangeMic.Edgo);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Edgo");
            target = new Exchange(ExchangeMic.Edgx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Edgx");
            target = new Exchange(ExchangeMic.Eris);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Eris");
            target = new Exchange(ExchangeMic.Fast);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Fast");
            target = new Exchange(ExchangeMic.Finr);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Finr");
            target = new Exchange(ExchangeMic.Finn);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Finn");
            target = new Exchange(ExchangeMic.Fino);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Fino");
            target = new Exchange(ExchangeMic.Finy);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Finy");
            target = new Exchange(ExchangeMic.Ootc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ootc");
            target = new Exchange(ExchangeMic.Xadf);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xadf");
            target = new Exchange(ExchangeMic.Fxal);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Fxal");
            target = new Exchange(ExchangeMic.Fxcm);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Fxcm");
            target = new Exchange(ExchangeMic.G1xx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "G1xx");
            target = new Exchange(ExchangeMic.Gllc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Gllc");
            target = new Exchange(ExchangeMic.Glps);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Glps");
            target = new Exchange(ExchangeMic.Govx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Govx");
            target = new Exchange(ExchangeMic.Gree);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Gree");
            target = new Exchange(ExchangeMic.Gsef);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Gsef");
            target = new Exchange(ExchangeMic.Gtco);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Gtco");
            target = new Exchange(ExchangeMic.Hegx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Hegx");
            target = new Exchange(ExchangeMic.Hppo);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Hppo");
            target = new Exchange(ExchangeMic.Hsfx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Hsfx");
            target = new Exchange(ExchangeMic.Icel);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Icel");
            target = new Exchange(ExchangeMic.Iexg);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Iexg");
            target = new Exchange(ExchangeMic.Ifus);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ifus");
            target = new Exchange(ExchangeMic.Ices);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ices");
            target = new Exchange(ExchangeMic.Iepa);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Iepa");
            target = new Exchange(ExchangeMic.Ifed);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ifed");
            target = new Exchange(ExchangeMic.Imag);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Imag");
            target = new Exchange(ExchangeMic.Imbd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Imbd");
            target = new Exchange(ExchangeMic.Imcc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Imcc");
            target = new Exchange(ExchangeMic.Imcg);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Imcg");
            target = new Exchange(ExchangeMic.Imco);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Imco");
            target = new Exchange(ExchangeMic.Imcr);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Imcr");
            target = new Exchange(ExchangeMic.Imen);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Imen");
            target = new Exchange(ExchangeMic.Imeq);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Imeq");
            target = new Exchange(ExchangeMic.Imfx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Imfx");
            target = new Exchange(ExchangeMic.Imir);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Imir");
            target = new Exchange(ExchangeMic.Isda);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Isda");
            target = new Exchange(ExchangeMic.Itgi);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Itgi");
            target = new Exchange(ExchangeMic.Jefx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Jefx");
            target = new Exchange(ExchangeMic.Jpmx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Jpmx");
            target = new Exchange(ExchangeMic.Jsef);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Jsef");
            target = new Exchange(ExchangeMic.Jses);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Jses");
            target = new Exchange(ExchangeMic.Jsjx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Jsjx");
            target = new Exchange(ExchangeMic.Knig);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Knig");
            target = new Exchange(ExchangeMic.Kncm);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Kncm");
            target = new Exchange(ExchangeMic.Knem);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Knem");
            target = new Exchange(ExchangeMic.Knli);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Knli");
            target = new Exchange(ExchangeMic.Knmx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Knmx");
            target = new Exchange(ExchangeMic.Lasf);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Lasf");
            target = new Exchange(ExchangeMic.Levl);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Levl");
            target = new Exchange(ExchangeMic.Lius);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Lius");
            target = new Exchange(ExchangeMic.Lifi);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Lifi");
            target = new Exchange(ExchangeMic.Liuh);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Liuh");
            target = new Exchange(ExchangeMic.Lqed);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Lqed");
            target = new Exchange(ExchangeMic.Ltaa);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ltaa");
            target = new Exchange(ExchangeMic.Lmnx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Lmnx");
            target = new Exchange(ExchangeMic.Mihi);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mihi");
            target = new Exchange(ExchangeMic.Mprl);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mprl");
            target = new Exchange(ExchangeMic.Xmio);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xmio");
            target = new Exchange(ExchangeMic.Msco);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Msco");
            target = new Exchange(ExchangeMic.Mslp);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mslp");
            target = new Exchange(ExchangeMic.Mspl);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mspl");
            target = new Exchange(ExchangeMic.Msrp);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Msrp");
            target = new Exchange(ExchangeMic.Mstx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mstx");
            target = new Exchange(ExchangeMic.Mtus);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mtus");
            target = new Exchange(ExchangeMic.Bvus);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bvus");
            target = new Exchange(ExchangeMic.Mtsb);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mtsb");
            target = new Exchange(ExchangeMic.Mtxx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mtxx");
            target = new Exchange(ExchangeMic.Mtxa);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mtxa");
            target = new Exchange(ExchangeMic.Mtxc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mtxc");
            target = new Exchange(ExchangeMic.Mtxm);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mtxm");
            target = new Exchange(ExchangeMic.Mtxs);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mtxs");
            target = new Exchange(ExchangeMic.Nblx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nblx");
            target = new Exchange(ExchangeMic.Nfsc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nfsc");
            target = new Exchange(ExchangeMic.Nfsa);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nfsa");
            target = new Exchange(ExchangeMic.Nfsd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nfsd");
            target = new Exchange(ExchangeMic.Xstm);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xstm");
            target = new Exchange(ExchangeMic.Nmra);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nmra");
            target = new Exchange(ExchangeMic.Nodx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nodx");
            target = new Exchange(ExchangeMic.Nxus);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nxus");
            target = new Exchange(ExchangeMic.Nypc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nypc");
            target = new Exchange(ExchangeMic.Ollc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ollc");
            target = new Exchange(ExchangeMic.Opra);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Opra");
            target = new Exchange(ExchangeMic.Otcm);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Otcm");
            target = new Exchange(ExchangeMic.Cave);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cave");
            target = new Exchange(ExchangeMic.Otcb);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Otcb");
            target = new Exchange(ExchangeMic.Otcq);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Otcq");
            target = new Exchange(ExchangeMic.Pinc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Pinc");
            target = new Exchange(ExchangeMic.Pini);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Pini");
            target = new Exchange(ExchangeMic.Pinl);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Pinl");
            target = new Exchange(ExchangeMic.Pinx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Pinx");
            target = new Exchange(ExchangeMic.Psgm);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Psgm");
            target = new Exchange(ExchangeMic.Pdqx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Pdqx");
            target = new Exchange(ExchangeMic.Pdqd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Pdqd");
            target = new Exchange(ExchangeMic.Pipe);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Pipe");
            target = new Exchange(ExchangeMic.Prse);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Prse");
            target = new Exchange(ExchangeMic.Pulx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Pulx");
            target = new Exchange(ExchangeMic.Ricx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ricx");
            target = new Exchange(ExchangeMic.Ricd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ricd");
            target = new Exchange(ExchangeMic.Sgma);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Sgma");
            target = new Exchange(ExchangeMic.Shaw);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Shaw");
            target = new Exchange(ExchangeMic.Shad);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Shad");
            target = new Exchange(ExchangeMic.Soho);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Soho");
            target = new Exchange(ExchangeMic.Sstx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Sstx");
            target = new Exchange(ExchangeMic.Tera);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Tera");
            target = new Exchange(ExchangeMic.Tfsu);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Tfsu");
            target = new Exchange(ExchangeMic.Trck);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Trck");
            target = new Exchange(ExchangeMic.Trux);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Trux");
            target = new Exchange(ExchangeMic.Tru1);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Tru1");
            target = new Exchange(ExchangeMic.Tru2);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Tru2");
            target = new Exchange(ExchangeMic.Trwb);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Trwb");
            target = new Exchange(ExchangeMic.Dwsf);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Dwsf");
            target = new Exchange(ExchangeMic.Twsf);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Twsf");
            target = new Exchange(ExchangeMic.Tsbx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Tsbx");
            target = new Exchange(ExchangeMic.Tsef);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Tsef");
            target = new Exchange(ExchangeMic.Ubsa);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ubsa");
            target = new Exchange(ExchangeMic.Ubsp);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ubsp");
            target = new Exchange(ExchangeMic.Welx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Welx");
            target = new Exchange(ExchangeMic.Wsag);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Wsag");
            target = new Exchange(ExchangeMic.Xaqs);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xaqs");
            target = new Exchange(ExchangeMic.Xbox);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xbox");
            target = new Exchange(ExchangeMic.Xcbo);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcbo");
            target = new Exchange(ExchangeMic.C2Ox);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "C2Ox");
            target = new Exchange(ExchangeMic.Cbsx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cbsx");
            target = new Exchange(ExchangeMic.Xcbf);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcbf");
            target = new Exchange(ExchangeMic.Xcbt);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcbt");
            target = new Exchange(ExchangeMic.Fcbt);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Fcbt");
            target = new Exchange(ExchangeMic.Xkbt);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xkbt");
            target = new Exchange(ExchangeMic.Xcff);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcff");
            target = new Exchange(ExchangeMic.Xchi);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xchi");
            target = new Exchange(ExchangeMic.Xcis);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcis");
            target = new Exchange(ExchangeMic.Xcme);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcme");
            target = new Exchange(ExchangeMic.Cbts);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cbts");
            target = new Exchange(ExchangeMic.Cecs);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cecs");
            target = new Exchange(ExchangeMic.Cmes);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Cmes");
            target = new Exchange(ExchangeMic.Fcme);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Fcme");
            target = new Exchange(ExchangeMic.Glbx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Glbx");
            target = new Exchange(ExchangeMic.Nyms);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nyms");
            target = new Exchange(ExchangeMic.Ximm);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Ximm");
            target = new Exchange(ExchangeMic.Xiom);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xiom");
            target = new Exchange(ExchangeMic.Xcur);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcur");
            target = new Exchange(ExchangeMic.Xelx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xelx");
            target = new Exchange(ExchangeMic.Xfci);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xfci");
            target = new Exchange(ExchangeMic.Xgmx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xgmx");
            target = new Exchange(ExchangeMic.Xins);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xins");
            target = new Exchange(ExchangeMic.Iblx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Iblx");
            target = new Exchange(ExchangeMic.Icbx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Icbx");
            target = new Exchange(ExchangeMic.Icro);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Icro");
            target = new Exchange(ExchangeMic.Iidx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Iidx");
            target = new Exchange(ExchangeMic.Mocx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mocx");
            target = new Exchange(ExchangeMic.Rcbx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Rcbx");
            target = new Exchange(ExchangeMic.Xisx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xisx");
            target = new Exchange(ExchangeMic.Gmni);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Gmni");
            target = new Exchange(ExchangeMic.Mcry);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Mcry");
            target = new Exchange(ExchangeMic.Xisa);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xisa");
            target = new Exchange(ExchangeMic.Xise);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xise");
            target = new Exchange(ExchangeMic.Xmer);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xmer");
            target = new Exchange(ExchangeMic.Xmge);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xmge");
            target = new Exchange(ExchangeMic.Xnas);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xnas");
            target = new Exchange(ExchangeMic.Bosd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Bosd");
            target = new Exchange(ExchangeMic.Espd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Espd");
            target = new Exchange(ExchangeMic.Nasd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nasd");
            target = new Exchange(ExchangeMic.Xbos);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xbos");
            target = new Exchange(ExchangeMic.Xbrt);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xbrt");
            target = new Exchange(ExchangeMic.Xbxo);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xbxo");
            target = new Exchange(ExchangeMic.Xncm);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xncm");
            target = new Exchange(ExchangeMic.Xndq);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xndq");
            target = new Exchange(ExchangeMic.Xngs);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xngs");
            target = new Exchange(ExchangeMic.Xnim);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xnim");
            target = new Exchange(ExchangeMic.Xnms);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xnms");
            target = new Exchange(ExchangeMic.Xpbt);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xpbt");
            target = new Exchange(ExchangeMic.Xphl);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xphl");
            target = new Exchange(ExchangeMic.Xpho);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xpho");
            target = new Exchange(ExchangeMic.Xpor);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xpor");
            target = new Exchange(ExchangeMic.Xpsx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xpsx");
            target = new Exchange(ExchangeMic.Xnym);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xnym");
            target = new Exchange(ExchangeMic.Xcec);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xcec");
            target = new Exchange(ExchangeMic.Xnye);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xnye");
            target = new Exchange(ExchangeMic.Xnyl);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xnyl");
            target = new Exchange(ExchangeMic.Xnys);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xnys");
            target = new Exchange(ExchangeMic.Aldp);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Aldp");
            target = new Exchange(ExchangeMic.Amxo);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Amxo");
            target = new Exchange(ExchangeMic.Arcd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Arcd");
            target = new Exchange(ExchangeMic.Arco);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Arco");
            target = new Exchange(ExchangeMic.Arcx);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Arcx");
            target = new Exchange(ExchangeMic.Nysd);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Nysd");
            target = new Exchange(ExchangeMic.Xase);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xase");
            target = new Exchange(ExchangeMic.Xnli);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xnli");
            target = new Exchange(ExchangeMic.Xoch);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xoch");
            target = new Exchange(ExchangeMic.Xotc);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xotc");
            target = new Exchange(ExchangeMic.Xsef);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xsef");
            target = new Exchange(ExchangeMic.Xwee);
            Assert.AreEqual(new TimeSpan(-5, 0, 0), target.TimeZone, "Xwee");
            target = new Exchange(ExchangeMic.Xbcv);
            Assert.AreEqual(new TimeSpan(-6, 0, 0), target.TimeZone, "Xbcv");
            target = new Exchange(ExchangeMic.Cgmx);
            Assert.AreEqual(new TimeSpan(-6, 0, 0), target.TimeZone, "Cgmx");
            target = new Exchange(ExchangeMic.Xemd);
            Assert.AreEqual(new TimeSpan(-6, 0, 0), target.TimeZone, "Xemd");
            target = new Exchange(ExchangeMic.Xmex);
            Assert.AreEqual(new TimeSpan(-6, 0, 0), target.TimeZone, "Xmex");
            target = new Exchange(ExchangeMic.Xman);
            Assert.AreEqual(new TimeSpan(-6, 0, 0), target.TimeZone, "Xman");
            target = new Exchange(ExchangeMic.Xgtg);
            Assert.AreEqual(new TimeSpan(-6, 0, 0), target.TimeZone, "Xgtg");
            target = new Exchange(ExchangeMic.Xsva);
            Assert.AreEqual(new TimeSpan(-6, 0, 0), target.TimeZone, "Xsva");
            target = new Exchange(ExchangeMic.Xbnv);
            Assert.AreEqual(new TimeSpan(-6, 0, 0), target.TimeZone, "Xbnv");
            target = new Exchange(ExchangeMic.Gxma);
            Assert.AreEqual(new TimeSpan(-11, 0, 0), target.TimeZone, "Gxma");
            target = new Exchange(ExchangeMic.Aqxe);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Aqxe");
            target = new Exchange(ExchangeMic.Balt);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Balt");
            target = new Exchange(ExchangeMic.Bltx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Bltx");
            target = new Exchange(ExchangeMic.Bcxe);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Bcxe");
            target = new Exchange(ExchangeMic.Batd);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Batd");
            target = new Exchange(ExchangeMic.Bate);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Bate");
            target = new Exchange(ExchangeMic.Batf);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Batf");
            target = new Exchange(ExchangeMic.Batp);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Batp");
            target = new Exchange(ExchangeMic.Botc);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Botc");
            target = new Exchange(ExchangeMic.Chid);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Chid");
            target = new Exchange(ExchangeMic.Chio);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Chio");
            target = new Exchange(ExchangeMic.Chix);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Chix");
            target = new Exchange(ExchangeMic.Bgci);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Bgci");
            target = new Exchange(ExchangeMic.Bgcb);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Bgcb");
            target = new Exchange(ExchangeMic.Blox);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Blox");
            target = new Exchange(ExchangeMic.Bmtf);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Bmtf");
            target = new Exchange(ExchangeMic.Boat);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Boat");
            target = new Exchange(ExchangeMic.Bosc);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Bosc");
            target = new Exchange(ExchangeMic.Brnx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Brnx");
            target = new Exchange(ExchangeMic.Caze);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Caze");
            target = new Exchange(ExchangeMic.Cco2);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Cco2");
            target = new Exchange(ExchangeMic.Cgme);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Cgme");
            target = new Exchange(ExchangeMic.Chev);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Chev");
            target = new Exchange(ExchangeMic.Blnk);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Blnk");
            target = new Exchange(ExchangeMic.Cmee);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Cmee");
            target = new Exchange(ExchangeMic.Cmec);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Cmec");
            target = new Exchange(ExchangeMic.Cmed);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Cmed");
            target = new Exchange(ExchangeMic.Cmmt);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Cmmt");
            target = new Exchange(ExchangeMic.Cseu);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Cseu");
            target = new Exchange(ExchangeMic.Cscf);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Cscf");
            target = new Exchange(ExchangeMic.Dbix);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Dbix");
            target = new Exchange(ExchangeMic.Dbcr);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Dbcr");
            target = new Exchange(ExchangeMic.Dbcx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Dbcx");
            target = new Exchange(ExchangeMic.Dbdc);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Dbdc");
            target = new Exchange(ExchangeMic.Dbmo);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Dbmo");
            target = new Exchange(ExchangeMic.Dbse);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Dbse");
            target = new Exchange(ExchangeMic.Encl);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Encl");
            target = new Exchange(ExchangeMic.Eqld);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Eqld");
            target = new Exchange(ExchangeMic.Exeu);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Exeu");
            target = new Exchange(ExchangeMic.Exbo);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Exbo");
            target = new Exchange(ExchangeMic.Excp);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Excp");
            target = new Exchange(ExchangeMic.Exmp);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Exmp");
            target = new Exchange(ExchangeMic.Exor);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Exor");
            target = new Exchange(ExchangeMic.Exsi);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Exsi");
            target = new Exchange(ExchangeMic.Exvp);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Exvp");
            target = new Exchange(ExchangeMic.Fair);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Fair");
            target = new Exchange(ExchangeMic.Gemx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Gemx");
            target = new Exchange(ExchangeMic.Gfic);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Gfic");
            target = new Exchange(ExchangeMic.Gfif);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Gfif");
            target = new Exchange(ExchangeMic.Gfin);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Gfin");
            target = new Exchange(ExchangeMic.Gfir);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Gfir");
            target = new Exchange(ExchangeMic.Gmeg);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Gmeg");
            target = new Exchange(ExchangeMic.Xgcx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xgcx");
            target = new Exchange(ExchangeMic.Xgdx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xgdx");
            target = new Exchange(ExchangeMic.Xgsx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xgsx");
            target = new Exchange(ExchangeMic.Xldx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xldx");
            target = new Exchange(ExchangeMic.Grif);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Grif");
            target = new Exchange(ExchangeMic.Grse);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Grse");
            target = new Exchange(ExchangeMic.Hsxe);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Hsxe");
            target = new Exchange(ExchangeMic.Ibal);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ibal");
            target = new Exchange(ExchangeMic.Icap);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Icap");
            target = new Exchange(ExchangeMic.Btee);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Btee");
            target = new Exchange(ExchangeMic.Ebsx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ebsx");
            target = new Exchange(ExchangeMic.Icah);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Icah");
            target = new Exchange(ExchangeMic.Icen);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Icen");
            target = new Exchange(ExchangeMic.Icse);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Icse");
            target = new Exchange(ExchangeMic.Ictq);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ictq");
            target = new Exchange(ExchangeMic.Isdx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Isdx");
            target = new Exchange(ExchangeMic.Wclk);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Wclk");
            target = new Exchange(ExchangeMic.Ifeu);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ifeu");
            target = new Exchange(ExchangeMic.Cxrt);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Cxrt");
            target = new Exchange(ExchangeMic.Ifen);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ifen");
            target = new Exchange(ExchangeMic.Ifll);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ifll");
            target = new Exchange(ExchangeMic.Iflo);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Iflo");
            target = new Exchange(ExchangeMic.Iflx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Iflx");
            target = new Exchange(ExchangeMic.Ifut);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ifut");
            target = new Exchange(ExchangeMic.Iswa);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Iswa");
            target = new Exchange(ExchangeMic.Kleu);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Kleu");
            target = new Exchange(ExchangeMic.Liqu);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Liqu");
            target = new Exchange(ExchangeMic.Liqf);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Liqf");
            target = new Exchange(ExchangeMic.Liqh);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Liqh");
            target = new Exchange(ExchangeMic.Lmax);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Lmax");
            target = new Exchange(ExchangeMic.Lmad);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Lmad");
            target = new Exchange(ExchangeMic.Lmae);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Lmae");
            target = new Exchange(ExchangeMic.Lmaf);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Lmaf");
            target = new Exchange(ExchangeMic.Lmao);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Lmao");
            target = new Exchange(ExchangeMic.Lmec);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Lmec");
            target = new Exchange(ExchangeMic.Lotc);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Lotc");
            target = new Exchange(ExchangeMic.Pldx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Pldx");
            target = new Exchange(ExchangeMic.Lppm);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Lppm");
            target = new Exchange(ExchangeMic.Mael);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mael");
            target = new Exchange(ExchangeMic.Mfgl);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mfgl");
            target = new Exchange(ExchangeMic.Mlxn);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mlxn");
            target = new Exchange(ExchangeMic.Mlax);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mlax");
            target = new Exchange(ExchangeMic.Mleu);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mleu");
            target = new Exchange(ExchangeMic.Mlve);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mlve");
            target = new Exchange(ExchangeMic.Msip);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Msip");
            target = new Exchange(ExchangeMic.Mytr);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mytr");
            target = new Exchange(ExchangeMic.N2Ex);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "N2Ex");
            target = new Exchange(ExchangeMic.Ndcm);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ndcm");
            target = new Exchange(ExchangeMic.Noff);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Noff");
            target = new Exchange(ExchangeMic.Nuro);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Nuro");
            target = new Exchange(ExchangeMic.Nurd);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Nurd");
            target = new Exchange(ExchangeMic.Xnlx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xnlx");
            target = new Exchange(ExchangeMic.Nxeu);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Nxeu");
            target = new Exchange(ExchangeMic.Peel);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Peel");
            target = new Exchange(ExchangeMic.Xphx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xphx");
            target = new Exchange(ExchangeMic.Xrsp);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xrsp");
            target = new Exchange(ExchangeMic.Pieu);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Pieu");
            target = new Exchange(ExchangeMic.Pirm);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Pirm");
            target = new Exchange(ExchangeMic.Qwix);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Qwix");
            target = new Exchange(ExchangeMic.Rbce);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Rbce");
            target = new Exchange(ExchangeMic.Rbsx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Rbsx");
            target = new Exchange(ExchangeMic.Rtsl);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Rtsl");
            target = new Exchange(ExchangeMic.Secf);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Secf");
            target = new Exchange(ExchangeMic.Sgmx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Sgmx");
            target = new Exchange(ExchangeMic.Shar);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Shar");
            target = new Exchange(ExchangeMic.Spec);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Spec");
            target = new Exchange(ExchangeMic.Sprz);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Sprz");
            target = new Exchange(ExchangeMic.Ssex);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ssex");
            target = new Exchange(ExchangeMic.Swap);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Swap");
            target = new Exchange(ExchangeMic.Tfsv);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tfsv");
            target = new Exchange(ExchangeMic.Tpie);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tpie");
            target = new Exchange(ExchangeMic.Trde);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Trde");
            target = new Exchange(ExchangeMic.Dbvx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Dbvx");
            target = new Exchange(ExchangeMic.Parx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Parx");
            target = new Exchange(ExchangeMic.Tcds);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tcds");
            target = new Exchange(ExchangeMic.Tfsg);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tfsg");
            target = new Exchange(ExchangeMic.Trdx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Trdx");
            target = new Exchange(ExchangeMic.Vola);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Vola");
            target = new Exchange(ExchangeMic.Treu);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Treu");
            target = new Exchange(ExchangeMic.Trqx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Trqx");
            target = new Exchange(ExchangeMic.Trqm);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Trqm");
            target = new Exchange(ExchangeMic.Ubsl);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ubsl");
            target = new Exchange(ExchangeMic.Ubse);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ubse");
            target = new Exchange(ExchangeMic.Ukgd);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ukgd");
            target = new Exchange(ExchangeMic.Ukpx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Ukpx");
            target = new Exchange(ExchangeMic.Vega);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Vega");
            target = new Exchange(ExchangeMic.Wins);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Wins");
            target = new Exchange(ExchangeMic.Xalt);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xalt");
            target = new Exchange(ExchangeMic.Xcor);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xcor");
            target = new Exchange(ExchangeMic.Xgcl);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xgcl");
            target = new Exchange(ExchangeMic.Xlbm);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xlbm");
            target = new Exchange(ExchangeMic.Xlch);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xlch");
            target = new Exchange(ExchangeMic.Xldn);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xldn");
            target = new Exchange(ExchangeMic.Xlme);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xlme");
            target = new Exchange(ExchangeMic.Xlon);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xlon");
            target = new Exchange(ExchangeMic.Xlod);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xlod");
            target = new Exchange(ExchangeMic.Xmts);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xmts");
            target = new Exchange(ExchangeMic.Amts);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Amts");
            target = new Exchange(ExchangeMic.Bvuk);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Bvuk");
            target = new Exchange(ExchangeMic.Eacm);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Eacm");
            target = new Exchange(ExchangeMic.Emts);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Emts");
            target = new Exchange(ExchangeMic.Gmts);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Gmts");
            target = new Exchange(ExchangeMic.Hung);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Hung");
            target = new Exchange(ExchangeMic.Imts);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Imts");
            target = new Exchange(ExchangeMic.Mczk);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mczk");
            target = new Exchange(ExchangeMic.Mtsa);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mtsa");
            target = new Exchange(ExchangeMic.Mtsg);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mtsg");
            target = new Exchange(ExchangeMic.Mtss);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mtss");
            target = new Exchange(ExchangeMic.Mtsw);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Mtsw");
            target = new Exchange(ExchangeMic.Port);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Port");
            target = new Exchange(ExchangeMic.Prme);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Prme");
            target = new Exchange(ExchangeMic.Rmts);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Rmts");
            target = new Exchange(ExchangeMic.Smts);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Smts");
            target = new Exchange(ExchangeMic.Vmts);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Vmts");
            target = new Exchange(ExchangeMic.Xsga);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xsga");
            target = new Exchange(ExchangeMic.Xsmp);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xsmp");
            target = new Exchange(ExchangeMic.Xswb);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xswb");
            target = new Exchange(ExchangeMic.Xtup);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xtup");
            target = new Exchange(ExchangeMic.Tben);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tben");
            target = new Exchange(ExchangeMic.Tbla);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tbla");
            target = new Exchange(ExchangeMic.Tpcd);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tpcd");
            target = new Exchange(ExchangeMic.Tpeq);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tpeq");
            target = new Exchange(ExchangeMic.Tpfd);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tpfd");
            target = new Exchange(ExchangeMic.Tpre);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tpre");
            target = new Exchange(ExchangeMic.Tpsd);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tpsd");
            target = new Exchange(ExchangeMic.Tpsp);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Tpsp");
            target = new Exchange(ExchangeMic.Xtpe);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xtpe");
            target = new Exchange(ExchangeMic.Xubs);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xubs");
            target = new Exchange(ExchangeMic.Xpos);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xpos");
            target = new Exchange(ExchangeMic.Xcde);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xcde");
            target = new Exchange(ExchangeMic.Xdub);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xdub");
            target = new Exchange(ExchangeMic.Xatl);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xatl");
            target = new Exchange(ExchangeMic.Xesm);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xesm");
            target = new Exchange(ExchangeMic.Xeye);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xeye");
            target = new Exchange(ExchangeMic.Xmsm);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xmsm");
            target = new Exchange(ExchangeMic.Xebi);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xebi");
            target = new Exchange(ExchangeMic.Xice);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xice");
            target = new Exchange(ExchangeMic.Dice);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Dice");
            target = new Exchange(ExchangeMic.Dnis);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Dnis");
            target = new Exchange(ExchangeMic.Fnis);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Fnis");
            target = new Exchange(ExchangeMic.Xgha);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xgha");
            target = new Exchange(ExchangeMic.Xcas);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xcas");
            target = new Exchange(ExchangeMic.Xcie);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xcie");
            target = new Exchange(ExchangeMic.Omic);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Omic");
            target = new Exchange(ExchangeMic.Opex);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Opex");
            target = new Exchange(ExchangeMic.Omip);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Omip");
            target = new Exchange(ExchangeMic.Xlis);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Xlis");
            target = new Exchange(ExchangeMic.Alxl);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Alxl");
            target = new Exchange(ExchangeMic.Enxl);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Enxl");
            target = new Exchange(ExchangeMic.Mfox);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Mfox");
            target = new Exchange(ExchangeMic.Wqxl);
            Assert.AreEqual(new TimeSpan(1, 0, 0), target.TimeZone, "Wqxl");
            target = new Exchange(ExchangeMic.Xxxx);
            Assert.AreEqual(new TimeSpan(0, 0, 0), target.TimeZone, "Xxxx");
        }
        #endregion

        #region IsEuronextTest
        /// <summary>
        /// A test for IsEuronext.
        /// </summary>
        [TestMethod]
        public void IsEuronextTest()
        {
            var target = new Exchange(ExchangeMic.Xbru);
            Assert.IsTrue(target.IsEuronext,  "Xbru");
            target = new Exchange(ExchangeMic.Alxb);
            Assert.IsTrue(target.IsEuronext,  "Alxb");
            target = new Exchange(ExchangeMic.Enxb);
            Assert.IsTrue(target.IsEuronext,  "Enxb");
            target = new Exchange(ExchangeMic.Mlxb);
            Assert.IsTrue(target.IsEuronext,  "Mlxb");
            target = new Exchange(ExchangeMic.Tnlb);
            Assert.IsTrue(target.IsEuronext,  "Tnlb");
            target = new Exchange(ExchangeMic.Vpxb);
            Assert.IsTrue(target.IsEuronext,  "Vpxb");
            target = new Exchange(ExchangeMic.Xbrd);
            Assert.IsTrue(target.IsEuronext,  "Xbrd");
            target = new Exchange(ExchangeMic.Xpar);
            Assert.IsTrue(target.IsEuronext,  "Xpar");
            target = new Exchange(ExchangeMic.Alxp);
            Assert.IsTrue(target.IsEuronext,  "Alxp");
            target = new Exchange(ExchangeMic.Xmat);
            Assert.IsTrue(target.IsEuronext,  "Xmat");
            target = new Exchange(ExchangeMic.Xmli);
            Assert.IsTrue(target.IsEuronext,  "Xmli");
            target = new Exchange(ExchangeMic.Xmon);
            Assert.IsTrue(target.IsEuronext,  "Xmon");
            target = new Exchange(ExchangeMic.Xlis);
            Assert.IsTrue(target.IsEuronext,  "Xlis");
            target = new Exchange(ExchangeMic.Alxl);
            Assert.IsTrue(target.IsEuronext,  "Alxl");
            target = new Exchange(ExchangeMic.Enxl);
            Assert.IsTrue(target.IsEuronext,  "Enxl");
            target = new Exchange(ExchangeMic.Mfox);
            Assert.IsTrue(target.IsEuronext,  "Mfox");
            target = new Exchange(ExchangeMic.Wqxl);
            Assert.IsTrue(target.IsEuronext,  "Wqxl");
            target = new Exchange(ExchangeMic.Xams);
            Assert.IsTrue(target.IsEuronext,  "Xams");
            target = new Exchange(ExchangeMic.Alxa);
            Assert.IsTrue(target.IsEuronext,  "Alxa");
            target = new Exchange(ExchangeMic.Tnla);
            Assert.IsTrue(target.IsEuronext,  "Tnla");
            target = new Exchange(ExchangeMic.Xeuc);
            Assert.IsTrue(target.IsEuronext,  "Xeuc");
            target = new Exchange(ExchangeMic.Xeue);
            Assert.IsTrue(target.IsEuronext,  "Xeue");
            target = new Exchange(ExchangeMic.Xeui);
            Assert.IsTrue(target.IsEuronext,  "Xeui");
            target = new Exchange(ExchangeMic.Xldn);
            Assert.IsTrue(target.IsEuronext,  "Xldn");
            target = new Exchange(ExchangeMic.Xtir);
            Assert.IsFalse(target.IsEuronext,  "Xtir");
            target = new Exchange(ExchangeMic.Xalg);
            Assert.IsFalse(target.IsEuronext,  "Xalg");
            target = new Exchange(ExchangeMic.Bace);
            Assert.IsFalse(target.IsEuronext,  "Bace");
            target = new Exchange(ExchangeMic.Bcfs);
            Assert.IsFalse(target.IsEuronext,  "Bcfs");
            target = new Exchange(ExchangeMic.Xmvl);
            Assert.IsFalse(target.IsEuronext,  "Xmvl");
            target = new Exchange(ExchangeMic.Rofx);
            Assert.IsFalse(target.IsEuronext,  "Rofx");
            target = new Exchange(ExchangeMic.Xbcc);
            Assert.IsFalse(target.IsEuronext,  "Xbcc");
            target = new Exchange(ExchangeMic.Mvcx);
            Assert.IsFalse(target.IsEuronext,  "Mvcx");
            target = new Exchange(ExchangeMic.Xbcm);
            Assert.IsFalse(target.IsEuronext,  "Xbcm");
            target = new Exchange(ExchangeMic.Xbcx);
            Assert.IsFalse(target.IsEuronext,  "Xbcx");
            target = new Exchange(ExchangeMic.Xbue);
            Assert.IsFalse(target.IsEuronext,  "Xbue");
            target = new Exchange(ExchangeMic.Xmev);
            Assert.IsFalse(target.IsEuronext,  "Xmev");
            target = new Exchange(ExchangeMic.Xcnf);
            Assert.IsFalse(target.IsEuronext,  "Xcnf");
            target = new Exchange(ExchangeMic.Xmab);
            Assert.IsFalse(target.IsEuronext,  "Xmab");
            target = new Exchange(ExchangeMic.Xmtb);
            Assert.IsFalse(target.IsEuronext,  "Xmtb");
            target = new Exchange(ExchangeMic.Xros);
            Assert.IsFalse(target.IsEuronext,  "Xros");
            target = new Exchange(ExchangeMic.Xrox);
            Assert.IsFalse(target.IsEuronext,  "Xrox");
            target = new Exchange(ExchangeMic.Xtuc);
            Assert.IsFalse(target.IsEuronext,  "Xtuc");
            target = new Exchange(ExchangeMic.Xarm);
            Assert.IsFalse(target.IsEuronext,  "Xarm");
            target = new Exchange(ExchangeMic.Apxl);
            Assert.IsFalse(target.IsEuronext,  "Apxl");
            target = new Exchange(ExchangeMic.Awbx);
            Assert.IsFalse(target.IsEuronext,  "Awbx");
            target = new Exchange(ExchangeMic.Awex);
            Assert.IsFalse(target.IsEuronext,  "Awex");
            target = new Exchange(ExchangeMic.Blev);
            Assert.IsFalse(target.IsEuronext,  "Blev");
            target = new Exchange(ExchangeMic.Cgma);
            Assert.IsFalse(target.IsEuronext,  "Cgma");
            target = new Exchange(ExchangeMic.Chia);
            Assert.IsFalse(target.IsEuronext,  "Chia");
            target = new Exchange(ExchangeMic.Cxac);
            Assert.IsFalse(target.IsEuronext,  "Cxac");
            target = new Exchange(ExchangeMic.Cxaf);
            Assert.IsFalse(target.IsEuronext,  "Cxaf");
            target = new Exchange(ExchangeMic.Cxam);
            Assert.IsFalse(target.IsEuronext,  "Cxam");
            target = new Exchange(ExchangeMic.Cxan);
            Assert.IsFalse(target.IsEuronext,  "Cxan");
            target = new Exchange(ExchangeMic.Cxap);
            Assert.IsFalse(target.IsEuronext,  "Cxap");
            target = new Exchange(ExchangeMic.Cxav);
            Assert.IsFalse(target.IsEuronext,  "Cxav");
            target = new Exchange(ExchangeMic.Cxaw);
            Assert.IsFalse(target.IsEuronext,  "Cxaw");
            target = new Exchange(ExchangeMic.Clau);
            Assert.IsFalse(target.IsEuronext,  "Clau");
            target = new Exchange(ExchangeMic.Csau);
            Assert.IsFalse(target.IsEuronext,  "Csau");
            target = new Exchange(ExchangeMic.Cfau);
            Assert.IsFalse(target.IsEuronext,  "Cfau");
            target = new Exchange(ExchangeMic.Maqx);
            Assert.IsFalse(target.IsEuronext,  "Maqx");
            target = new Exchange(ExchangeMic.Msal);
            Assert.IsFalse(target.IsEuronext,  "Msal");
            target = new Exchange(ExchangeMic.Nsxb);
            Assert.IsFalse(target.IsEuronext,  "Nsxb");
            target = new Exchange(ExchangeMic.Siga);
            Assert.IsFalse(target.IsEuronext,  "Siga");
            target = new Exchange(ExchangeMic.Simv);
            Assert.IsFalse(target.IsEuronext,  "Simv");
            target = new Exchange(ExchangeMic.Xasx);
            Assert.IsFalse(target.IsEuronext,  "Xasx");
            target = new Exchange(ExchangeMic.Asxb);
            Assert.IsFalse(target.IsEuronext,  "Asxb");
            target = new Exchange(ExchangeMic.Asxc);
            Assert.IsFalse(target.IsEuronext,  "Asxc");
            target = new Exchange(ExchangeMic.Asxp);
            Assert.IsFalse(target.IsEuronext,  "Asxp");
            target = new Exchange(ExchangeMic.Asxt);
            Assert.IsFalse(target.IsEuronext,  "Asxt");
            target = new Exchange(ExchangeMic.Asxv);
            Assert.IsFalse(target.IsEuronext,  "Asxv");
            target = new Exchange(ExchangeMic.Xsfe);
            Assert.IsFalse(target.IsEuronext,  "Xsfe");
            target = new Exchange(ExchangeMic.Xfex);
            Assert.IsFalse(target.IsEuronext,  "Xfex");
            target = new Exchange(ExchangeMic.Xnec);
            Assert.IsFalse(target.IsEuronext,  "Xnec");
            target = new Exchange(ExchangeMic.Xyie);
            Assert.IsFalse(target.IsEuronext,  "Xyie");
            target = new Exchange(ExchangeMic.Exaa);
            Assert.IsFalse(target.IsEuronext,  "Exaa");
            target = new Exchange(ExchangeMic.Xwbo);
            Assert.IsFalse(target.IsEuronext,  "Xwbo");
            target = new Exchange(ExchangeMic.Wbah);
            Assert.IsFalse(target.IsEuronext,  "Wbah");
            target = new Exchange(ExchangeMic.Wbdm);
            Assert.IsFalse(target.IsEuronext,  "Wbdm");
            target = new Exchange(ExchangeMic.Wbgf);
            Assert.IsFalse(target.IsEuronext,  "Wbgf");
            target = new Exchange(ExchangeMic.Xceg);
            Assert.IsFalse(target.IsEuronext,  "Xceg");
            target = new Exchange(ExchangeMic.Xvie);
            Assert.IsFalse(target.IsEuronext,  "Xvie");
            target = new Exchange(ExchangeMic.Bsex);
            Assert.IsFalse(target.IsEuronext,  "Bsex");
            target = new Exchange(ExchangeMic.Xibe);
            Assert.IsFalse(target.IsEuronext,  "Xibe");
            target = new Exchange(ExchangeMic.Xbaa);
            Assert.IsFalse(target.IsEuronext,  "Xbaa");
            target = new Exchange(ExchangeMic.Bfex);
            Assert.IsFalse(target.IsEuronext,  "Bfex");
            target = new Exchange(ExchangeMic.Xbah);
            Assert.IsFalse(target.IsEuronext,  "Xbah");
            target = new Exchange(ExchangeMic.Xchg);
            Assert.IsFalse(target.IsEuronext,  "Xchg");
            target = new Exchange(ExchangeMic.Xdha);
            Assert.IsFalse(target.IsEuronext,  "Xdha");
            target = new Exchange(ExchangeMic.Xbab);
            Assert.IsFalse(target.IsEuronext,  "Xbab");
            target = new Exchange(ExchangeMic.Bajm);
            Assert.IsFalse(target.IsEuronext,  "Bajm");
            target = new Exchange(ExchangeMic.Bcse);
            Assert.IsFalse(target.IsEuronext,  "Bcse");
            target = new Exchange(ExchangeMic.Blpx);
            Assert.IsFalse(target.IsEuronext,  "Blpx");
            target = new Exchange(ExchangeMic.Bmts);
            Assert.IsFalse(target.IsEuronext,  "Bmts");
            target = new Exchange(ExchangeMic.Mtsd);
            Assert.IsFalse(target.IsEuronext,  "Mtsd");
            target = new Exchange(ExchangeMic.Mtsf);
            Assert.IsFalse(target.IsEuronext,  "Mtsf");
            target = new Exchange(ExchangeMic.Xbda);
            Assert.IsFalse(target.IsEuronext,  "Xbda");
            target = new Exchange(ExchangeMic.Xbol);
            Assert.IsFalse(target.IsEuronext,  "Xbol");
            target = new Exchange(ExchangeMic.Xblb);
            Assert.IsFalse(target.IsEuronext,  "Xblb");
            target = new Exchange(ExchangeMic.Blbf);
            Assert.IsFalse(target.IsEuronext,  "Blbf");
            target = new Exchange(ExchangeMic.Xsse);
            Assert.IsFalse(target.IsEuronext,  "Xsse");
            target = new Exchange(ExchangeMic.Xbot);
            Assert.IsFalse(target.IsEuronext,  "Xbot");
            target = new Exchange(ExchangeMic.Bote);
            Assert.IsFalse(target.IsEuronext,  "Bote");
            target = new Exchange(ExchangeMic.Botv);
            Assert.IsFalse(target.IsEuronext,  "Botv");
            target = new Exchange(ExchangeMic.Bcmm);
            Assert.IsFalse(target.IsEuronext,  "Bcmm");
            target = new Exchange(ExchangeMic.Bovm);
            Assert.IsFalse(target.IsEuronext,  "Bovm");
            target = new Exchange(ExchangeMic.Brix);
            Assert.IsFalse(target.IsEuronext,  "Brix");
            target = new Exchange(ExchangeMic.Bvmf);
            Assert.IsFalse(target.IsEuronext,  "Bvmf");
            target = new Exchange(ExchangeMic.Ceti);
            Assert.IsFalse(target.IsEuronext,  "Ceti");
            target = new Exchange(ExchangeMic.Selc);
            Assert.IsFalse(target.IsEuronext,  "Selc");
            target = new Exchange(ExchangeMic.Ibex);
            Assert.IsFalse(target.IsEuronext,  "Ibex");
            target = new Exchange(ExchangeMic.Xbul);
            Assert.IsFalse(target.IsEuronext,  "Xbul");
            target = new Exchange(ExchangeMic.Xcsx);
            Assert.IsFalse(target.IsEuronext,  "Xcsx");
            target = new Exchange(ExchangeMic.Xdsx);
            Assert.IsFalse(target.IsEuronext,  "Xdsx");
            target = new Exchange(ExchangeMic.Canx);
            Assert.IsFalse(target.IsEuronext,  "Canx");
            target = new Exchange(ExchangeMic.Chic);
            Assert.IsFalse(target.IsEuronext,  "Chic");
            target = new Exchange(ExchangeMic.Xcx2);
            Assert.IsFalse(target.IsEuronext,  "Xcx2");
            target = new Exchange(ExchangeMic.Cotc);
            Assert.IsFalse(target.IsEuronext,  "Cotc");
            target = new Exchange(ExchangeMic.Ifca);
            Assert.IsFalse(target.IsEuronext,  "Ifca");
            target = new Exchange(ExchangeMic.Ivzx);
            Assert.IsFalse(target.IsEuronext,  "Ivzx");
            target = new Exchange(ExchangeMic.Lica);
            Assert.IsFalse(target.IsEuronext,  "Lica");
            target = new Exchange(ExchangeMic.Matn);
            Assert.IsFalse(target.IsEuronext,  "Matn");
            target = new Exchange(ExchangeMic.Neoe);
            Assert.IsFalse(target.IsEuronext,  "Neoe");
            target = new Exchange(ExchangeMic.Ngxc);
            Assert.IsFalse(target.IsEuronext,  "Ngxc");
            target = new Exchange(ExchangeMic.Omga);
            Assert.IsFalse(target.IsEuronext,  "Omga");
            target = new Exchange(ExchangeMic.Lynx);
            Assert.IsFalse(target.IsEuronext,  "Lynx");
            target = new Exchange(ExchangeMic.Tmxs);
            Assert.IsFalse(target.IsEuronext,  "Tmxs");
            target = new Exchange(ExchangeMic.Xats);
            Assert.IsFalse(target.IsEuronext,  "Xats");
            target = new Exchange(ExchangeMic.Xbbk);
            Assert.IsFalse(target.IsEuronext,  "Xbbk");
            target = new Exchange(ExchangeMic.Xcnq);
            Assert.IsFalse(target.IsEuronext,  "Xcnq");
            target = new Exchange(ExchangeMic.Pure);
            Assert.IsFalse(target.IsEuronext,  "Pure");
            target = new Exchange(ExchangeMic.Xicx);
            Assert.IsFalse(target.IsEuronext,  "Xicx");
            target = new Exchange(ExchangeMic.Xmoc);
            Assert.IsFalse(target.IsEuronext,  "Xmoc");
            target = new Exchange(ExchangeMic.Xmod);
            Assert.IsFalse(target.IsEuronext,  "Xmod");
            target = new Exchange(ExchangeMic.Xtse);
            Assert.IsFalse(target.IsEuronext,  "Xtse");
            target = new Exchange(ExchangeMic.Xtsx);
            Assert.IsFalse(target.IsEuronext,  "Xtsx");
            target = new Exchange(ExchangeMic.Xtnx);
            Assert.IsFalse(target.IsEuronext,  "Xtnx");
            target = new Exchange(ExchangeMic.Xbvc);
            Assert.IsFalse(target.IsEuronext,  "Xbvc");
            target = new Exchange(ExchangeMic.Xcay);
            Assert.IsFalse(target.IsEuronext,  "Xcay");
            target = new Exchange(ExchangeMic.Bova);
            Assert.IsFalse(target.IsEuronext,  "Bova");
            target = new Exchange(ExchangeMic.Xbcl);
            Assert.IsFalse(target.IsEuronext,  "Xbcl");
            target = new Exchange(ExchangeMic.Xsgo);
            Assert.IsFalse(target.IsEuronext,  "Xsgo");
            target = new Exchange(ExchangeMic.Ccfx);
            Assert.IsFalse(target.IsEuronext,  "Ccfx");
            target = new Exchange(ExchangeMic.Cssx);
            Assert.IsFalse(target.IsEuronext,  "Cssx");
            target = new Exchange(ExchangeMic.Sgex);
            Assert.IsFalse(target.IsEuronext,  "Sgex");
            target = new Exchange(ExchangeMic.Xcfe);
            Assert.IsFalse(target.IsEuronext,  "Xcfe");
            target = new Exchange(ExchangeMic.Xdce);
            Assert.IsFalse(target.IsEuronext,  "Xdce");
            target = new Exchange(ExchangeMic.Xsge);
            Assert.IsFalse(target.IsEuronext,  "Xsge");
            target = new Exchange(ExchangeMic.Xine);
            Assert.IsFalse(target.IsEuronext,  "Xine");
            target = new Exchange(ExchangeMic.Xshe);
            Assert.IsFalse(target.IsEuronext,  "Xshe");
            target = new Exchange(ExchangeMic.Xsec);
            Assert.IsFalse(target.IsEuronext,  "Xsec");
            target = new Exchange(ExchangeMic.Xshg);
            Assert.IsFalse(target.IsEuronext,  "Xshg");
            target = new Exchange(ExchangeMic.Xssc);
            Assert.IsFalse(target.IsEuronext,  "Xssc");
            target = new Exchange(ExchangeMic.Xzce);
            Assert.IsFalse(target.IsEuronext,  "Xzce");
            target = new Exchange(ExchangeMic.Xbog);
            Assert.IsFalse(target.IsEuronext,  "Xbog");
            target = new Exchange(ExchangeMic.Xbnv);
            Assert.IsFalse(target.IsEuronext,  "Xbnv");
            target = new Exchange(ExchangeMic.Xcro);
            Assert.IsFalse(target.IsEuronext,  "Xcro");
            target = new Exchange(ExchangeMic.Xtrz);
            Assert.IsFalse(target.IsEuronext,  "Xtrz");
            target = new Exchange(ExchangeMic.Xzag);
            Assert.IsFalse(target.IsEuronext,  "Xzag");
            target = new Exchange(ExchangeMic.Xzam);
            Assert.IsFalse(target.IsEuronext,  "Xzam");
            target = new Exchange(ExchangeMic.Dcsx);
            Assert.IsFalse(target.IsEuronext,  "Dcsx");
            target = new Exchange(ExchangeMic.Xcys);
            Assert.IsFalse(target.IsEuronext,  "Xcys");
            target = new Exchange(ExchangeMic.Xcyo);
            Assert.IsFalse(target.IsEuronext,  "Xcyo");
            target = new Exchange(ExchangeMic.Xecm);
            Assert.IsFalse(target.IsEuronext,  "Xecm");
            target = new Exchange(ExchangeMic.Xpra);
            Assert.IsFalse(target.IsEuronext,  "Xpra");
            target = new Exchange(ExchangeMic.Xprm);
            Assert.IsFalse(target.IsEuronext,  "Xprm");
            target = new Exchange(ExchangeMic.Xpxe);
            Assert.IsFalse(target.IsEuronext,  "Xpxe");
            target = new Exchange(ExchangeMic.Xrmz);
            Assert.IsFalse(target.IsEuronext,  "Xrmz");
            target = new Exchange(ExchangeMic.Xrmo);
            Assert.IsFalse(target.IsEuronext,  "Xrmo");
            target = new Exchange(ExchangeMic.Dktc);
            Assert.IsFalse(target.IsEuronext,  "Dktc");
            target = new Exchange(ExchangeMic.Gxgr);
            Assert.IsFalse(target.IsEuronext,  "Gxgr");
            target = new Exchange(ExchangeMic.Gxgf);
            Assert.IsFalse(target.IsEuronext,  "Gxgf");
            target = new Exchange(ExchangeMic.Gxgm);
            Assert.IsFalse(target.IsEuronext,  "Gxgm");
            target = new Exchange(ExchangeMic.Npga);
            Assert.IsFalse(target.IsEuronext,  "Npga");
            target = new Exchange(ExchangeMic.Xcse);
            Assert.IsFalse(target.IsEuronext,  "Xcse");
            target = new Exchange(ExchangeMic.Dcse);
            Assert.IsFalse(target.IsEuronext,  "Dcse");
            target = new Exchange(ExchangeMic.Dndk);
            Assert.IsFalse(target.IsEuronext,  "Dndk");
            target = new Exchange(ExchangeMic.Fndk);
            Assert.IsFalse(target.IsEuronext,  "Fndk");
            target = new Exchange(ExchangeMic.Xbvr);
            Assert.IsFalse(target.IsEuronext,  "Xbvr");
            target = new Exchange(ExchangeMic.Xgua);
            Assert.IsFalse(target.IsEuronext,  "Xgua");
            target = new Exchange(ExchangeMic.Xqui);
            Assert.IsFalse(target.IsEuronext,  "Xqui");
            target = new Exchange(ExchangeMic.Nilx);
            Assert.IsFalse(target.IsEuronext,  "Nilx");
            target = new Exchange(ExchangeMic.Xcai);
            Assert.IsFalse(target.IsEuronext,  "Xcai");
            target = new Exchange(ExchangeMic.Xsva);
            Assert.IsFalse(target.IsEuronext,  "Xsva");
            target = new Exchange(ExchangeMic.Xtal);
            Assert.IsFalse(target.IsEuronext,  "Xtal");
            target = new Exchange(ExchangeMic.Fnee);
            Assert.IsFalse(target.IsEuronext,  "Fnee");
            target = new Exchange(ExchangeMic.Vmfx);
            Assert.IsFalse(target.IsEuronext,  "Vmfx");
            target = new Exchange(ExchangeMic.Xsps);
            Assert.IsFalse(target.IsEuronext,  "Xsps");
            target = new Exchange(ExchangeMic.Fgex);
            Assert.IsFalse(target.IsEuronext,  "Fgex");
            target = new Exchange(ExchangeMic.Xhel);
            Assert.IsFalse(target.IsEuronext,  "Xhel");
            target = new Exchange(ExchangeMic.Dhel);
            Assert.IsFalse(target.IsEuronext,  "Dhel");
            target = new Exchange(ExchangeMic.Dnfi);
            Assert.IsFalse(target.IsEuronext,  "Dnfi");
            target = new Exchange(ExchangeMic.Fnfi);
            Assert.IsFalse(target.IsEuronext,  "Fnfi");
            target = new Exchange(ExchangeMic.Coal);
            Assert.IsFalse(target.IsEuronext,  "Coal");
            target = new Exchange(ExchangeMic.Epex);
            Assert.IsFalse(target.IsEuronext,  "Epex");
            target = new Exchange(ExchangeMic.Fmts);
            Assert.IsFalse(target.IsEuronext,  "Fmts");
            target = new Exchange(ExchangeMic.Gmtf);
            Assert.IsFalse(target.IsEuronext,  "Gmtf");
            target = new Exchange(ExchangeMic.Lchc);
            Assert.IsFalse(target.IsEuronext,  "Lchc");
            target = new Exchange(ExchangeMic.Xafr);
            Assert.IsFalse(target.IsEuronext,  "Xafr");
            target = new Exchange(ExchangeMic.Xbln);
            Assert.IsFalse(target.IsEuronext,  "Xbln");
            target = new Exchange(ExchangeMic.Mtch);
            Assert.IsFalse(target.IsEuronext,  "Mtch");
            target = new Exchange(ExchangeMic.Xpow);
            Assert.IsFalse(target.IsEuronext,  "Xpow");
            target = new Exchange(ExchangeMic.Xpsf);
            Assert.IsFalse(target.IsEuronext,  "Xpsf");
            target = new Exchange(ExchangeMic.Xgse);
            Assert.IsFalse(target.IsEuronext,  "Xgse");
            target = new Exchange(ExchangeMic.X360T);
            Assert.IsFalse(target.IsEuronext,  "X360T");
            target = new Exchange(ExchangeMic.Cats);
            Assert.IsFalse(target.IsEuronext,  "Cats");
            target = new Exchange(ExchangeMic.Dbox);
            Assert.IsFalse(target.IsEuronext,  "Dbox");
            target = new Exchange(ExchangeMic.Auto);
            Assert.IsFalse(target.IsEuronext,  "Auto");
            target = new Exchange(ExchangeMic.Tgat);
            Assert.IsFalse(target.IsEuronext,  "Tgat");
            target = new Exchange(ExchangeMic.Xgat);
            Assert.IsFalse(target.IsEuronext,  "Xgat");
            target = new Exchange(ExchangeMic.Xgrm);
            Assert.IsFalse(target.IsEuronext,  "Xgrm");
            target = new Exchange(ExchangeMic.Xber);
            Assert.IsFalse(target.IsEuronext,  "Xber");
            target = new Exchange(ExchangeMic.Bera);
            Assert.IsFalse(target.IsEuronext,  "Bera");
            target = new Exchange(ExchangeMic.Berb);
            Assert.IsFalse(target.IsEuronext,  "Berb");
            target = new Exchange(ExchangeMic.Berc);
            Assert.IsFalse(target.IsEuronext,  "Berc");
            target = new Exchange(ExchangeMic.Eqta);
            Assert.IsFalse(target.IsEuronext,  "Eqta");
            target = new Exchange(ExchangeMic.Eqtb);
            Assert.IsFalse(target.IsEuronext,  "Eqtb");
            target = new Exchange(ExchangeMic.Eqtc);
            Assert.IsFalse(target.IsEuronext,  "Eqtc");
            target = new Exchange(ExchangeMic.Eqtd);
            Assert.IsFalse(target.IsEuronext,  "Eqtd");
            target = new Exchange(ExchangeMic.Xeqt);
            Assert.IsFalse(target.IsEuronext,  "Xeqt");
            target = new Exchange(ExchangeMic.Zobx);
            Assert.IsFalse(target.IsEuronext,  "Zobx");
            target = new Exchange(ExchangeMic.Xdus);
            Assert.IsFalse(target.IsEuronext,  "Xdus");
            target = new Exchange(ExchangeMic.Dusa);
            Assert.IsFalse(target.IsEuronext,  "Dusa");
            target = new Exchange(ExchangeMic.Dusb);
            Assert.IsFalse(target.IsEuronext,  "Dusb");
            target = new Exchange(ExchangeMic.Dusc);
            Assert.IsFalse(target.IsEuronext,  "Dusc");
            target = new Exchange(ExchangeMic.Dusd);
            Assert.IsFalse(target.IsEuronext,  "Dusd");
            target = new Exchange(ExchangeMic.Xqtx);
            Assert.IsFalse(target.IsEuronext,  "Xqtx");
            target = new Exchange(ExchangeMic.Xecb);
            Assert.IsFalse(target.IsEuronext,  "Xecb");
            target = new Exchange(ExchangeMic.Xecc);
            Assert.IsFalse(target.IsEuronext,  "Xecc");
            target = new Exchange(ExchangeMic.Xeee);
            Assert.IsFalse(target.IsEuronext,  "Xeee");
            target = new Exchange(ExchangeMic.Xeeo);
            Assert.IsFalse(target.IsEuronext,  "Xeeo");
            target = new Exchange(ExchangeMic.Xeer);
            Assert.IsFalse(target.IsEuronext,  "Xeer");
            target = new Exchange(ExchangeMic.Xeum);
            Assert.IsFalse(target.IsEuronext,  "Xeum");
            target = new Exchange(ExchangeMic.Xeur);
            Assert.IsFalse(target.IsEuronext,  "Xeur");
            target = new Exchange(ExchangeMic.Ecag);
            Assert.IsFalse(target.IsEuronext,  "Ecag");
            target = new Exchange(ExchangeMic.Xere);
            Assert.IsFalse(target.IsEuronext,  "Xere");
            target = new Exchange(ExchangeMic.Xert);
            Assert.IsFalse(target.IsEuronext,  "Xert");
            target = new Exchange(ExchangeMic.Xeub);
            Assert.IsFalse(target.IsEuronext,  "Xeub");
            target = new Exchange(ExchangeMic.Xeup);
            Assert.IsFalse(target.IsEuronext,  "Xeup");
            target = new Exchange(ExchangeMic.Xfra);
            Assert.IsFalse(target.IsEuronext,  "Xfra");
            target = new Exchange(ExchangeMic.Fraa);
            Assert.IsFalse(target.IsEuronext,  "Fraa");
            target = new Exchange(ExchangeMic.Frab);
            Assert.IsFalse(target.IsEuronext,  "Frab");
            target = new Exchange(ExchangeMic.Frad);
            Assert.IsFalse(target.IsEuronext,  "Frad");
            target = new Exchange(ExchangeMic.Xdbc);
            Assert.IsFalse(target.IsEuronext,  "Xdbc");
            target = new Exchange(ExchangeMic.Xdbv);
            Assert.IsFalse(target.IsEuronext,  "Xdbv");
            target = new Exchange(ExchangeMic.Xdbx);
            Assert.IsFalse(target.IsEuronext,  "Xdbx");
            target = new Exchange(ExchangeMic.Xeta);
            Assert.IsFalse(target.IsEuronext,  "Xeta");
            target = new Exchange(ExchangeMic.Xetb);
            Assert.IsFalse(target.IsEuronext,  "Xetb");
            target = new Exchange(ExchangeMic.Xetr);
            Assert.IsFalse(target.IsEuronext,  "Xetr");
            target = new Exchange(ExchangeMic.Xnew);
            Assert.IsFalse(target.IsEuronext,  "Xnew");
            target = new Exchange(ExchangeMic.Xham);
            Assert.IsFalse(target.IsEuronext,  "Xham");
            target = new Exchange(ExchangeMic.Hama);
            Assert.IsFalse(target.IsEuronext,  "Hama");
            target = new Exchange(ExchangeMic.Hamb);
            Assert.IsFalse(target.IsEuronext,  "Hamb");
            target = new Exchange(ExchangeMic.Xhan);
            Assert.IsFalse(target.IsEuronext,  "Xhan");
            target = new Exchange(ExchangeMic.Hana);
            Assert.IsFalse(target.IsEuronext,  "Hana");
            target = new Exchange(ExchangeMic.Hanb);
            Assert.IsFalse(target.IsEuronext,  "Hanb");
            target = new Exchange(ExchangeMic.Xinv);
            Assert.IsFalse(target.IsEuronext,  "Xinv");
            target = new Exchange(ExchangeMic.Xmun);
            Assert.IsFalse(target.IsEuronext,  "Xmun");
            target = new Exchange(ExchangeMic.Muna);
            Assert.IsFalse(target.IsEuronext,  "Muna");
            target = new Exchange(ExchangeMic.Munb);
            Assert.IsFalse(target.IsEuronext,  "Munb");
            target = new Exchange(ExchangeMic.Munc);
            Assert.IsFalse(target.IsEuronext,  "Munc");
            target = new Exchange(ExchangeMic.Mund);
            Assert.IsFalse(target.IsEuronext,  "Mund");
            target = new Exchange(ExchangeMic.Xsco);
            Assert.IsFalse(target.IsEuronext,  "Xsco");
            target = new Exchange(ExchangeMic.Xsc1);
            Assert.IsFalse(target.IsEuronext,  "Xsc1");
            target = new Exchange(ExchangeMic.Xsc2);
            Assert.IsFalse(target.IsEuronext,  "Xsc2");
            target = new Exchange(ExchangeMic.Xsc3);
            Assert.IsFalse(target.IsEuronext,  "Xsc3");
            target = new Exchange(ExchangeMic.Xstu);
            Assert.IsFalse(target.IsEuronext,  "Xstu");
            target = new Exchange(ExchangeMic.Euwx);
            Assert.IsFalse(target.IsEuronext,  "Euwx");
            target = new Exchange(ExchangeMic.Stua);
            Assert.IsFalse(target.IsEuronext,  "Stua");
            target = new Exchange(ExchangeMic.Stub);
            Assert.IsFalse(target.IsEuronext,  "Stub");
            target = new Exchange(ExchangeMic.Xxsc);
            Assert.IsFalse(target.IsEuronext,  "Xxsc");
            target = new Exchange(ExchangeMic.Xgha);
            Assert.IsFalse(target.IsEuronext,  "Xgha");
            target = new Exchange(ExchangeMic.Gsxl);
            Assert.IsFalse(target.IsEuronext,  "Gsxl");
            target = new Exchange(ExchangeMic.Asex);
            Assert.IsFalse(target.IsEuronext,  "Asex");
            target = new Exchange(ExchangeMic.Enax);
            Assert.IsFalse(target.IsEuronext,  "Enax");
            target = new Exchange(ExchangeMic.Euax);
            Assert.IsFalse(target.IsEuronext,  "Euax");
            target = new Exchange(ExchangeMic.Hotc);
            Assert.IsFalse(target.IsEuronext,  "Hotc");
            target = new Exchange(ExchangeMic.Xade);
            Assert.IsFalse(target.IsEuronext,  "Xade");
            target = new Exchange(ExchangeMic.Xath);
            Assert.IsFalse(target.IsEuronext,  "Xath");
            target = new Exchange(ExchangeMic.Xipo);
            Assert.IsFalse(target.IsEuronext,  "Xipo");
            target = new Exchange(ExchangeMic.Hdat);
            Assert.IsFalse(target.IsEuronext,  "Hdat");
            target = new Exchange(ExchangeMic.Hemo);
            Assert.IsFalse(target.IsEuronext,  "Hemo");
            target = new Exchange(ExchangeMic.Xgtg);
            Assert.IsFalse(target.IsEuronext,  "Xgtg");
            target = new Exchange(ExchangeMic.Xcie);
            Assert.IsFalse(target.IsEuronext,  "Xcie");
            target = new Exchange(ExchangeMic.Gsci);
            Assert.IsFalse(target.IsEuronext,  "Gsci");
            target = new Exchange(ExchangeMic.Xbcv);
            Assert.IsFalse(target.IsEuronext,  "Xbcv");
            target = new Exchange(ExchangeMic.Cgmh);
            Assert.IsFalse(target.IsEuronext,  "Cgmh");
            target = new Exchange(ExchangeMic.Clhk);
            Assert.IsFalse(target.IsEuronext,  "Clhk");
            target = new Exchange(ExchangeMic.Cshk);
            Assert.IsFalse(target.IsEuronext,  "Cshk");
            target = new Exchange(ExchangeMic.Cfhk);
            Assert.IsFalse(target.IsEuronext,  "Cfhk");
            target = new Exchange(ExchangeMic.Dbhk);
            Assert.IsFalse(target.IsEuronext,  "Dbhk");
            target = new Exchange(ExchangeMic.Eotc);
            Assert.IsFalse(target.IsEuronext,  "Eotc");
            target = new Exchange(ExchangeMic.Hsxa);
            Assert.IsFalse(target.IsEuronext,  "Hsxa");
            target = new Exchange(ExchangeMic.Maqh);
            Assert.IsFalse(target.IsEuronext,  "Maqh");
            target = new Exchange(ExchangeMic.Sigh);
            Assert.IsFalse(target.IsEuronext,  "Sigh");
            target = new Exchange(ExchangeMic.Tocp);
            Assert.IsFalse(target.IsEuronext,  "Tocp");
            target = new Exchange(ExchangeMic.Ubsx);
            Assert.IsFalse(target.IsEuronext,  "Ubsx");
            target = new Exchange(ExchangeMic.Xcgs);
            Assert.IsFalse(target.IsEuronext,  "Xcgs");
            target = new Exchange(ExchangeMic.Xhkf);
            Assert.IsFalse(target.IsEuronext,  "Xhkf");
            target = new Exchange(ExchangeMic.Xhkg);
            Assert.IsFalse(target.IsEuronext,  "Xhkg");
            target = new Exchange(ExchangeMic.Shsc);
            Assert.IsFalse(target.IsEuronext,  "Shsc");
            target = new Exchange(ExchangeMic.Xgem);
            Assert.IsFalse(target.IsEuronext,  "Xgem");
            target = new Exchange(ExchangeMic.Xihk);
            Assert.IsFalse(target.IsEuronext,  "Xihk");
            target = new Exchange(ExchangeMic.Xpst);
            Assert.IsFalse(target.IsEuronext,  "Xpst");
            target = new Exchange(ExchangeMic.Beta);
            Assert.IsFalse(target.IsEuronext,  "Beta");
            target = new Exchange(ExchangeMic.Hupx);
            Assert.IsFalse(target.IsEuronext,  "Hupx");
            target = new Exchange(ExchangeMic.Kccp);
            Assert.IsFalse(target.IsEuronext,  "Kccp");
            target = new Exchange(ExchangeMic.Xbud);
            Assert.IsFalse(target.IsEuronext,  "Xbud");
            target = new Exchange(ExchangeMic.Xgas);
            Assert.IsFalse(target.IsEuronext,  "Xgas");
            target = new Exchange(ExchangeMic.Xice);
            Assert.IsFalse(target.IsEuronext,  "Xice");
            target = new Exchange(ExchangeMic.Dice);
            Assert.IsFalse(target.IsEuronext,  "Dice");
            target = new Exchange(ExchangeMic.Dnis);
            Assert.IsFalse(target.IsEuronext,  "Dnis");
            target = new Exchange(ExchangeMic.Fnis);
            Assert.IsFalse(target.IsEuronext,  "Fnis");
            target = new Exchange(ExchangeMic.Acex);
            Assert.IsFalse(target.IsEuronext,  "Acex");
            target = new Exchange(ExchangeMic.Cdsl);
            Assert.IsFalse(target.IsEuronext,  "Cdsl");
            target = new Exchange(ExchangeMic.Icxl);
            Assert.IsFalse(target.IsEuronext,  "Icxl");
            target = new Exchange(ExchangeMic.Isex);
            Assert.IsFalse(target.IsEuronext,  "Isex");
            target = new Exchange(ExchangeMic.Mcxx);
            Assert.IsFalse(target.IsEuronext,  "Mcxx");
            target = new Exchange(ExchangeMic.Nbot);
            Assert.IsFalse(target.IsEuronext,  "Nbot");
            target = new Exchange(ExchangeMic.Nmce);
            Assert.IsFalse(target.IsEuronext,  "Nmce");
            target = new Exchange(ExchangeMic.Otcx);
            Assert.IsFalse(target.IsEuronext,  "Otcx");
            target = new Exchange(ExchangeMic.Pxil);
            Assert.IsFalse(target.IsEuronext,  "Pxil");
            target = new Exchange(ExchangeMic.Xban);
            Assert.IsFalse(target.IsEuronext,  "Xban");
            target = new Exchange(ExchangeMic.Xbom);
            Assert.IsFalse(target.IsEuronext,  "Xbom");
            target = new Exchange(ExchangeMic.Bsme);
            Assert.IsFalse(target.IsEuronext,  "Bsme");
            target = new Exchange(ExchangeMic.Xcal);
            Assert.IsFalse(target.IsEuronext,  "Xcal");
            target = new Exchange(ExchangeMic.Xdes);
            Assert.IsFalse(target.IsEuronext,  "Xdes");
            target = new Exchange(ExchangeMic.Ximc);
            Assert.IsFalse(target.IsEuronext,  "Ximc");
            target = new Exchange(ExchangeMic.Xmds);
            Assert.IsFalse(target.IsEuronext,  "Xmds");
            target = new Exchange(ExchangeMic.Xncd);
            Assert.IsFalse(target.IsEuronext,  "Xncd");
            target = new Exchange(ExchangeMic.Xnse);
            Assert.IsFalse(target.IsEuronext,  "Xnse");
            target = new Exchange(ExchangeMic.Xuse);
            Assert.IsFalse(target.IsEuronext,  "Xuse");
            target = new Exchange(ExchangeMic.Icdx);
            Assert.IsFalse(target.IsEuronext,  "Icdx");
            target = new Exchange(ExchangeMic.Xbbj);
            Assert.IsFalse(target.IsEuronext,  "Xbbj");
            target = new Exchange(ExchangeMic.Xidx);
            Assert.IsFalse(target.IsEuronext,  "Xidx");
            target = new Exchange(ExchangeMic.Xjnb);
            Assert.IsFalse(target.IsEuronext,  "Xjnb");
            target = new Exchange(ExchangeMic.Imex);
            Assert.IsFalse(target.IsEuronext,  "Imex");
            target = new Exchange(ExchangeMic.Xteh);
            Assert.IsFalse(target.IsEuronext,  "Xteh");
            target = new Exchange(ExchangeMic.Xiqs);
            Assert.IsFalse(target.IsEuronext,  "Xiqs");
            target = new Exchange(ExchangeMic.Xpos);
            Assert.IsFalse(target.IsEuronext,  "Xpos");
            target = new Exchange(ExchangeMic.Xcde);
            Assert.IsFalse(target.IsEuronext,  "Xcde");
            target = new Exchange(ExchangeMic.Xdub);
            Assert.IsFalse(target.IsEuronext,  "Xdub");
            target = new Exchange(ExchangeMic.Xatl);
            Assert.IsFalse(target.IsEuronext,  "Xatl");
            target = new Exchange(ExchangeMic.Xesm);
            Assert.IsFalse(target.IsEuronext,  "Xesm");
            target = new Exchange(ExchangeMic.Xeye);
            Assert.IsFalse(target.IsEuronext,  "Xeye");
            target = new Exchange(ExchangeMic.Xmsm);
            Assert.IsFalse(target.IsEuronext,  "Xmsm");
            target = new Exchange(ExchangeMic.Xebi);
            Assert.IsFalse(target.IsEuronext,  "Xebi");
            target = new Exchange(ExchangeMic.Xtae);
            Assert.IsFalse(target.IsEuronext,  "Xtae");
            target = new Exchange(ExchangeMic.Cgit);
            Assert.IsFalse(target.IsEuronext,  "Cgit");
            target = new Exchange(ExchangeMic.Cgcm);
            Assert.IsFalse(target.IsEuronext,  "Cgcm");
            target = new Exchange(ExchangeMic.Cgdb);
            Assert.IsFalse(target.IsEuronext,  "Cgdb");
            target = new Exchange(ExchangeMic.Cgeb);
            Assert.IsFalse(target.IsEuronext,  "Cgeb");
            target = new Exchange(ExchangeMic.Cggd);
            Assert.IsFalse(target.IsEuronext,  "Cggd");
            target = new Exchange(ExchangeMic.Cgnd);
            Assert.IsFalse(target.IsEuronext,  "Cgnd");
            target = new Exchange(ExchangeMic.Cgqd);
            Assert.IsFalse(target.IsEuronext,  "Cgqd");
            target = new Exchange(ExchangeMic.Cgqt);
            Assert.IsFalse(target.IsEuronext,  "Cgqt");
            target = new Exchange(ExchangeMic.Cgtr);
            Assert.IsFalse(target.IsEuronext,  "Cgtr");
            target = new Exchange(ExchangeMic.Emid);
            Assert.IsFalse(target.IsEuronext,  "Emid");
            target = new Exchange(ExchangeMic.Emdr);
            Assert.IsFalse(target.IsEuronext,  "Emdr");
            target = new Exchange(ExchangeMic.Emir);
            Assert.IsFalse(target.IsEuronext,  "Emir");
            target = new Exchange(ExchangeMic.Etlx);
            Assert.IsFalse(target.IsEuronext,  "Etlx");
            target = new Exchange(ExchangeMic.Hmtf);
            Assert.IsFalse(target.IsEuronext,  "Hmtf");
            target = new Exchange(ExchangeMic.Hmod);
            Assert.IsFalse(target.IsEuronext,  "Hmod");
            target = new Exchange(ExchangeMic.Mtsc);
            Assert.IsFalse(target.IsEuronext,  "Mtsc");
            target = new Exchange(ExchangeMic.Bond);
            Assert.IsFalse(target.IsEuronext,  "Bond");
            target = new Exchange(ExchangeMic.Mtsm);
            Assert.IsFalse(target.IsEuronext,  "Mtsm");
            target = new Exchange(ExchangeMic.Ssob);
            Assert.IsFalse(target.IsEuronext,  "Ssob");
            target = new Exchange(ExchangeMic.Xgme);
            Assert.IsFalse(target.IsEuronext,  "Xgme");
            target = new Exchange(ExchangeMic.Xmil);
            Assert.IsFalse(target.IsEuronext,  "Xmil");
            target = new Exchange(ExchangeMic.Etfp);
            Assert.IsFalse(target.IsEuronext,  "Etfp");
            target = new Exchange(ExchangeMic.Mivx);
            Assert.IsFalse(target.IsEuronext,  "Mivx");
            target = new Exchange(ExchangeMic.Motx);
            Assert.IsFalse(target.IsEuronext,  "Motx");
            target = new Exchange(ExchangeMic.Mtaa);
            Assert.IsFalse(target.IsEuronext,  "Mtaa");
            target = new Exchange(ExchangeMic.Mtah);
            Assert.IsFalse(target.IsEuronext,  "Mtah");
            target = new Exchange(ExchangeMic.Sedx);
            Assert.IsFalse(target.IsEuronext,  "Sedx");
            target = new Exchange(ExchangeMic.Xaim);
            Assert.IsFalse(target.IsEuronext,  "Xaim");
            target = new Exchange(ExchangeMic.Xdmi);
            Assert.IsFalse(target.IsEuronext,  "Xdmi");
            target = new Exchange(ExchangeMic.Xmot);
            Assert.IsFalse(target.IsEuronext,  "Xmot");
            target = new Exchange(ExchangeMic.Xbrv);
            Assert.IsFalse(target.IsEuronext,  "Xbrv");
            target = new Exchange(ExchangeMic.Xjam);
            Assert.IsFalse(target.IsEuronext,  "Xjam");
            target = new Exchange(ExchangeMic.Betp);
            Assert.IsFalse(target.IsEuronext,  "Betp");
            target = new Exchange(ExchangeMic.Chij);
            Assert.IsFalse(target.IsEuronext,  "Chij");
            target = new Exchange(ExchangeMic.Chis);
            Assert.IsFalse(target.IsEuronext,  "Chis");
            target = new Exchange(ExchangeMic.Chiv);
            Assert.IsFalse(target.IsEuronext,  "Chiv");
            target = new Exchange(ExchangeMic.Citx);
            Assert.IsFalse(target.IsEuronext,  "Citx");
            target = new Exchange(ExchangeMic.Citd);
            Assert.IsFalse(target.IsEuronext,  "Citd");
            target = new Exchange(ExchangeMic.Cljp);
            Assert.IsFalse(target.IsEuronext,  "Cljp");
            target = new Exchange(ExchangeMic.Cmet);
            Assert.IsFalse(target.IsEuronext,  "Cmet");
            target = new Exchange(ExchangeMic.Csjp);
            Assert.IsFalse(target.IsEuronext,  "Csjp");
            target = new Exchange(ExchangeMic.Cfjp);
            Assert.IsFalse(target.IsEuronext,  "Cfjp");
            target = new Exchange(ExchangeMic.Drct);
            Assert.IsFalse(target.IsEuronext,  "Drct");
            target = new Exchange(ExchangeMic.Lxjp);
            Assert.IsFalse(target.IsEuronext,  "Lxjp");
            target = new Exchange(ExchangeMic.Maqj);
            Assert.IsFalse(target.IsEuronext,  "Maqj");
            target = new Exchange(ExchangeMic.Mizx);
            Assert.IsFalse(target.IsEuronext,  "Mizx");
            target = new Exchange(ExchangeMic.Msms);
            Assert.IsFalse(target.IsEuronext,  "Msms");
            target = new Exchange(ExchangeMic.Nmrj);
            Assert.IsFalse(target.IsEuronext,  "Nmrj");
            target = new Exchange(ExchangeMic.Nxjp);
            Assert.IsFalse(target.IsEuronext,  "Nxjp");
            target = new Exchange(ExchangeMic.Nxse);
            Assert.IsFalse(target.IsEuronext,  "Nxse");
            target = new Exchange(ExchangeMic.Nxvw);
            Assert.IsFalse(target.IsEuronext,  "Nxvw");
            target = new Exchange(ExchangeMic.Sbij);
            Assert.IsFalse(target.IsEuronext,  "Sbij");
            target = new Exchange(ExchangeMic.Sbiu);
            Assert.IsFalse(target.IsEuronext,  "Sbiu");
            target = new Exchange(ExchangeMic.Sbiv);
            Assert.IsFalse(target.IsEuronext,  "Sbiv");
            target = new Exchange(ExchangeMic.Xsbi);
            Assert.IsFalse(target.IsEuronext,  "Xsbi");
            target = new Exchange(ExchangeMic.Sigj);
            Assert.IsFalse(target.IsEuronext,  "Sigj");
            target = new Exchange(ExchangeMic.Xfka);
            Assert.IsFalse(target.IsEuronext,  "Xfka");
            target = new Exchange(ExchangeMic.Xijp);
            Assert.IsFalse(target.IsEuronext,  "Xijp");
            target = new Exchange(ExchangeMic.Jasr);
            Assert.IsFalse(target.IsEuronext,  "Jasr");
            target = new Exchange(ExchangeMic.Xjpx);
            Assert.IsFalse(target.IsEuronext,  "Xjpx");
            target = new Exchange(ExchangeMic.Xjas);
            Assert.IsFalse(target.IsEuronext,  "Xjas");
            target = new Exchange(ExchangeMic.Xose);
            Assert.IsFalse(target.IsEuronext,  "Xose");
            target = new Exchange(ExchangeMic.Xosj);
            Assert.IsFalse(target.IsEuronext,  "Xosj");
            target = new Exchange(ExchangeMic.Xtam);
            Assert.IsFalse(target.IsEuronext,  "Xtam");
            target = new Exchange(ExchangeMic.Xtk1);
            Assert.IsFalse(target.IsEuronext,  "Xtk1");
            target = new Exchange(ExchangeMic.Xtk2);
            Assert.IsFalse(target.IsEuronext,  "Xtk2");
            target = new Exchange(ExchangeMic.Xtk3);
            Assert.IsFalse(target.IsEuronext,  "Xtk3");
            target = new Exchange(ExchangeMic.Xtks);
            Assert.IsFalse(target.IsEuronext,  "Xtks");
            target = new Exchange(ExchangeMic.Xkac);
            Assert.IsFalse(target.IsEuronext,  "Xkac");
            target = new Exchange(ExchangeMic.Xngo);
            Assert.IsFalse(target.IsEuronext,  "Xngo");
            target = new Exchange(ExchangeMic.Xnks);
            Assert.IsFalse(target.IsEuronext,  "Xnks");
            target = new Exchange(ExchangeMic.Xsap);
            Assert.IsFalse(target.IsEuronext,  "Xsap");
            target = new Exchange(ExchangeMic.Xtff);
            Assert.IsFalse(target.IsEuronext,  "Xtff");
            target = new Exchange(ExchangeMic.Xtkt);
            Assert.IsFalse(target.IsEuronext,  "Xtkt");
            target = new Exchange(ExchangeMic.Xamm);
            Assert.IsFalse(target.IsEuronext,  "Xamm");
            target = new Exchange(ExchangeMic.Etsc);
            Assert.IsFalse(target.IsEuronext,  "Etsc");
            target = new Exchange(ExchangeMic.Xkaz);
            Assert.IsFalse(target.IsEuronext,  "Xkaz");
            target = new Exchange(ExchangeMic.Xnai);
            Assert.IsFalse(target.IsEuronext,  "Xnai");
            target = new Exchange(ExchangeMic.Xkfb);
            Assert.IsFalse(target.IsEuronext,  "Xkfb");
            target = new Exchange(ExchangeMic.Xkrx);
            Assert.IsFalse(target.IsEuronext,  "Xkrx");
            target = new Exchange(ExchangeMic.Xkcm);
            Assert.IsFalse(target.IsEuronext,  "Xkcm");
            target = new Exchange(ExchangeMic.Xkem);
            Assert.IsFalse(target.IsEuronext,  "Xkem");
            target = new Exchange(ExchangeMic.Xkfe);
            Assert.IsFalse(target.IsEuronext,  "Xkfe");
            target = new Exchange(ExchangeMic.Xkon);
            Assert.IsFalse(target.IsEuronext,  "Xkon");
            target = new Exchange(ExchangeMic.Xkos);
            Assert.IsFalse(target.IsEuronext,  "Xkos");
            target = new Exchange(ExchangeMic.Xkuw);
            Assert.IsFalse(target.IsEuronext,  "Xkuw");
            target = new Exchange(ExchangeMic.Xkse);
            Assert.IsFalse(target.IsEuronext,  "Xkse");
            target = new Exchange(ExchangeMic.Xlao);
            Assert.IsFalse(target.IsEuronext,  "Xlao");
            target = new Exchange(ExchangeMic.Xris);
            Assert.IsFalse(target.IsEuronext,  "Xris");
            target = new Exchange(ExchangeMic.Fnlv);
            Assert.IsFalse(target.IsEuronext,  "Fnlv");
            target = new Exchange(ExchangeMic.Xbey);
            Assert.IsFalse(target.IsEuronext,  "Xbey");
            target = new Exchange(ExchangeMic.Xlsm);
            Assert.IsFalse(target.IsEuronext,  "Xlsm");
            target = new Exchange(ExchangeMic.Bapx);
            Assert.IsFalse(target.IsEuronext,  "Bapx");
            target = new Exchange(ExchangeMic.Getb);
            Assert.IsFalse(target.IsEuronext,  "Getb");
            target = new Exchange(ExchangeMic.Xlit);
            Assert.IsFalse(target.IsEuronext,  "Xlit");
            target = new Exchange(ExchangeMic.Fnlt);
            Assert.IsFalse(target.IsEuronext,  "Fnlt");
            target = new Exchange(ExchangeMic.Cclx);
            Assert.IsFalse(target.IsEuronext,  "Cclx");
            target = new Exchange(ExchangeMic.Xlux);
            Assert.IsFalse(target.IsEuronext,  "Xlux");
            target = new Exchange(ExchangeMic.Emtf);
            Assert.IsFalse(target.IsEuronext,  "Emtf");
            target = new Exchange(ExchangeMic.Xves);
            Assert.IsFalse(target.IsEuronext,  "Xves");
            target = new Exchange(ExchangeMic.Xmae);
            Assert.IsFalse(target.IsEuronext,  "Xmae");
            target = new Exchange(ExchangeMic.Xmdg);
            Assert.IsFalse(target.IsEuronext,  "Xmdg");
            target = new Exchange(ExchangeMic.Xmsw);
            Assert.IsFalse(target.IsEuronext,  "Xmsw");
            target = new Exchange(ExchangeMic.Xkls);
            Assert.IsFalse(target.IsEuronext,  "Xkls");
            target = new Exchange(ExchangeMic.Mesq);
            Assert.IsFalse(target.IsEuronext,  "Mesq");
            target = new Exchange(ExchangeMic.Xlfx);
            Assert.IsFalse(target.IsEuronext,  "Xlfx");
            target = new Exchange(ExchangeMic.Xrbm);
            Assert.IsFalse(target.IsEuronext,  "Xrbm");
            target = new Exchange(ExchangeMic.Malx);
            Assert.IsFalse(target.IsEuronext,  "Malx");
            target = new Exchange(ExchangeMic.Ewsm);
            Assert.IsFalse(target.IsEuronext,  "Ewsm");
            target = new Exchange(ExchangeMic.Xmal);
            Assert.IsFalse(target.IsEuronext,  "Xmal");
            target = new Exchange(ExchangeMic.Gbot);
            Assert.IsFalse(target.IsEuronext,  "Gbot");
            target = new Exchange(ExchangeMic.Xafx);
            Assert.IsFalse(target.IsEuronext,  "Xafx");
            target = new Exchange(ExchangeMic.Xmau);
            Assert.IsFalse(target.IsEuronext,  "Xmau");
            target = new Exchange(ExchangeMic.Cgmx);
            Assert.IsFalse(target.IsEuronext,  "Cgmx");
            target = new Exchange(ExchangeMic.Xemd);
            Assert.IsFalse(target.IsEuronext,  "Xemd");
            target = new Exchange(ExchangeMic.Xmex);
            Assert.IsFalse(target.IsEuronext,  "Xmex");
            target = new Exchange(ExchangeMic.Xmol);
            Assert.IsFalse(target.IsEuronext,  "Xmol");
            target = new Exchange(ExchangeMic.Xula);
            Assert.IsFalse(target.IsEuronext,  "Xula");
            target = new Exchange(ExchangeMic.Xmnx);
            Assert.IsFalse(target.IsEuronext,  "Xmnx");
            target = new Exchange(ExchangeMic.Xcas);
            Assert.IsFalse(target.IsEuronext,  "Xcas");
            target = new Exchange(ExchangeMic.Xbvm);
            Assert.IsFalse(target.IsEuronext,  "Xbvm");
            target = new Exchange(ExchangeMic.Xnam);
            Assert.IsFalse(target.IsEuronext,  "Xnam");
            target = new Exchange(ExchangeMic.Xnep);
            Assert.IsFalse(target.IsEuronext,  "Xnep");
            target = new Exchange(ExchangeMic.Nzfx);
            Assert.IsFalse(target.IsEuronext,  "Nzfx");
            target = new Exchange(ExchangeMic.Xnze);
            Assert.IsFalse(target.IsEuronext,  "Xnze");
            target = new Exchange(ExchangeMic.Xman);
            Assert.IsFalse(target.IsEuronext,  "Xman");
            target = new Exchange(ExchangeMic.Nasx);
            Assert.IsFalse(target.IsEuronext,  "Nasx");
            target = new Exchange(ExchangeMic.Xnsa);
            Assert.IsFalse(target.IsEuronext,  "Xnsa");
            target = new Exchange(ExchangeMic.Fish);
            Assert.IsFalse(target.IsEuronext,  "Fish");
            target = new Exchange(ExchangeMic.Fshx);
            Assert.IsFalse(target.IsEuronext,  "Fshx");
            target = new Exchange(ExchangeMic.Icas);
            Assert.IsFalse(target.IsEuronext,  "Icas");
            target = new Exchange(ExchangeMic.Nexo);
            Assert.IsFalse(target.IsEuronext,  "Nexo");
            target = new Exchange(ExchangeMic.Nops);
            Assert.IsFalse(target.IsEuronext,  "Nops");
            target = new Exchange(ExchangeMic.Norx);
            Assert.IsFalse(target.IsEuronext,  "Norx");
            target = new Exchange(ExchangeMic.Nosc);
            Assert.IsFalse(target.IsEuronext,  "Nosc");
            target = new Exchange(ExchangeMic.Notc);
            Assert.IsFalse(target.IsEuronext,  "Notc");
            target = new Exchange(ExchangeMic.Oslc);
            Assert.IsFalse(target.IsEuronext,  "Oslc");
            target = new Exchange(ExchangeMic.Xima);
            Assert.IsFalse(target.IsEuronext,  "Xima");
            target = new Exchange(ExchangeMic.Xosl);
            Assert.IsFalse(target.IsEuronext,  "Xosl");
            target = new Exchange(ExchangeMic.Merd);
            Assert.IsFalse(target.IsEuronext,  "Merd");
            target = new Exchange(ExchangeMic.Merk);
            Assert.IsFalse(target.IsEuronext,  "Merk");
            target = new Exchange(ExchangeMic.Nibr);
            Assert.IsFalse(target.IsEuronext,  "Nibr");
            target = new Exchange(ExchangeMic.Xoad);
            Assert.IsFalse(target.IsEuronext,  "Xoad");
            target = new Exchange(ExchangeMic.Xoam);
            Assert.IsFalse(target.IsEuronext,  "Xoam");
            target = new Exchange(ExchangeMic.Xoas);
            Assert.IsFalse(target.IsEuronext,  "Xoas");
            target = new Exchange(ExchangeMic.Xosc);
            Assert.IsFalse(target.IsEuronext,  "Xosc");
            target = new Exchange(ExchangeMic.Xosd);
            Assert.IsFalse(target.IsEuronext,  "Xosd");
            target = new Exchange(ExchangeMic.Xmus);
            Assert.IsFalse(target.IsEuronext,  "Xmus");
            target = new Exchange(ExchangeMic.Ncel);
            Assert.IsFalse(target.IsEuronext,  "Ncel");
            target = new Exchange(ExchangeMic.Xisl);
            Assert.IsFalse(target.IsEuronext,  "Xisl");
            target = new Exchange(ExchangeMic.Xkar);
            Assert.IsFalse(target.IsEuronext,  "Xkar");
            target = new Exchange(ExchangeMic.Xlah);
            Assert.IsFalse(target.IsEuronext,  "Xlah");
            target = new Exchange(ExchangeMic.Xpae);
            Assert.IsFalse(target.IsEuronext,  "Xpae");
            target = new Exchange(ExchangeMic.Xpty);
            Assert.IsFalse(target.IsEuronext,  "Xpty");
            target = new Exchange(ExchangeMic.Xpom);
            Assert.IsFalse(target.IsEuronext,  "Xpom");
            target = new Exchange(ExchangeMic.Xvpa);
            Assert.IsFalse(target.IsEuronext,  "Xvpa");
            target = new Exchange(ExchangeMic.Xlim);
            Assert.IsFalse(target.IsEuronext,  "Xlim");
            target = new Exchange(ExchangeMic.Clph);
            Assert.IsFalse(target.IsEuronext,  "Clph");
            target = new Exchange(ExchangeMic.Pdex);
            Assert.IsFalse(target.IsEuronext,  "Pdex");
            target = new Exchange(ExchangeMic.Xphs);
            Assert.IsFalse(target.IsEuronext,  "Xphs");
            target = new Exchange(ExchangeMic.Kdpw);
            Assert.IsFalse(target.IsEuronext,  "Kdpw");
            target = new Exchange(ExchangeMic.Xwar);
            Assert.IsFalse(target.IsEuronext,  "Xwar");
            target = new Exchange(ExchangeMic.Bosp);
            Assert.IsFalse(target.IsEuronext,  "Bosp");
            target = new Exchange(ExchangeMic.Plpd);
            Assert.IsFalse(target.IsEuronext,  "Plpd");
            target = new Exchange(ExchangeMic.Plpx);
            Assert.IsFalse(target.IsEuronext,  "Plpx");
            target = new Exchange(ExchangeMic.Rpwc);
            Assert.IsFalse(target.IsEuronext,  "Rpwc");
            target = new Exchange(ExchangeMic.Tbsp);
            Assert.IsFalse(target.IsEuronext,  "Tbsp");
            target = new Exchange(ExchangeMic.Wbcl);
            Assert.IsFalse(target.IsEuronext,  "Wbcl");
            target = new Exchange(ExchangeMic.Wbon);
            Assert.IsFalse(target.IsEuronext,  "Wbon");
            target = new Exchange(ExchangeMic.Wder);
            Assert.IsFalse(target.IsEuronext,  "Wder");
            target = new Exchange(ExchangeMic.Wetp);
            Assert.IsFalse(target.IsEuronext,  "Wetp");
            target = new Exchange(ExchangeMic.Wgas);
            Assert.IsFalse(target.IsEuronext,  "Wgas");
            target = new Exchange(ExchangeMic.Wind);
            Assert.IsFalse(target.IsEuronext,  "Wind");
            target = new Exchange(ExchangeMic.Wmtf);
            Assert.IsFalse(target.IsEuronext,  "Wmtf");
            target = new Exchange(ExchangeMic.Xnco);
            Assert.IsFalse(target.IsEuronext,  "Xnco");
            target = new Exchange(ExchangeMic.Omic);
            Assert.IsFalse(target.IsEuronext,  "Omic");
            target = new Exchange(ExchangeMic.Opex);
            Assert.IsFalse(target.IsEuronext,  "Opex");
            target = new Exchange(ExchangeMic.Omip);
            Assert.IsFalse(target.IsEuronext,  "Omip");
            target = new Exchange(ExchangeMic.Dsmd);
            Assert.IsFalse(target.IsEuronext,  "Dsmd");
            target = new Exchange(ExchangeMic.Trpx);
            Assert.IsFalse(target.IsEuronext,  "Trpx");
            target = new Exchange(ExchangeMic.Bmfx);
            Assert.IsFalse(target.IsEuronext,  "Bmfx");
            target = new Exchange(ExchangeMic.Bmfa);
            Assert.IsFalse(target.IsEuronext,  "Bmfa");
            target = new Exchange(ExchangeMic.Bmfm);
            Assert.IsFalse(target.IsEuronext,  "Bmfm");
            target = new Exchange(ExchangeMic.Sbmf);
            Assert.IsFalse(target.IsEuronext,  "Sbmf");
            target = new Exchange(ExchangeMic.Xbrm);
            Assert.IsFalse(target.IsEuronext,  "Xbrm");
            target = new Exchange(ExchangeMic.Xbse);
            Assert.IsFalse(target.IsEuronext,  "Xbse");
            target = new Exchange(ExchangeMic.Xbsd);
            Assert.IsFalse(target.IsEuronext,  "Xbsd");
            target = new Exchange(ExchangeMic.Xcan);
            Assert.IsFalse(target.IsEuronext,  "Xcan");
            target = new Exchange(ExchangeMic.Xras);
            Assert.IsFalse(target.IsEuronext,  "Xras");
            target = new Exchange(ExchangeMic.Xrpm);
            Assert.IsFalse(target.IsEuronext,  "Xrpm");
            target = new Exchange(ExchangeMic.Misx);
            Assert.IsFalse(target.IsEuronext,  "Misx");
            target = new Exchange(ExchangeMic.Rtsx);
            Assert.IsFalse(target.IsEuronext,  "Rtsx");
            target = new Exchange(ExchangeMic.Namx);
            Assert.IsFalse(target.IsEuronext,  "Namx");
            target = new Exchange(ExchangeMic.Rpdx);
            Assert.IsFalse(target.IsEuronext,  "Rpdx");
            target = new Exchange(ExchangeMic.Rusx);
            Assert.IsFalse(target.IsEuronext,  "Rusx");
            target = new Exchange(ExchangeMic.Spim);
            Assert.IsFalse(target.IsEuronext,  "Spim");
            target = new Exchange(ExchangeMic.Xmos);
            Assert.IsFalse(target.IsEuronext,  "Xmos");
            target = new Exchange(ExchangeMic.Xpet);
            Assert.IsFalse(target.IsEuronext,  "Xpet");
            target = new Exchange(ExchangeMic.Xpic);
            Assert.IsFalse(target.IsEuronext,  "Xpic");
            target = new Exchange(ExchangeMic.Xrus);
            Assert.IsFalse(target.IsEuronext,  "Xrus");
            target = new Exchange(ExchangeMic.Xsam);
            Assert.IsFalse(target.IsEuronext,  "Xsam");
            target = new Exchange(ExchangeMic.Xsib);
            Assert.IsFalse(target.IsEuronext,  "Xsib");
            target = new Exchange(ExchangeMic.Rotc);
            Assert.IsFalse(target.IsEuronext,  "Rotc");
            target = new Exchange(ExchangeMic.Rsex);
            Assert.IsFalse(target.IsEuronext,  "Rsex");
            target = new Exchange(ExchangeMic.Xecs);
            Assert.IsFalse(target.IsEuronext,  "Xecs");
            target = new Exchange(ExchangeMic.Xsau);
            Assert.IsFalse(target.IsEuronext,  "Xsau");
            target = new Exchange(ExchangeMic.Xbel);
            Assert.IsFalse(target.IsEuronext,  "Xbel");
            target = new Exchange(ExchangeMic.Cltd);
            Assert.IsFalse(target.IsEuronext,  "Cltd");
            target = new Exchange(ExchangeMic.Ecal);
            Assert.IsFalse(target.IsEuronext,  "Ecal");
            target = new Exchange(ExchangeMic.Eeal);
            Assert.IsFalse(target.IsEuronext,  "Eeal");
            target = new Exchange(ExchangeMic.Ifsg);
            Assert.IsFalse(target.IsEuronext,  "Ifsg");
            target = new Exchange(ExchangeMic.Jadx);
            Assert.IsFalse(target.IsEuronext,  "Jadx");
            target = new Exchange(ExchangeMic.Smex);
            Assert.IsFalse(target.IsEuronext,  "Smex");
            target = new Exchange(ExchangeMic.Tfsa);
            Assert.IsFalse(target.IsEuronext,  "Tfsa");
            target = new Exchange(ExchangeMic.Xses);
            Assert.IsFalse(target.IsEuronext,  "Xses");
            target = new Exchange(ExchangeMic.Xsca);
            Assert.IsFalse(target.IsEuronext,  "Xsca");
            target = new Exchange(ExchangeMic.Xsce);
            Assert.IsFalse(target.IsEuronext,  "Xsce");
            target = new Exchange(ExchangeMic.Xsim);
            Assert.IsFalse(target.IsEuronext,  "Xsim");
            target = new Exchange(ExchangeMic.Spxe);
            Assert.IsFalse(target.IsEuronext,  "Spxe");
            target = new Exchange(ExchangeMic.Xbra);
            Assert.IsFalse(target.IsEuronext,  "Xbra");
            target = new Exchange(ExchangeMic.Xlju);
            Assert.IsFalse(target.IsEuronext,  "Xlju");
            target = new Exchange(ExchangeMic.Xsop);
            Assert.IsFalse(target.IsEuronext,  "Xsop");
            target = new Exchange(ExchangeMic.Xjse);
            Assert.IsFalse(target.IsEuronext,  "Xjse");
            target = new Exchange(ExchangeMic.Altx);
            Assert.IsFalse(target.IsEuronext,  "Altx");
            target = new Exchange(ExchangeMic.Xbes);
            Assert.IsFalse(target.IsEuronext,  "Xbes");
            target = new Exchange(ExchangeMic.Xsaf);
            Assert.IsFalse(target.IsEuronext,  "Xsaf");
            target = new Exchange(ExchangeMic.Xsfa);
            Assert.IsFalse(target.IsEuronext,  "Xsfa");
            target = new Exchange(ExchangeMic.Yldx);
            Assert.IsFalse(target.IsEuronext,  "Yldx");
            target = new Exchange(ExchangeMic.Bmex);
            Assert.IsFalse(target.IsEuronext,  "Bmex");
            target = new Exchange(ExchangeMic.Bmcl);
            Assert.IsFalse(target.IsEuronext,  "Bmcl");
            target = new Exchange(ExchangeMic.Mabx);
            Assert.IsFalse(target.IsEuronext,  "Mabx");
            target = new Exchange(ExchangeMic.Marf);
            Assert.IsFalse(target.IsEuronext,  "Marf");
            target = new Exchange(ExchangeMic.Merf);
            Assert.IsFalse(target.IsEuronext,  "Merf");
            target = new Exchange(ExchangeMic.Send);
            Assert.IsFalse(target.IsEuronext,  "Send");
            target = new Exchange(ExchangeMic.Xbar);
            Assert.IsFalse(target.IsEuronext,  "Xbar");
            target = new Exchange(ExchangeMic.Xbil);
            Assert.IsFalse(target.IsEuronext,  "Xbil");
            target = new Exchange(ExchangeMic.Xdrf);
            Assert.IsFalse(target.IsEuronext,  "Xdrf");
            target = new Exchange(ExchangeMic.Xlat);
            Assert.IsFalse(target.IsEuronext,  "Xlat");
            target = new Exchange(ExchangeMic.Xmad);
            Assert.IsFalse(target.IsEuronext,  "Xmad");
            target = new Exchange(ExchangeMic.Xmce);
            Assert.IsFalse(target.IsEuronext,  "Xmce");
            target = new Exchange(ExchangeMic.Xmpw);
            Assert.IsFalse(target.IsEuronext,  "Xmpw");
            target = new Exchange(ExchangeMic.Xmrv);
            Assert.IsFalse(target.IsEuronext,  "Xmrv");
            target = new Exchange(ExchangeMic.Xval);
            Assert.IsFalse(target.IsEuronext,  "Xval");
            target = new Exchange(ExchangeMic.Ibgh);
            Assert.IsFalse(target.IsEuronext,  "Ibgh");
            target = new Exchange(ExchangeMic.Mibg);
            Assert.IsFalse(target.IsEuronext,  "Mibg");
            target = new Exchange(ExchangeMic.Omel);
            Assert.IsFalse(target.IsEuronext,  "Omel");
            target = new Exchange(ExchangeMic.Pave);
            Assert.IsFalse(target.IsEuronext,  "Pave");
            target = new Exchange(ExchangeMic.Xdpa);
            Assert.IsFalse(target.IsEuronext,  "Xdpa");
            target = new Exchange(ExchangeMic.Xnaf);
            Assert.IsFalse(target.IsEuronext,  "Xnaf");
            target = new Exchange(ExchangeMic.Xsrm);
            Assert.IsFalse(target.IsEuronext,  "Xsrm");
            target = new Exchange(ExchangeMic.Xcol);
            Assert.IsFalse(target.IsEuronext,  "Xcol");
            target = new Exchange(ExchangeMic.Xkha);
            Assert.IsFalse(target.IsEuronext,  "Xkha");
            target = new Exchange(ExchangeMic.Xswa);
            Assert.IsFalse(target.IsEuronext,  "Xswa");
            target = new Exchange(ExchangeMic.Cryd);
            Assert.IsFalse(target.IsEuronext,  "Cryd");
            target = new Exchange(ExchangeMic.Cryx);
            Assert.IsFalse(target.IsEuronext,  "Cryx");
            target = new Exchange(ExchangeMic.Sebx);
            Assert.IsFalse(target.IsEuronext,  "Sebx");
            target = new Exchange(ExchangeMic.Ensx);
            Assert.IsFalse(target.IsEuronext,  "Ensx");
            target = new Exchange(ExchangeMic.Xngm);
            Assert.IsFalse(target.IsEuronext,  "Xngm");
            target = new Exchange(ExchangeMic.Nmtf);
            Assert.IsFalse(target.IsEuronext,  "Nmtf");
            target = new Exchange(ExchangeMic.Xndx);
            Assert.IsFalse(target.IsEuronext,  "Xndx");
            target = new Exchange(ExchangeMic.Xnmr);
            Assert.IsFalse(target.IsEuronext,  "Xnmr");
            target = new Exchange(ExchangeMic.Xsat);
            Assert.IsFalse(target.IsEuronext,  "Xsat");
            target = new Exchange(ExchangeMic.Xsto);
            Assert.IsFalse(target.IsEuronext,  "Xsto");
            target = new Exchange(ExchangeMic.Csto);
            Assert.IsFalse(target.IsEuronext,  "Csto");
            target = new Exchange(ExchangeMic.Dnse);
            Assert.IsFalse(target.IsEuronext,  "Dnse");
            target = new Exchange(ExchangeMic.Dsto);
            Assert.IsFalse(target.IsEuronext,  "Dsto");
            target = new Exchange(ExchangeMic.Fnse);
            Assert.IsFalse(target.IsEuronext,  "Fnse");
            target = new Exchange(ExchangeMic.Xopv);
            Assert.IsFalse(target.IsEuronext,  "Xopv");
            target = new Exchange(ExchangeMic.Aixe);
            Assert.IsFalse(target.IsEuronext,  "Aixe");
            target = new Exchange(ExchangeMic.Dots);
            Assert.IsFalse(target.IsEuronext,  "Dots");
            target = new Exchange(ExchangeMic.Euch);
            Assert.IsFalse(target.IsEuronext,  "Euch");
            target = new Exchange(ExchangeMic.Eurm);
            Assert.IsFalse(target.IsEuronext,  "Eurm");
            target = new Exchange(ExchangeMic.Eusc);
            Assert.IsFalse(target.IsEuronext,  "Eusc");
            target = new Exchange(ExchangeMic.Eusp);
            Assert.IsFalse(target.IsEuronext,  "Eusp");
            target = new Exchange(ExchangeMic.Stox);
            Assert.IsFalse(target.IsEuronext,  "Stox");
            target = new Exchange(ExchangeMic.Xscu);
            Assert.IsFalse(target.IsEuronext,  "Xscu");
            target = new Exchange(ExchangeMic.Xstv);
            Assert.IsFalse(target.IsEuronext,  "Xstv");
            target = new Exchange(ExchangeMic.Xstx);
            Assert.IsFalse(target.IsEuronext,  "Xstx");
            target = new Exchange(ExchangeMic.Ubsg);
            Assert.IsFalse(target.IsEuronext,  "Ubsg");
            target = new Exchange(ExchangeMic.Ubsc);
            Assert.IsFalse(target.IsEuronext,  "Ubsc");
            target = new Exchange(ExchangeMic.Ubsf);
            Assert.IsFalse(target.IsEuronext,  "Ubsf");
            target = new Exchange(ExchangeMic.Xbrn);
            Assert.IsFalse(target.IsEuronext,  "Xbrn");
            target = new Exchange(ExchangeMic.Xswx);
            Assert.IsFalse(target.IsEuronext,  "Xswx");
            target = new Exchange(ExchangeMic.Xbtr);
            Assert.IsFalse(target.IsEuronext,  "Xbtr");
            target = new Exchange(ExchangeMic.Xicb);
            Assert.IsFalse(target.IsEuronext,  "Xicb");
            target = new Exchange(ExchangeMic.Xqmh);
            Assert.IsFalse(target.IsEuronext,  "Xqmh");
            target = new Exchange(ExchangeMic.Xvtx);
            Assert.IsFalse(target.IsEuronext,  "Xvtx");
            target = new Exchange(ExchangeMic.Zkbx);
            Assert.IsFalse(target.IsEuronext,  "Zkbx");
            target = new Exchange(ExchangeMic.Xdse);
            Assert.IsFalse(target.IsEuronext,  "Xdse");
            target = new Exchange(ExchangeMic.Roco);
            Assert.IsFalse(target.IsEuronext,  "Roco");
            target = new Exchange(ExchangeMic.Xtaf);
            Assert.IsFalse(target.IsEuronext,  "Xtaf");
            target = new Exchange(ExchangeMic.Xtai);
            Assert.IsFalse(target.IsEuronext,  "Xtai");
            target = new Exchange(ExchangeMic.Xdar);
            Assert.IsFalse(target.IsEuronext,  "Xdar");
            target = new Exchange(ExchangeMic.Afet);
            Assert.IsFalse(target.IsEuronext,  "Afet");
            target = new Exchange(ExchangeMic.Beex);
            Assert.IsFalse(target.IsEuronext,  "Beex");
            target = new Exchange(ExchangeMic.Tfex);
            Assert.IsFalse(target.IsEuronext,  "Tfex");
            target = new Exchange(ExchangeMic.Xbkk);
            Assert.IsFalse(target.IsEuronext,  "Xbkk");
            target = new Exchange(ExchangeMic.Xbkf);
            Assert.IsFalse(target.IsEuronext,  "Xbkf");
            target = new Exchange(ExchangeMic.Xmai);
            Assert.IsFalse(target.IsEuronext,  "Xmai");
            target = new Exchange(ExchangeMic.Clmx);
            Assert.IsFalse(target.IsEuronext,  "Clmx");
            target = new Exchange(ExchangeMic.Hchc);
            Assert.IsFalse(target.IsEuronext,  "Hchc");
            target = new Exchange(ExchangeMic.Ndex);
            Assert.IsFalse(target.IsEuronext,  "Ndex");
            target = new Exchange(ExchangeMic.Ndxs);
            Assert.IsFalse(target.IsEuronext,  "Ndxs");
            target = new Exchange(ExchangeMic.Nlpx);
            Assert.IsFalse(target.IsEuronext,  "Nlpx");
            target = new Exchange(ExchangeMic.Tomx);
            Assert.IsFalse(target.IsEuronext,  "Tomx");
            target = new Exchange(ExchangeMic.Tomd);
            Assert.IsFalse(target.IsEuronext,  "Tomd");
            target = new Exchange(ExchangeMic.Xems);
            Assert.IsFalse(target.IsEuronext,  "Xems");
            target = new Exchange(ExchangeMic.Xhft);
            Assert.IsFalse(target.IsEuronext,  "Xhft");
            target = new Exchange(ExchangeMic.Xtrn);
            Assert.IsFalse(target.IsEuronext,  "Xtrn");
            target = new Exchange(ExchangeMic.Xtun);
            Assert.IsFalse(target.IsEuronext,  "Xtun");
            target = new Exchange(ExchangeMic.Xist);
            Assert.IsFalse(target.IsEuronext,  "Xist");
            target = new Exchange(ExchangeMic.Xdsm);
            Assert.IsFalse(target.IsEuronext,  "Xdsm");
            target = new Exchange(ExchangeMic.Xeqy);
            Assert.IsFalse(target.IsEuronext,  "Xeqy");
            target = new Exchange(ExchangeMic.Xfno);
            Assert.IsFalse(target.IsEuronext,  "Xfno");
            target = new Exchange(ExchangeMic.Xpms);
            Assert.IsFalse(target.IsEuronext,  "Xpms");
            target = new Exchange(ExchangeMic.Ultx);
            Assert.IsFalse(target.IsEuronext,  "Ultx");
            target = new Exchange(ExchangeMic.Xuga);
            Assert.IsFalse(target.IsEuronext,  "Xuga");
            target = new Exchange(ExchangeMic.Eese);
            Assert.IsFalse(target.IsEuronext,  "Eese");
            target = new Exchange(ExchangeMic.Pfts);
            Assert.IsFalse(target.IsEuronext,  "Pfts");
            target = new Exchange(ExchangeMic.Pftq);
            Assert.IsFalse(target.IsEuronext,  "Pftq");
            target = new Exchange(ExchangeMic.Sepe);
            Assert.IsFalse(target.IsEuronext,  "Sepe");
            target = new Exchange(ExchangeMic.Ukex);
            Assert.IsFalse(target.IsEuronext,  "Ukex");
            target = new Exchange(ExchangeMic.Xdfb);
            Assert.IsFalse(target.IsEuronext,  "Xdfb");
            target = new Exchange(ExchangeMic.Xkhr);
            Assert.IsFalse(target.IsEuronext,  "Xkhr");
            target = new Exchange(ExchangeMic.Xkie);
            Assert.IsFalse(target.IsEuronext,  "Xkie");
            target = new Exchange(ExchangeMic.Xkis);
            Assert.IsFalse(target.IsEuronext,  "Xkis");
            target = new Exchange(ExchangeMic.Xode);
            Assert.IsFalse(target.IsEuronext,  "Xode");
            target = new Exchange(ExchangeMic.Xpri);
            Assert.IsFalse(target.IsEuronext,  "Xpri");
            target = new Exchange(ExchangeMic.Xuax);
            Assert.IsFalse(target.IsEuronext,  "Xuax");
            target = new Exchange(ExchangeMic.Xukr);
            Assert.IsFalse(target.IsEuronext,  "Xukr");
            target = new Exchange(ExchangeMic.Dgcx);
            Assert.IsFalse(target.IsEuronext,  "Dgcx");
            target = new Exchange(ExchangeMic.Difx);
            Assert.IsFalse(target.IsEuronext,  "Difx");
            target = new Exchange(ExchangeMic.Dumx);
            Assert.IsFalse(target.IsEuronext,  "Dumx");
            target = new Exchange(ExchangeMic.Xads);
            Assert.IsFalse(target.IsEuronext,  "Xads");
            target = new Exchange(ExchangeMic.Xdfm);
            Assert.IsFalse(target.IsEuronext,  "Xdfm");
            target = new Exchange(ExchangeMic.Aqxe);
            Assert.IsFalse(target.IsEuronext,  "Aqxe");
            target = new Exchange(ExchangeMic.Balt);
            Assert.IsFalse(target.IsEuronext,  "Balt");
            target = new Exchange(ExchangeMic.Bltx);
            Assert.IsFalse(target.IsEuronext,  "Bltx");
            target = new Exchange(ExchangeMic.Bcxe);
            Assert.IsFalse(target.IsEuronext,  "Bcxe");
            target = new Exchange(ExchangeMic.Batd);
            Assert.IsFalse(target.IsEuronext,  "Batd");
            target = new Exchange(ExchangeMic.Bate);
            Assert.IsFalse(target.IsEuronext,  "Bate");
            target = new Exchange(ExchangeMic.Batf);
            Assert.IsFalse(target.IsEuronext,  "Batf");
            target = new Exchange(ExchangeMic.Batp);
            Assert.IsFalse(target.IsEuronext,  "Batp");
            target = new Exchange(ExchangeMic.Botc);
            Assert.IsFalse(target.IsEuronext,  "Botc");
            target = new Exchange(ExchangeMic.Chid);
            Assert.IsFalse(target.IsEuronext,  "Chid");
            target = new Exchange(ExchangeMic.Chio);
            Assert.IsFalse(target.IsEuronext,  "Chio");
            target = new Exchange(ExchangeMic.Chix);
            Assert.IsFalse(target.IsEuronext,  "Chix");
            target = new Exchange(ExchangeMic.Bgci);
            Assert.IsFalse(target.IsEuronext,  "Bgci");
            target = new Exchange(ExchangeMic.Bgcb);
            Assert.IsFalse(target.IsEuronext,  "Bgcb");
            target = new Exchange(ExchangeMic.Blox);
            Assert.IsFalse(target.IsEuronext,  "Blox");
            target = new Exchange(ExchangeMic.Bmtf);
            Assert.IsFalse(target.IsEuronext,  "Bmtf");
            target = new Exchange(ExchangeMic.Boat);
            Assert.IsFalse(target.IsEuronext,  "Boat");
            target = new Exchange(ExchangeMic.Bosc);
            Assert.IsFalse(target.IsEuronext,  "Bosc");
            target = new Exchange(ExchangeMic.Brnx);
            Assert.IsFalse(target.IsEuronext,  "Brnx");
            target = new Exchange(ExchangeMic.Caze);
            Assert.IsFalse(target.IsEuronext,  "Caze");
            target = new Exchange(ExchangeMic.Cco2);
            Assert.IsFalse(target.IsEuronext,  "Cco2");
            target = new Exchange(ExchangeMic.Cgme);
            Assert.IsFalse(target.IsEuronext,  "Cgme");
            target = new Exchange(ExchangeMic.Chev);
            Assert.IsFalse(target.IsEuronext,  "Chev");
            target = new Exchange(ExchangeMic.Blnk);
            Assert.IsFalse(target.IsEuronext,  "Blnk");
            target = new Exchange(ExchangeMic.Cmee);
            Assert.IsFalse(target.IsEuronext,  "Cmee");
            target = new Exchange(ExchangeMic.Cmec);
            Assert.IsFalse(target.IsEuronext,  "Cmec");
            target = new Exchange(ExchangeMic.Cmed);
            Assert.IsFalse(target.IsEuronext,  "Cmed");
            target = new Exchange(ExchangeMic.Cmmt);
            Assert.IsFalse(target.IsEuronext,  "Cmmt");
            target = new Exchange(ExchangeMic.Cseu);
            Assert.IsFalse(target.IsEuronext,  "Cseu");
            target = new Exchange(ExchangeMic.Cscf);
            Assert.IsFalse(target.IsEuronext,  "Cscf");
            target = new Exchange(ExchangeMic.Dbix);
            Assert.IsFalse(target.IsEuronext,  "Dbix");
            target = new Exchange(ExchangeMic.Dbcr);
            Assert.IsFalse(target.IsEuronext,  "Dbcr");
            target = new Exchange(ExchangeMic.Dbcx);
            Assert.IsFalse(target.IsEuronext,  "Dbcx");
            target = new Exchange(ExchangeMic.Dbdc);
            Assert.IsFalse(target.IsEuronext,  "Dbdc");
            target = new Exchange(ExchangeMic.Dbmo);
            Assert.IsFalse(target.IsEuronext,  "Dbmo");
            target = new Exchange(ExchangeMic.Dbse);
            Assert.IsFalse(target.IsEuronext,  "Dbse");
            target = new Exchange(ExchangeMic.Encl);
            Assert.IsFalse(target.IsEuronext,  "Encl");
            target = new Exchange(ExchangeMic.Eqld);
            Assert.IsFalse(target.IsEuronext,  "Eqld");
            target = new Exchange(ExchangeMic.Exeu);
            Assert.IsFalse(target.IsEuronext,  "Exeu");
            target = new Exchange(ExchangeMic.Exbo);
            Assert.IsFalse(target.IsEuronext,  "Exbo");
            target = new Exchange(ExchangeMic.Excp);
            Assert.IsFalse(target.IsEuronext,  "Excp");
            target = new Exchange(ExchangeMic.Exmp);
            Assert.IsFalse(target.IsEuronext,  "Exmp");
            target = new Exchange(ExchangeMic.Exor);
            Assert.IsFalse(target.IsEuronext,  "Exor");
            target = new Exchange(ExchangeMic.Exsi);
            Assert.IsFalse(target.IsEuronext,  "Exsi");
            target = new Exchange(ExchangeMic.Exvp);
            Assert.IsFalse(target.IsEuronext,  "Exvp");
            target = new Exchange(ExchangeMic.Fair);
            Assert.IsFalse(target.IsEuronext,  "Fair");
            target = new Exchange(ExchangeMic.Gemx);
            Assert.IsFalse(target.IsEuronext,  "Gemx");
            target = new Exchange(ExchangeMic.Gfic);
            Assert.IsFalse(target.IsEuronext,  "Gfic");
            target = new Exchange(ExchangeMic.Gfif);
            Assert.IsFalse(target.IsEuronext,  "Gfif");
            target = new Exchange(ExchangeMic.Gfin);
            Assert.IsFalse(target.IsEuronext,  "Gfin");
            target = new Exchange(ExchangeMic.Gfir);
            Assert.IsFalse(target.IsEuronext,  "Gfir");
            target = new Exchange(ExchangeMic.Gmeg);
            Assert.IsFalse(target.IsEuronext,  "Gmeg");
            target = new Exchange(ExchangeMic.Xgcx);
            Assert.IsFalse(target.IsEuronext,  "Xgcx");
            target = new Exchange(ExchangeMic.Xgdx);
            Assert.IsFalse(target.IsEuronext,  "Xgdx");
            target = new Exchange(ExchangeMic.Xgsx);
            Assert.IsFalse(target.IsEuronext,  "Xgsx");
            target = new Exchange(ExchangeMic.Xldx);
            Assert.IsFalse(target.IsEuronext,  "Xldx");
            target = new Exchange(ExchangeMic.Grif);
            Assert.IsFalse(target.IsEuronext,  "Grif");
            target = new Exchange(ExchangeMic.Grse);
            Assert.IsFalse(target.IsEuronext,  "Grse");
            target = new Exchange(ExchangeMic.Hsxe);
            Assert.IsFalse(target.IsEuronext,  "Hsxe");
            target = new Exchange(ExchangeMic.Ibal);
            Assert.IsFalse(target.IsEuronext,  "Ibal");
            target = new Exchange(ExchangeMic.Icap);
            Assert.IsFalse(target.IsEuronext,  "Icap");
            target = new Exchange(ExchangeMic.Btee);
            Assert.IsFalse(target.IsEuronext,  "Btee");
            target = new Exchange(ExchangeMic.Ebsx);
            Assert.IsFalse(target.IsEuronext,  "Ebsx");
            target = new Exchange(ExchangeMic.Icah);
            Assert.IsFalse(target.IsEuronext,  "Icah");
            target = new Exchange(ExchangeMic.Icen);
            Assert.IsFalse(target.IsEuronext,  "Icen");
            target = new Exchange(ExchangeMic.Icse);
            Assert.IsFalse(target.IsEuronext,  "Icse");
            target = new Exchange(ExchangeMic.Ictq);
            Assert.IsFalse(target.IsEuronext,  "Ictq");
            target = new Exchange(ExchangeMic.Isdx);
            Assert.IsFalse(target.IsEuronext,  "Isdx");
            target = new Exchange(ExchangeMic.Wclk);
            Assert.IsFalse(target.IsEuronext,  "Wclk");
            target = new Exchange(ExchangeMic.Ifeu);
            Assert.IsFalse(target.IsEuronext,  "Ifeu");
            target = new Exchange(ExchangeMic.Cxrt);
            Assert.IsFalse(target.IsEuronext,  "Cxrt");
            target = new Exchange(ExchangeMic.Ifen);
            Assert.IsFalse(target.IsEuronext,  "Ifen");
            target = new Exchange(ExchangeMic.Ifll);
            Assert.IsFalse(target.IsEuronext,  "Ifll");
            target = new Exchange(ExchangeMic.Iflo);
            Assert.IsFalse(target.IsEuronext,  "Iflo");
            target = new Exchange(ExchangeMic.Iflx);
            Assert.IsFalse(target.IsEuronext,  "Iflx");
            target = new Exchange(ExchangeMic.Ifut);
            Assert.IsFalse(target.IsEuronext,  "Ifut");
            target = new Exchange(ExchangeMic.Iswa);
            Assert.IsFalse(target.IsEuronext,  "Iswa");
            target = new Exchange(ExchangeMic.Kleu);
            Assert.IsFalse(target.IsEuronext,  "Kleu");
            target = new Exchange(ExchangeMic.Liqu);
            Assert.IsFalse(target.IsEuronext,  "Liqu");
            target = new Exchange(ExchangeMic.Liqf);
            Assert.IsFalse(target.IsEuronext,  "Liqf");
            target = new Exchange(ExchangeMic.Liqh);
            Assert.IsFalse(target.IsEuronext,  "Liqh");
            target = new Exchange(ExchangeMic.Lmax);
            Assert.IsFalse(target.IsEuronext,  "Lmax");
            target = new Exchange(ExchangeMic.Lmad);
            Assert.IsFalse(target.IsEuronext,  "Lmad");
            target = new Exchange(ExchangeMic.Lmae);
            Assert.IsFalse(target.IsEuronext,  "Lmae");
            target = new Exchange(ExchangeMic.Lmaf);
            Assert.IsFalse(target.IsEuronext,  "Lmaf");
            target = new Exchange(ExchangeMic.Lmao);
            Assert.IsFalse(target.IsEuronext,  "Lmao");
            target = new Exchange(ExchangeMic.Lmec);
            Assert.IsFalse(target.IsEuronext,  "Lmec");
            target = new Exchange(ExchangeMic.Lotc);
            Assert.IsFalse(target.IsEuronext,  "Lotc");
            target = new Exchange(ExchangeMic.Pldx);
            Assert.IsFalse(target.IsEuronext,  "Pldx");
            target = new Exchange(ExchangeMic.Lppm);
            Assert.IsFalse(target.IsEuronext,  "Lppm");
            target = new Exchange(ExchangeMic.Mael);
            Assert.IsFalse(target.IsEuronext,  "Mael");
            target = new Exchange(ExchangeMic.Mfgl);
            Assert.IsFalse(target.IsEuronext,  "Mfgl");
            target = new Exchange(ExchangeMic.Mlxn);
            Assert.IsFalse(target.IsEuronext,  "Mlxn");
            target = new Exchange(ExchangeMic.Mlax);
            Assert.IsFalse(target.IsEuronext,  "Mlax");
            target = new Exchange(ExchangeMic.Mleu);
            Assert.IsFalse(target.IsEuronext,  "Mleu");
            target = new Exchange(ExchangeMic.Mlve);
            Assert.IsFalse(target.IsEuronext,  "Mlve");
            target = new Exchange(ExchangeMic.Msip);
            Assert.IsFalse(target.IsEuronext,  "Msip");
            target = new Exchange(ExchangeMic.Mytr);
            Assert.IsFalse(target.IsEuronext,  "Mytr");
            target = new Exchange(ExchangeMic.N2Ex);
            Assert.IsFalse(target.IsEuronext,  "N2Ex");
            target = new Exchange(ExchangeMic.Ndcm);
            Assert.IsFalse(target.IsEuronext,  "Ndcm");
            target = new Exchange(ExchangeMic.Noff);
            Assert.IsFalse(target.IsEuronext,  "Noff");
            target = new Exchange(ExchangeMic.Nuro);
            Assert.IsFalse(target.IsEuronext,  "Nuro");
            target = new Exchange(ExchangeMic.Nurd);
            Assert.IsFalse(target.IsEuronext,  "Nurd");
            target = new Exchange(ExchangeMic.Xnlx);
            Assert.IsFalse(target.IsEuronext,  "Xnlx");
            target = new Exchange(ExchangeMic.Nxeu);
            Assert.IsFalse(target.IsEuronext,  "Nxeu");
            target = new Exchange(ExchangeMic.Peel);
            Assert.IsFalse(target.IsEuronext,  "Peel");
            target = new Exchange(ExchangeMic.Xphx);
            Assert.IsFalse(target.IsEuronext,  "Xphx");
            target = new Exchange(ExchangeMic.Xrsp);
            Assert.IsFalse(target.IsEuronext,  "Xrsp");
            target = new Exchange(ExchangeMic.Pieu);
            Assert.IsFalse(target.IsEuronext,  "Pieu");
            target = new Exchange(ExchangeMic.Pirm);
            Assert.IsFalse(target.IsEuronext,  "Pirm");
            target = new Exchange(ExchangeMic.Qwix);
            Assert.IsFalse(target.IsEuronext,  "Qwix");
            target = new Exchange(ExchangeMic.Rbce);
            Assert.IsFalse(target.IsEuronext,  "Rbce");
            target = new Exchange(ExchangeMic.Rbsx);
            Assert.IsFalse(target.IsEuronext,  "Rbsx");
            target = new Exchange(ExchangeMic.Rtsl);
            Assert.IsFalse(target.IsEuronext,  "Rtsl");
            target = new Exchange(ExchangeMic.Secf);
            Assert.IsFalse(target.IsEuronext,  "Secf");
            target = new Exchange(ExchangeMic.Sgmx);
            Assert.IsFalse(target.IsEuronext,  "Sgmx");
            target = new Exchange(ExchangeMic.Shar);
            Assert.IsFalse(target.IsEuronext,  "Shar");
            target = new Exchange(ExchangeMic.Spec);
            Assert.IsFalse(target.IsEuronext,  "Spec");
            target = new Exchange(ExchangeMic.Sprz);
            Assert.IsFalse(target.IsEuronext,  "Sprz");
            target = new Exchange(ExchangeMic.Ssex);
            Assert.IsFalse(target.IsEuronext,  "Ssex");
            target = new Exchange(ExchangeMic.Swap);
            Assert.IsFalse(target.IsEuronext,  "Swap");
            target = new Exchange(ExchangeMic.Tfsv);
            Assert.IsFalse(target.IsEuronext,  "Tfsv");
            target = new Exchange(ExchangeMic.Tpie);
            Assert.IsFalse(target.IsEuronext,  "Tpie");
            target = new Exchange(ExchangeMic.Trde);
            Assert.IsFalse(target.IsEuronext,  "Trde");
            target = new Exchange(ExchangeMic.Dbvx);
            Assert.IsFalse(target.IsEuronext,  "Dbvx");
            target = new Exchange(ExchangeMic.Parx);
            Assert.IsFalse(target.IsEuronext,  "Parx");
            target = new Exchange(ExchangeMic.Tcds);
            Assert.IsFalse(target.IsEuronext,  "Tcds");
            target = new Exchange(ExchangeMic.Tfsg);
            Assert.IsFalse(target.IsEuronext,  "Tfsg");
            target = new Exchange(ExchangeMic.Trdx);
            Assert.IsFalse(target.IsEuronext,  "Trdx");
            target = new Exchange(ExchangeMic.Vola);
            Assert.IsFalse(target.IsEuronext,  "Vola");
            target = new Exchange(ExchangeMic.Treu);
            Assert.IsFalse(target.IsEuronext,  "Treu");
            target = new Exchange(ExchangeMic.Trqx);
            Assert.IsFalse(target.IsEuronext,  "Trqx");
            target = new Exchange(ExchangeMic.Trqm);
            Assert.IsFalse(target.IsEuronext,  "Trqm");
            target = new Exchange(ExchangeMic.Ubsl);
            Assert.IsFalse(target.IsEuronext,  "Ubsl");
            target = new Exchange(ExchangeMic.Ubse);
            Assert.IsFalse(target.IsEuronext,  "Ubse");
            target = new Exchange(ExchangeMic.Ukgd);
            Assert.IsFalse(target.IsEuronext,  "Ukgd");
            target = new Exchange(ExchangeMic.Ukpx);
            Assert.IsFalse(target.IsEuronext,  "Ukpx");
            target = new Exchange(ExchangeMic.Vega);
            Assert.IsFalse(target.IsEuronext,  "Vega");
            target = new Exchange(ExchangeMic.Wins);
            Assert.IsFalse(target.IsEuronext,  "Wins");
            target = new Exchange(ExchangeMic.Xalt);
            Assert.IsFalse(target.IsEuronext,  "Xalt");
            target = new Exchange(ExchangeMic.Xcor);
            Assert.IsFalse(target.IsEuronext,  "Xcor");
            target = new Exchange(ExchangeMic.Xgcl);
            Assert.IsFalse(target.IsEuronext,  "Xgcl");
            target = new Exchange(ExchangeMic.Xlbm);
            Assert.IsFalse(target.IsEuronext,  "Xlbm");
            target = new Exchange(ExchangeMic.Xlch);
            Assert.IsFalse(target.IsEuronext,  "Xlch");
            target = new Exchange(ExchangeMic.Xlme);
            Assert.IsFalse(target.IsEuronext,  "Xlme");
            target = new Exchange(ExchangeMic.Xlon);
            Assert.IsFalse(target.IsEuronext,  "Xlon");
            target = new Exchange(ExchangeMic.Xlod);
            Assert.IsFalse(target.IsEuronext,  "Xlod");
            target = new Exchange(ExchangeMic.Xmts);
            Assert.IsFalse(target.IsEuronext,  "Xmts");
            target = new Exchange(ExchangeMic.Amts);
            Assert.IsFalse(target.IsEuronext,  "Amts");
            target = new Exchange(ExchangeMic.Bvuk);
            Assert.IsFalse(target.IsEuronext,  "Bvuk");
            target = new Exchange(ExchangeMic.Eacm);
            Assert.IsFalse(target.IsEuronext,  "Eacm");
            target = new Exchange(ExchangeMic.Emts);
            Assert.IsFalse(target.IsEuronext,  "Emts");
            target = new Exchange(ExchangeMic.Gmts);
            Assert.IsFalse(target.IsEuronext,  "Gmts");
            target = new Exchange(ExchangeMic.Hung);
            Assert.IsFalse(target.IsEuronext,  "Hung");
            target = new Exchange(ExchangeMic.Imts);
            Assert.IsFalse(target.IsEuronext,  "Imts");
            target = new Exchange(ExchangeMic.Mczk);
            Assert.IsFalse(target.IsEuronext,  "Mczk");
            target = new Exchange(ExchangeMic.Mtsa);
            Assert.IsFalse(target.IsEuronext,  "Mtsa");
            target = new Exchange(ExchangeMic.Mtsg);
            Assert.IsFalse(target.IsEuronext,  "Mtsg");
            target = new Exchange(ExchangeMic.Mtss);
            Assert.IsFalse(target.IsEuronext,  "Mtss");
            target = new Exchange(ExchangeMic.Mtsw);
            Assert.IsFalse(target.IsEuronext,  "Mtsw");
            target = new Exchange(ExchangeMic.Port);
            Assert.IsFalse(target.IsEuronext,  "Port");
            target = new Exchange(ExchangeMic.Prme);
            Assert.IsFalse(target.IsEuronext,  "Prme");
            target = new Exchange(ExchangeMic.Rmts);
            Assert.IsFalse(target.IsEuronext,  "Rmts");
            target = new Exchange(ExchangeMic.Smts);
            Assert.IsFalse(target.IsEuronext,  "Smts");
            target = new Exchange(ExchangeMic.Vmts);
            Assert.IsFalse(target.IsEuronext,  "Vmts");
            target = new Exchange(ExchangeMic.Xsga);
            Assert.IsFalse(target.IsEuronext,  "Xsga");
            target = new Exchange(ExchangeMic.Xsmp);
            Assert.IsFalse(target.IsEuronext,  "Xsmp");
            target = new Exchange(ExchangeMic.Xswb);
            Assert.IsFalse(target.IsEuronext,  "Xswb");
            target = new Exchange(ExchangeMic.Xtup);
            Assert.IsFalse(target.IsEuronext,  "Xtup");
            target = new Exchange(ExchangeMic.Tben);
            Assert.IsFalse(target.IsEuronext,  "Tben");
            target = new Exchange(ExchangeMic.Tbla);
            Assert.IsFalse(target.IsEuronext,  "Tbla");
            target = new Exchange(ExchangeMic.Tpcd);
            Assert.IsFalse(target.IsEuronext,  "Tpcd");
            target = new Exchange(ExchangeMic.Tpeq);
            Assert.IsFalse(target.IsEuronext,  "Tpeq");
            target = new Exchange(ExchangeMic.Tpfd);
            Assert.IsFalse(target.IsEuronext,  "Tpfd");
            target = new Exchange(ExchangeMic.Tpre);
            Assert.IsFalse(target.IsEuronext,  "Tpre");
            target = new Exchange(ExchangeMic.Tpsd);
            Assert.IsFalse(target.IsEuronext,  "Tpsd");
            target = new Exchange(ExchangeMic.Tpsp);
            Assert.IsFalse(target.IsEuronext,  "Tpsp");
            target = new Exchange(ExchangeMic.Xtpe);
            Assert.IsFalse(target.IsEuronext,  "Xtpe");
            target = new Exchange(ExchangeMic.Xubs);
            Assert.IsFalse(target.IsEuronext,  "Xubs");
            target = new Exchange(ExchangeMic.Aats);
            Assert.IsFalse(target.IsEuronext,  "Aats");
            target = new Exchange(ExchangeMic.Aqua);
            Assert.IsFalse(target.IsEuronext,  "Aqua");
            target = new Exchange(ExchangeMic.Atdf);
            Assert.IsFalse(target.IsEuronext,  "Atdf");
            target = new Exchange(ExchangeMic.Core);
            Assert.IsFalse(target.IsEuronext,  "Core");
            target = new Exchange(ExchangeMic.Baml);
            Assert.IsFalse(target.IsEuronext,  "Baml");
            target = new Exchange(ExchangeMic.Mlco);
            Assert.IsFalse(target.IsEuronext,  "Mlco");
            target = new Exchange(ExchangeMic.Mlvx);
            Assert.IsFalse(target.IsEuronext,  "Mlvx");
            target = new Exchange(ExchangeMic.Barx);
            Assert.IsFalse(target.IsEuronext,  "Barx");
            target = new Exchange(ExchangeMic.Bard);
            Assert.IsFalse(target.IsEuronext,  "Bard");
            target = new Exchange(ExchangeMic.Barl);
            Assert.IsFalse(target.IsEuronext,  "Barl");
            target = new Exchange(ExchangeMic.Bcdx);
            Assert.IsFalse(target.IsEuronext,  "Bcdx");
            target = new Exchange(ExchangeMic.Bats);
            Assert.IsFalse(target.IsEuronext,  "Bats");
            target = new Exchange(ExchangeMic.Bato);
            Assert.IsFalse(target.IsEuronext,  "Bato");
            target = new Exchange(ExchangeMic.Baty);
            Assert.IsFalse(target.IsEuronext,  "Baty");
            target = new Exchange(ExchangeMic.Byxd);
            Assert.IsFalse(target.IsEuronext,  "Byxd");
            target = new Exchange(ExchangeMic.Bzxd);
            Assert.IsFalse(target.IsEuronext,  "Bzxd");
            target = new Exchange(ExchangeMic.Bbsf);
            Assert.IsFalse(target.IsEuronext,  "Bbsf");
            target = new Exchange(ExchangeMic.Bgcf);
            Assert.IsFalse(target.IsEuronext,  "Bgcf");
            target = new Exchange(ExchangeMic.Bgcd);
            Assert.IsFalse(target.IsEuronext,  "Bgcd");
            target = new Exchange(ExchangeMic.Bids);
            Assert.IsFalse(target.IsEuronext,  "Bids");
            target = new Exchange(ExchangeMic.Bltd);
            Assert.IsFalse(target.IsEuronext,  "Bltd");
            target = new Exchange(ExchangeMic.Bpol);
            Assert.IsFalse(target.IsEuronext,  "Bpol");
            target = new Exchange(ExchangeMic.Bndd);
            Assert.IsFalse(target.IsEuronext,  "Bndd");
            target = new Exchange(ExchangeMic.Bnyc);
            Assert.IsFalse(target.IsEuronext,  "Bnyc");
            target = new Exchange(ExchangeMic.Nyfx);
            Assert.IsFalse(target.IsEuronext,  "Nyfx");
            target = new Exchange(ExchangeMic.Vtex);
            Assert.IsFalse(target.IsEuronext,  "Vtex");
            target = new Exchange(ExchangeMic.Btec);
            Assert.IsFalse(target.IsEuronext,  "Btec");
            target = new Exchange(ExchangeMic.Icsu);
            Assert.IsFalse(target.IsEuronext,  "Icsu");
            target = new Exchange(ExchangeMic.Cded);
            Assert.IsFalse(target.IsEuronext,  "Cded");
            target = new Exchange(ExchangeMic.Cgmi);
            Assert.IsFalse(target.IsEuronext,  "Cgmi");
            target = new Exchange(ExchangeMic.Cblc);
            Assert.IsFalse(target.IsEuronext,  "Cblc");
            target = new Exchange(ExchangeMic.Cgmu);
            Assert.IsFalse(target.IsEuronext,  "Cgmu");
            target = new Exchange(ExchangeMic.Cicx);
            Assert.IsFalse(target.IsEuronext,  "Cicx");
            target = new Exchange(ExchangeMic.Lqfi);
            Assert.IsFalse(target.IsEuronext,  "Lqfi");
            target = new Exchange(ExchangeMic.Cmsf);
            Assert.IsFalse(target.IsEuronext,  "Cmsf");
            target = new Exchange(ExchangeMic.Cred);
            Assert.IsFalse(target.IsEuronext,  "Cred");
            target = new Exchange(ExchangeMic.Caes);
            Assert.IsFalse(target.IsEuronext,  "Caes");
            target = new Exchange(ExchangeMic.Cslp);
            Assert.IsFalse(target.IsEuronext,  "Cslp");
            target = new Exchange(ExchangeMic.Dbsx);
            Assert.IsFalse(target.IsEuronext,  "Dbsx");
            target = new Exchange(ExchangeMic.Deal);
            Assert.IsFalse(target.IsEuronext,  "Deal");
            target = new Exchange(ExchangeMic.Edge);
            Assert.IsFalse(target.IsEuronext,  "Edge");
            target = new Exchange(ExchangeMic.Eddp);
            Assert.IsFalse(target.IsEuronext,  "Eddp");
            target = new Exchange(ExchangeMic.Edga);
            Assert.IsFalse(target.IsEuronext,  "Edga");
            target = new Exchange(ExchangeMic.Edgd);
            Assert.IsFalse(target.IsEuronext,  "Edgd");
            target = new Exchange(ExchangeMic.Edgo);
            Assert.IsFalse(target.IsEuronext,  "Edgo");
            target = new Exchange(ExchangeMic.Edgx);
            Assert.IsFalse(target.IsEuronext,  "Edgx");
            target = new Exchange(ExchangeMic.Eris);
            Assert.IsFalse(target.IsEuronext,  "Eris");
            target = new Exchange(ExchangeMic.Fast);
            Assert.IsFalse(target.IsEuronext,  "Fast");
            target = new Exchange(ExchangeMic.Finr);
            Assert.IsFalse(target.IsEuronext,  "Finr");
            target = new Exchange(ExchangeMic.Finn);
            Assert.IsFalse(target.IsEuronext,  "Finn");
            target = new Exchange(ExchangeMic.Fino);
            Assert.IsFalse(target.IsEuronext,  "Fino");
            target = new Exchange(ExchangeMic.Finy);
            Assert.IsFalse(target.IsEuronext,  "Finy");
            target = new Exchange(ExchangeMic.Ootc);
            Assert.IsFalse(target.IsEuronext,  "Ootc");
            target = new Exchange(ExchangeMic.Xadf);
            Assert.IsFalse(target.IsEuronext,  "Xadf");
            target = new Exchange(ExchangeMic.Fxal);
            Assert.IsFalse(target.IsEuronext,  "Fxal");
            target = new Exchange(ExchangeMic.Fxcm);
            Assert.IsFalse(target.IsEuronext,  "Fxcm");
            target = new Exchange(ExchangeMic.G1xx);
            Assert.IsFalse(target.IsEuronext,  "G1xx");
            target = new Exchange(ExchangeMic.Gllc);
            Assert.IsFalse(target.IsEuronext,  "Gllc");
            target = new Exchange(ExchangeMic.Glps);
            Assert.IsFalse(target.IsEuronext,  "Glps");
            target = new Exchange(ExchangeMic.Govx);
            Assert.IsFalse(target.IsEuronext,  "Govx");
            target = new Exchange(ExchangeMic.Gree);
            Assert.IsFalse(target.IsEuronext,  "Gree");
            target = new Exchange(ExchangeMic.Gsef);
            Assert.IsFalse(target.IsEuronext,  "Gsef");
            target = new Exchange(ExchangeMic.Gtco);
            Assert.IsFalse(target.IsEuronext,  "Gtco");
            target = new Exchange(ExchangeMic.Hegx);
            Assert.IsFalse(target.IsEuronext,  "Hegx");
            target = new Exchange(ExchangeMic.Hppo);
            Assert.IsFalse(target.IsEuronext,  "Hppo");
            target = new Exchange(ExchangeMic.Hsfx);
            Assert.IsFalse(target.IsEuronext,  "Hsfx");
            target = new Exchange(ExchangeMic.Icel);
            Assert.IsFalse(target.IsEuronext,  "Icel");
            target = new Exchange(ExchangeMic.Iexg);
            Assert.IsFalse(target.IsEuronext,  "Iexg");
            target = new Exchange(ExchangeMic.Ifus);
            Assert.IsFalse(target.IsEuronext,  "Ifus");
            target = new Exchange(ExchangeMic.Ices);
            Assert.IsFalse(target.IsEuronext,  "Ices");
            target = new Exchange(ExchangeMic.Iepa);
            Assert.IsFalse(target.IsEuronext,  "Iepa");
            target = new Exchange(ExchangeMic.Ifed);
            Assert.IsFalse(target.IsEuronext,  "Ifed");
            target = new Exchange(ExchangeMic.Imag);
            Assert.IsFalse(target.IsEuronext,  "Imag");
            target = new Exchange(ExchangeMic.Imbd);
            Assert.IsFalse(target.IsEuronext,  "Imbd");
            target = new Exchange(ExchangeMic.Imcc);
            Assert.IsFalse(target.IsEuronext,  "Imcc");
            target = new Exchange(ExchangeMic.Imcg);
            Assert.IsFalse(target.IsEuronext,  "Imcg");
            target = new Exchange(ExchangeMic.Imco);
            Assert.IsFalse(target.IsEuronext,  "Imco");
            target = new Exchange(ExchangeMic.Imcr);
            Assert.IsFalse(target.IsEuronext,  "Imcr");
            target = new Exchange(ExchangeMic.Imen);
            Assert.IsFalse(target.IsEuronext,  "Imen");
            target = new Exchange(ExchangeMic.Imeq);
            Assert.IsFalse(target.IsEuronext,  "Imeq");
            target = new Exchange(ExchangeMic.Imfx);
            Assert.IsFalse(target.IsEuronext,  "Imfx");
            target = new Exchange(ExchangeMic.Imir);
            Assert.IsFalse(target.IsEuronext,  "Imir");
            target = new Exchange(ExchangeMic.Isda);
            Assert.IsFalse(target.IsEuronext,  "Isda");
            target = new Exchange(ExchangeMic.Itgi);
            Assert.IsFalse(target.IsEuronext,  "Itgi");
            target = new Exchange(ExchangeMic.Jefx);
            Assert.IsFalse(target.IsEuronext,  "Jefx");
            target = new Exchange(ExchangeMic.Jpmx);
            Assert.IsFalse(target.IsEuronext,  "Jpmx");
            target = new Exchange(ExchangeMic.Jsef);
            Assert.IsFalse(target.IsEuronext,  "Jsef");
            target = new Exchange(ExchangeMic.Jses);
            Assert.IsFalse(target.IsEuronext,  "Jses");
            target = new Exchange(ExchangeMic.Jsjx);
            Assert.IsFalse(target.IsEuronext,  "Jsjx");
            target = new Exchange(ExchangeMic.Knig);
            Assert.IsFalse(target.IsEuronext,  "Knig");
            target = new Exchange(ExchangeMic.Kncm);
            Assert.IsFalse(target.IsEuronext,  "Kncm");
            target = new Exchange(ExchangeMic.Knem);
            Assert.IsFalse(target.IsEuronext,  "Knem");
            target = new Exchange(ExchangeMic.Knli);
            Assert.IsFalse(target.IsEuronext,  "Knli");
            target = new Exchange(ExchangeMic.Knmx);
            Assert.IsFalse(target.IsEuronext,  "Knmx");
            target = new Exchange(ExchangeMic.Lasf);
            Assert.IsFalse(target.IsEuronext,  "Lasf");
            target = new Exchange(ExchangeMic.Levl);
            Assert.IsFalse(target.IsEuronext,  "Levl");
            target = new Exchange(ExchangeMic.Lius);
            Assert.IsFalse(target.IsEuronext,  "Lius");
            target = new Exchange(ExchangeMic.Lifi);
            Assert.IsFalse(target.IsEuronext,  "Lifi");
            target = new Exchange(ExchangeMic.Liuh);
            Assert.IsFalse(target.IsEuronext,  "Liuh");
            target = new Exchange(ExchangeMic.Lqed);
            Assert.IsFalse(target.IsEuronext,  "Lqed");
            target = new Exchange(ExchangeMic.Ltaa);
            Assert.IsFalse(target.IsEuronext,  "Ltaa");
            target = new Exchange(ExchangeMic.Lmnx);
            Assert.IsFalse(target.IsEuronext,  "Lmnx");
            target = new Exchange(ExchangeMic.Mihi);
            Assert.IsFalse(target.IsEuronext,  "Mihi");
            target = new Exchange(ExchangeMic.Mprl);
            Assert.IsFalse(target.IsEuronext,  "Mprl");
            target = new Exchange(ExchangeMic.Xmio);
            Assert.IsFalse(target.IsEuronext,  "Xmio");
            target = new Exchange(ExchangeMic.Msco);
            Assert.IsFalse(target.IsEuronext,  "Msco");
            target = new Exchange(ExchangeMic.Mslp);
            Assert.IsFalse(target.IsEuronext,  "Mslp");
            target = new Exchange(ExchangeMic.Mspl);
            Assert.IsFalse(target.IsEuronext,  "Mspl");
            target = new Exchange(ExchangeMic.Msrp);
            Assert.IsFalse(target.IsEuronext,  "Msrp");
            target = new Exchange(ExchangeMic.Mstx);
            Assert.IsFalse(target.IsEuronext,  "Mstx");
            target = new Exchange(ExchangeMic.Mtus);
            Assert.IsFalse(target.IsEuronext,  "Mtus");
            target = new Exchange(ExchangeMic.Bvus);
            Assert.IsFalse(target.IsEuronext,  "Bvus");
            target = new Exchange(ExchangeMic.Mtsb);
            Assert.IsFalse(target.IsEuronext,  "Mtsb");
            target = new Exchange(ExchangeMic.Mtxx);
            Assert.IsFalse(target.IsEuronext,  "Mtxx");
            target = new Exchange(ExchangeMic.Mtxa);
            Assert.IsFalse(target.IsEuronext,  "Mtxa");
            target = new Exchange(ExchangeMic.Mtxc);
            Assert.IsFalse(target.IsEuronext,  "Mtxc");
            target = new Exchange(ExchangeMic.Mtxm);
            Assert.IsFalse(target.IsEuronext,  "Mtxm");
            target = new Exchange(ExchangeMic.Mtxs);
            Assert.IsFalse(target.IsEuronext,  "Mtxs");
            target = new Exchange(ExchangeMic.Nblx);
            Assert.IsFalse(target.IsEuronext,  "Nblx");
            target = new Exchange(ExchangeMic.Nfsc);
            Assert.IsFalse(target.IsEuronext,  "Nfsc");
            target = new Exchange(ExchangeMic.Nfsa);
            Assert.IsFalse(target.IsEuronext,  "Nfsa");
            target = new Exchange(ExchangeMic.Nfsd);
            Assert.IsFalse(target.IsEuronext,  "Nfsd");
            target = new Exchange(ExchangeMic.Xstm);
            Assert.IsFalse(target.IsEuronext,  "Xstm");
            target = new Exchange(ExchangeMic.Nmra);
            Assert.IsFalse(target.IsEuronext,  "Nmra");
            target = new Exchange(ExchangeMic.Nodx);
            Assert.IsFalse(target.IsEuronext,  "Nodx");
            target = new Exchange(ExchangeMic.Nxus);
            Assert.IsFalse(target.IsEuronext,  "Nxus");
            target = new Exchange(ExchangeMic.Nypc);
            Assert.IsFalse(target.IsEuronext,  "Nypc");
            target = new Exchange(ExchangeMic.Ollc);
            Assert.IsFalse(target.IsEuronext,  "Ollc");
            target = new Exchange(ExchangeMic.Opra);
            Assert.IsFalse(target.IsEuronext,  "Opra");
            target = new Exchange(ExchangeMic.Otcm);
            Assert.IsFalse(target.IsEuronext,  "Otcm");
            target = new Exchange(ExchangeMic.Cave);
            Assert.IsFalse(target.IsEuronext,  "Cave");
            target = new Exchange(ExchangeMic.Otcb);
            Assert.IsFalse(target.IsEuronext,  "Otcb");
            target = new Exchange(ExchangeMic.Otcq);
            Assert.IsFalse(target.IsEuronext,  "Otcq");
            target = new Exchange(ExchangeMic.Pinc);
            Assert.IsFalse(target.IsEuronext,  "Pinc");
            target = new Exchange(ExchangeMic.Pini);
            Assert.IsFalse(target.IsEuronext,  "Pini");
            target = new Exchange(ExchangeMic.Pinl);
            Assert.IsFalse(target.IsEuronext,  "Pinl");
            target = new Exchange(ExchangeMic.Pinx);
            Assert.IsFalse(target.IsEuronext,  "Pinx");
            target = new Exchange(ExchangeMic.Psgm);
            Assert.IsFalse(target.IsEuronext,  "Psgm");
            target = new Exchange(ExchangeMic.Pdqx);
            Assert.IsFalse(target.IsEuronext,  "Pdqx");
            target = new Exchange(ExchangeMic.Pdqd);
            Assert.IsFalse(target.IsEuronext,  "Pdqd");
            target = new Exchange(ExchangeMic.Pipe);
            Assert.IsFalse(target.IsEuronext,  "Pipe");
            target = new Exchange(ExchangeMic.Prse);
            Assert.IsFalse(target.IsEuronext,  "Prse");
            target = new Exchange(ExchangeMic.Pulx);
            Assert.IsFalse(target.IsEuronext,  "Pulx");
            target = new Exchange(ExchangeMic.Ricx);
            Assert.IsFalse(target.IsEuronext,  "Ricx");
            target = new Exchange(ExchangeMic.Ricd);
            Assert.IsFalse(target.IsEuronext,  "Ricd");
            target = new Exchange(ExchangeMic.Sgma);
            Assert.IsFalse(target.IsEuronext,  "Sgma");
            target = new Exchange(ExchangeMic.Shaw);
            Assert.IsFalse(target.IsEuronext,  "Shaw");
            target = new Exchange(ExchangeMic.Shad);
            Assert.IsFalse(target.IsEuronext,  "Shad");
            target = new Exchange(ExchangeMic.Soho);
            Assert.IsFalse(target.IsEuronext,  "Soho");
            target = new Exchange(ExchangeMic.Sstx);
            Assert.IsFalse(target.IsEuronext,  "Sstx");
            target = new Exchange(ExchangeMic.Tera);
            Assert.IsFalse(target.IsEuronext,  "Tera");
            target = new Exchange(ExchangeMic.Tfsu);
            Assert.IsFalse(target.IsEuronext,  "Tfsu");
            target = new Exchange(ExchangeMic.Trck);
            Assert.IsFalse(target.IsEuronext,  "Trck");
            target = new Exchange(ExchangeMic.Trux);
            Assert.IsFalse(target.IsEuronext,  "Trux");
            target = new Exchange(ExchangeMic.Tru1);
            Assert.IsFalse(target.IsEuronext,  "Tru1");
            target = new Exchange(ExchangeMic.Tru2);
            Assert.IsFalse(target.IsEuronext,  "Tru2");
            target = new Exchange(ExchangeMic.Trwb);
            Assert.IsFalse(target.IsEuronext,  "Trwb");
            target = new Exchange(ExchangeMic.Dwsf);
            Assert.IsFalse(target.IsEuronext,  "Dwsf");
            target = new Exchange(ExchangeMic.Twsf);
            Assert.IsFalse(target.IsEuronext,  "Twsf");
            target = new Exchange(ExchangeMic.Tsbx);
            Assert.IsFalse(target.IsEuronext,  "Tsbx");
            target = new Exchange(ExchangeMic.Tsef);
            Assert.IsFalse(target.IsEuronext,  "Tsef");
            target = new Exchange(ExchangeMic.Ubsa);
            Assert.IsFalse(target.IsEuronext,  "Ubsa");
            target = new Exchange(ExchangeMic.Ubsp);
            Assert.IsFalse(target.IsEuronext,  "Ubsp");
            target = new Exchange(ExchangeMic.Welx);
            Assert.IsFalse(target.IsEuronext,  "Welx");
            target = new Exchange(ExchangeMic.Wsag);
            Assert.IsFalse(target.IsEuronext,  "Wsag");
            target = new Exchange(ExchangeMic.Xaqs);
            Assert.IsFalse(target.IsEuronext,  "Xaqs");
            target = new Exchange(ExchangeMic.Xbox);
            Assert.IsFalse(target.IsEuronext,  "Xbox");
            target = new Exchange(ExchangeMic.Xcbo);
            Assert.IsFalse(target.IsEuronext,  "Xcbo");
            target = new Exchange(ExchangeMic.C2Ox);
            Assert.IsFalse(target.IsEuronext,  "C2Ox");
            target = new Exchange(ExchangeMic.Cbsx);
            Assert.IsFalse(target.IsEuronext,  "Cbsx");
            target = new Exchange(ExchangeMic.Xcbf);
            Assert.IsFalse(target.IsEuronext,  "Xcbf");
            target = new Exchange(ExchangeMic.Xcbt);
            Assert.IsFalse(target.IsEuronext,  "Xcbt");
            target = new Exchange(ExchangeMic.Fcbt);
            Assert.IsFalse(target.IsEuronext,  "Fcbt");
            target = new Exchange(ExchangeMic.Xkbt);
            Assert.IsFalse(target.IsEuronext,  "Xkbt");
            target = new Exchange(ExchangeMic.Xcff);
            Assert.IsFalse(target.IsEuronext,  "Xcff");
            target = new Exchange(ExchangeMic.Xchi);
            Assert.IsFalse(target.IsEuronext,  "Xchi");
            target = new Exchange(ExchangeMic.Xcis);
            Assert.IsFalse(target.IsEuronext,  "Xcis");
            target = new Exchange(ExchangeMic.Xcme);
            Assert.IsFalse(target.IsEuronext,  "Xcme");
            target = new Exchange(ExchangeMic.Cbts);
            Assert.IsFalse(target.IsEuronext,  "Cbts");
            target = new Exchange(ExchangeMic.Cecs);
            Assert.IsFalse(target.IsEuronext,  "Cecs");
            target = new Exchange(ExchangeMic.Cmes);
            Assert.IsFalse(target.IsEuronext,  "Cmes");
            target = new Exchange(ExchangeMic.Fcme);
            Assert.IsFalse(target.IsEuronext,  "Fcme");
            target = new Exchange(ExchangeMic.Glbx);
            Assert.IsFalse(target.IsEuronext,  "Glbx");
            target = new Exchange(ExchangeMic.Nyms);
            Assert.IsFalse(target.IsEuronext,  "Nyms");
            target = new Exchange(ExchangeMic.Ximm);
            Assert.IsFalse(target.IsEuronext,  "Ximm");
            target = new Exchange(ExchangeMic.Xiom);
            Assert.IsFalse(target.IsEuronext,  "Xiom");
            target = new Exchange(ExchangeMic.Xcur);
            Assert.IsFalse(target.IsEuronext,  "Xcur");
            target = new Exchange(ExchangeMic.Xelx);
            Assert.IsFalse(target.IsEuronext,  "Xelx");
            target = new Exchange(ExchangeMic.Xfci);
            Assert.IsFalse(target.IsEuronext,  "Xfci");
            target = new Exchange(ExchangeMic.Xgmx);
            Assert.IsFalse(target.IsEuronext,  "Xgmx");
            target = new Exchange(ExchangeMic.Xins);
            Assert.IsFalse(target.IsEuronext,  "Xins");
            target = new Exchange(ExchangeMic.Iblx);
            Assert.IsFalse(target.IsEuronext,  "Iblx");
            target = new Exchange(ExchangeMic.Icbx);
            Assert.IsFalse(target.IsEuronext,  "Icbx");
            target = new Exchange(ExchangeMic.Icro);
            Assert.IsFalse(target.IsEuronext,  "Icro");
            target = new Exchange(ExchangeMic.Iidx);
            Assert.IsFalse(target.IsEuronext,  "Iidx");
            target = new Exchange(ExchangeMic.Mocx);
            Assert.IsFalse(target.IsEuronext,  "Mocx");
            target = new Exchange(ExchangeMic.Rcbx);
            Assert.IsFalse(target.IsEuronext,  "Rcbx");
            target = new Exchange(ExchangeMic.Xisx);
            Assert.IsFalse(target.IsEuronext,  "Xisx");
            target = new Exchange(ExchangeMic.Gmni);
            Assert.IsFalse(target.IsEuronext,  "Gmni");
            target = new Exchange(ExchangeMic.Mcry);
            Assert.IsFalse(target.IsEuronext,  "Mcry");
            target = new Exchange(ExchangeMic.Xisa);
            Assert.IsFalse(target.IsEuronext,  "Xisa");
            target = new Exchange(ExchangeMic.Xise);
            Assert.IsFalse(target.IsEuronext,  "Xise");
            target = new Exchange(ExchangeMic.Xmer);
            Assert.IsFalse(target.IsEuronext,  "Xmer");
            target = new Exchange(ExchangeMic.Xmge);
            Assert.IsFalse(target.IsEuronext,  "Xmge");
            target = new Exchange(ExchangeMic.Xnas);
            Assert.IsFalse(target.IsEuronext,  "Xnas");
            target = new Exchange(ExchangeMic.Bosd);
            Assert.IsFalse(target.IsEuronext,  "Bosd");
            target = new Exchange(ExchangeMic.Espd);
            Assert.IsFalse(target.IsEuronext,  "Espd");
            target = new Exchange(ExchangeMic.Nasd);
            Assert.IsFalse(target.IsEuronext,  "Nasd");
            target = new Exchange(ExchangeMic.Xbos);
            Assert.IsFalse(target.IsEuronext,  "Xbos");
            target = new Exchange(ExchangeMic.Xbrt);
            Assert.IsFalse(target.IsEuronext,  "Xbrt");
            target = new Exchange(ExchangeMic.Xbxo);
            Assert.IsFalse(target.IsEuronext,  "Xbxo");
            target = new Exchange(ExchangeMic.Xncm);
            Assert.IsFalse(target.IsEuronext,  "Xncm");
            target = new Exchange(ExchangeMic.Xndq);
            Assert.IsFalse(target.IsEuronext,  "Xndq");
            target = new Exchange(ExchangeMic.Xngs);
            Assert.IsFalse(target.IsEuronext,  "Xngs");
            target = new Exchange(ExchangeMic.Xnim);
            Assert.IsFalse(target.IsEuronext,  "Xnim");
            target = new Exchange(ExchangeMic.Xnms);
            Assert.IsFalse(target.IsEuronext,  "Xnms");
            target = new Exchange(ExchangeMic.Xpbt);
            Assert.IsFalse(target.IsEuronext,  "Xpbt");
            target = new Exchange(ExchangeMic.Xphl);
            Assert.IsFalse(target.IsEuronext,  "Xphl");
            target = new Exchange(ExchangeMic.Xpho);
            Assert.IsFalse(target.IsEuronext,  "Xpho");
            target = new Exchange(ExchangeMic.Xpor);
            Assert.IsFalse(target.IsEuronext,  "Xpor");
            target = new Exchange(ExchangeMic.Xpsx);
            Assert.IsFalse(target.IsEuronext,  "Xpsx");
            target = new Exchange(ExchangeMic.Xnym);
            Assert.IsFalse(target.IsEuronext,  "Xnym");
            target = new Exchange(ExchangeMic.Xcec);
            Assert.IsFalse(target.IsEuronext,  "Xcec");
            target = new Exchange(ExchangeMic.Xnye);
            Assert.IsFalse(target.IsEuronext,  "Xnye");
            target = new Exchange(ExchangeMic.Xnyl);
            Assert.IsFalse(target.IsEuronext,  "Xnyl");
            target = new Exchange(ExchangeMic.Xnys);
            Assert.IsFalse(target.IsEuronext,  "Xnys");
            target = new Exchange(ExchangeMic.Aldp);
            Assert.IsFalse(target.IsEuronext,  "Aldp");
            target = new Exchange(ExchangeMic.Amxo);
            Assert.IsFalse(target.IsEuronext,  "Amxo");
            target = new Exchange(ExchangeMic.Arcd);
            Assert.IsFalse(target.IsEuronext,  "Arcd");
            target = new Exchange(ExchangeMic.Arco);
            Assert.IsFalse(target.IsEuronext,  "Arco");
            target = new Exchange(ExchangeMic.Arcx);
            Assert.IsFalse(target.IsEuronext,  "Arcx");
            target = new Exchange(ExchangeMic.Nysd);
            Assert.IsFalse(target.IsEuronext,  "Nysd");
            target = new Exchange(ExchangeMic.Xase);
            Assert.IsFalse(target.IsEuronext,  "Xase");
            target = new Exchange(ExchangeMic.Xnli);
            Assert.IsFalse(target.IsEuronext,  "Xnli");
            target = new Exchange(ExchangeMic.Xoch);
            Assert.IsFalse(target.IsEuronext,  "Xoch");
            target = new Exchange(ExchangeMic.Xotc);
            Assert.IsFalse(target.IsEuronext,  "Xotc");
            target = new Exchange(ExchangeMic.Xsef);
            Assert.IsFalse(target.IsEuronext,  "Xsef");
            target = new Exchange(ExchangeMic.Xwee);
            Assert.IsFalse(target.IsEuronext,  "Xwee");
            target = new Exchange(ExchangeMic.Bvur);
            Assert.IsFalse(target.IsEuronext,  "Bvur");
            target = new Exchange(ExchangeMic.Xmnt);
            Assert.IsFalse(target.IsEuronext,  "Xmnt");
            target = new Exchange(ExchangeMic.Xcet);
            Assert.IsFalse(target.IsEuronext,  "Xcet");
            target = new Exchange(ExchangeMic.Xcue);
            Assert.IsFalse(target.IsEuronext,  "Xcue");
            target = new Exchange(ExchangeMic.Xkce);
            Assert.IsFalse(target.IsEuronext,  "Xkce");
            target = new Exchange(ExchangeMic.Xste);
            Assert.IsFalse(target.IsEuronext,  "Xste");
            target = new Exchange(ExchangeMic.Xuni);
            Assert.IsFalse(target.IsEuronext,  "Xuni");
            target = new Exchange(ExchangeMic.Gxma);
            Assert.IsFalse(target.IsEuronext,  "Gxma");
            target = new Exchange(ExchangeMic.Bvca);
            Assert.IsFalse(target.IsEuronext,  "Bvca");
            target = new Exchange(ExchangeMic.Hstc);
            Assert.IsFalse(target.IsEuronext,  "Hstc");
            target = new Exchange(ExchangeMic.Xhnx);
            Assert.IsFalse(target.IsEuronext,  "Xhnx");
            target = new Exchange(ExchangeMic.Xstc);
            Assert.IsFalse(target.IsEuronext,  "Xstc");
            target = new Exchange(ExchangeMic.Xlus);
            Assert.IsFalse(target.IsEuronext,  "Xlus");
            target = new Exchange(ExchangeMic.Xzim);
            Assert.IsFalse(target.IsEuronext,  "Xzim");
            target = new Exchange(ExchangeMic.Xoff);
            Assert.IsFalse(target.IsEuronext,  "Xoff");
            target = new Exchange(ExchangeMic.Xxxx);
            Assert.IsFalse(target.IsEuronext,  "Xxxx");
        }
        #endregion

        #region EuronextMepTest
        /// <summary>
        /// A test for EuronextMep.
        /// </summary>
        [TestMethod]
        public void EuronextMepTest()
        {
            const string ams = "AMS";
            const string bru = "BRU";
            const string par = "PAR";
            const string lis = "LIS";
            const string oth = "OTHER";

            var target = new Exchange(ExchangeMic.Xbru);
            Assert.AreEqual(bru, target.EuronextMep, "Xbru");
            target = new Exchange(ExchangeMic.Alxb);
            Assert.AreEqual(bru, target.EuronextMep, "Alxb");
            target = new Exchange(ExchangeMic.Enxb);
            Assert.AreEqual(bru, target.EuronextMep, "Enxb");
            target = new Exchange(ExchangeMic.Mlxb);
            Assert.AreEqual(bru, target.EuronextMep, "Mlxb");
            target = new Exchange(ExchangeMic.Tnlb);
            Assert.AreEqual(bru, target.EuronextMep, "Tnlb");
            target = new Exchange(ExchangeMic.Vpxb);
            Assert.AreEqual(bru, target.EuronextMep, "Vpxb");
            target = new Exchange(ExchangeMic.Xbrd);
            Assert.AreEqual(bru, target.EuronextMep, "Xbrd");
            target = new Exchange(ExchangeMic.Xpar);
            Assert.AreEqual(par, target.EuronextMep, "Xpar");
            target = new Exchange(ExchangeMic.Alxp);
            Assert.AreEqual(par, target.EuronextMep, "Alxp");
            target = new Exchange(ExchangeMic.Xmat);
            Assert.AreEqual(par, target.EuronextMep, "Xmat");
            target = new Exchange(ExchangeMic.Xmli);
            Assert.AreEqual(par, target.EuronextMep, "Xmli");
            target = new Exchange(ExchangeMic.Xmon);
            Assert.AreEqual(par, target.EuronextMep, "Xmon");
            target = new Exchange(ExchangeMic.Xlis);
            Assert.AreEqual(lis, target.EuronextMep, "Xlis");
            target = new Exchange(ExchangeMic.Alxl);
            Assert.AreEqual(lis, target.EuronextMep, "Alxl");
            target = new Exchange(ExchangeMic.Enxl);
            Assert.AreEqual(lis, target.EuronextMep, "Enxl");
            target = new Exchange(ExchangeMic.Mfox);
            Assert.AreEqual(lis, target.EuronextMep, "Mfox");
            target = new Exchange(ExchangeMic.Wqxl);
            Assert.AreEqual(lis, target.EuronextMep, "Wqxl");
            target = new Exchange(ExchangeMic.Xams);
            Assert.AreEqual(ams, target.EuronextMep, "Xams");
            target = new Exchange(ExchangeMic.Alxa);
            Assert.AreEqual(ams, target.EuronextMep, "Alxa");
            target = new Exchange(ExchangeMic.Tnla);
            Assert.AreEqual(ams, target.EuronextMep, "Tnla");
            target = new Exchange(ExchangeMic.Xeuc);
            Assert.AreEqual(ams, target.EuronextMep, "Xeuc");
            target = new Exchange(ExchangeMic.Xeue);
            Assert.AreEqual(ams, target.EuronextMep, "Xeue");
            target = new Exchange(ExchangeMic.Xeui);
            Assert.AreEqual(ams, target.EuronextMep, "Xeui");
            target = new Exchange(ExchangeMic.Xldn);
            Assert.AreEqual(oth, target.EuronextMep, "Xldn");
            target = new Exchange(ExchangeMic.Xtir);
            Assert.AreEqual(oth, target.EuronextMep, "Xtir");
            target = new Exchange(ExchangeMic.Xalg);
            Assert.AreEqual(oth, target.EuronextMep, "Xalg");
            target = new Exchange(ExchangeMic.Bace);
            Assert.AreEqual(oth, target.EuronextMep, "Bace");
            target = new Exchange(ExchangeMic.Bcfs);
            Assert.AreEqual(oth, target.EuronextMep, "Bcfs");
            target = new Exchange(ExchangeMic.Xmvl);
            Assert.AreEqual(oth, target.EuronextMep, "Xmvl");
            target = new Exchange(ExchangeMic.Rofx);
            Assert.AreEqual(oth, target.EuronextMep, "Rofx");
            target = new Exchange(ExchangeMic.Xbcc);
            Assert.AreEqual(oth, target.EuronextMep, "Xbcc");
            target = new Exchange(ExchangeMic.Mvcx);
            Assert.AreEqual(oth, target.EuronextMep, "Mvcx");
            target = new Exchange(ExchangeMic.Xbcm);
            Assert.AreEqual(oth, target.EuronextMep, "Xbcm");
            target = new Exchange(ExchangeMic.Xbcx);
            Assert.AreEqual(oth, target.EuronextMep, "Xbcx");
            target = new Exchange(ExchangeMic.Xbue);
            Assert.AreEqual(oth, target.EuronextMep, "Xbue");
            target = new Exchange(ExchangeMic.Xmev);
            Assert.AreEqual(oth, target.EuronextMep, "Xmev");
            target = new Exchange(ExchangeMic.Xcnf);
            Assert.AreEqual(oth, target.EuronextMep, "Xcnf");
            target = new Exchange(ExchangeMic.Xmab);
            Assert.AreEqual(oth, target.EuronextMep, "Xmab");
            target = new Exchange(ExchangeMic.Xmtb);
            Assert.AreEqual(oth, target.EuronextMep, "Xmtb");
            target = new Exchange(ExchangeMic.Xros);
            Assert.AreEqual(oth, target.EuronextMep, "Xros");
            target = new Exchange(ExchangeMic.Xrox);
            Assert.AreEqual(oth, target.EuronextMep, "Xrox");
            target = new Exchange(ExchangeMic.Xtuc);
            Assert.AreEqual(oth, target.EuronextMep, "Xtuc");
            target = new Exchange(ExchangeMic.Xarm);
            Assert.AreEqual(oth, target.EuronextMep, "Xarm");
            target = new Exchange(ExchangeMic.Apxl);
            Assert.AreEqual(oth, target.EuronextMep, "Apxl");
            target = new Exchange(ExchangeMic.Awbx);
            Assert.AreEqual(oth, target.EuronextMep, "Awbx");
            target = new Exchange(ExchangeMic.Awex);
            Assert.AreEqual(oth, target.EuronextMep, "Awex");
            target = new Exchange(ExchangeMic.Blev);
            Assert.AreEqual(oth, target.EuronextMep, "Blev");
            target = new Exchange(ExchangeMic.Cgma);
            Assert.AreEqual(oth, target.EuronextMep, "Cgma");
            target = new Exchange(ExchangeMic.Chia);
            Assert.AreEqual(oth, target.EuronextMep, "Chia");
            target = new Exchange(ExchangeMic.Cxac);
            Assert.AreEqual(oth, target.EuronextMep, "Cxac");
            target = new Exchange(ExchangeMic.Cxaf);
            Assert.AreEqual(oth, target.EuronextMep, "Cxaf");
            target = new Exchange(ExchangeMic.Cxam);
            Assert.AreEqual(oth, target.EuronextMep, "Cxam");
            target = new Exchange(ExchangeMic.Cxan);
            Assert.AreEqual(oth, target.EuronextMep, "Cxan");
            target = new Exchange(ExchangeMic.Cxap);
            Assert.AreEqual(oth, target.EuronextMep, "Cxap");
            target = new Exchange(ExchangeMic.Cxav);
            Assert.AreEqual(oth, target.EuronextMep, "Cxav");
            target = new Exchange(ExchangeMic.Cxaw);
            Assert.AreEqual(oth, target.EuronextMep, "Cxaw");
            target = new Exchange(ExchangeMic.Clau);
            Assert.AreEqual(oth, target.EuronextMep, "Clau");
            target = new Exchange(ExchangeMic.Csau);
            Assert.AreEqual(oth, target.EuronextMep, "Csau");
            target = new Exchange(ExchangeMic.Cfau);
            Assert.AreEqual(oth, target.EuronextMep, "Cfau");
            target = new Exchange(ExchangeMic.Maqx);
            Assert.AreEqual(oth, target.EuronextMep, "Maqx");
            target = new Exchange(ExchangeMic.Msal);
            Assert.AreEqual(oth, target.EuronextMep, "Msal");
            target = new Exchange(ExchangeMic.Nsxb);
            Assert.AreEqual(oth, target.EuronextMep, "Nsxb");
            target = new Exchange(ExchangeMic.Siga);
            Assert.AreEqual(oth, target.EuronextMep, "Siga");
            target = new Exchange(ExchangeMic.Simv);
            Assert.AreEqual(oth, target.EuronextMep, "Simv");
            target = new Exchange(ExchangeMic.Xasx);
            Assert.AreEqual(oth, target.EuronextMep, "Xasx");
            target = new Exchange(ExchangeMic.Asxb);
            Assert.AreEqual(oth, target.EuronextMep, "Asxb");
            target = new Exchange(ExchangeMic.Asxc);
            Assert.AreEqual(oth, target.EuronextMep, "Asxc");
            target = new Exchange(ExchangeMic.Asxp);
            Assert.AreEqual(oth, target.EuronextMep, "Asxp");
            target = new Exchange(ExchangeMic.Asxt);
            Assert.AreEqual(oth, target.EuronextMep, "Asxt");
            target = new Exchange(ExchangeMic.Asxv);
            Assert.AreEqual(oth, target.EuronextMep, "Asxv");
            target = new Exchange(ExchangeMic.Xsfe);
            Assert.AreEqual(oth, target.EuronextMep, "Xsfe");
            target = new Exchange(ExchangeMic.Xfex);
            Assert.AreEqual(oth, target.EuronextMep, "Xfex");
            target = new Exchange(ExchangeMic.Xnec);
            Assert.AreEqual(oth, target.EuronextMep, "Xnec");
            target = new Exchange(ExchangeMic.Xyie);
            Assert.AreEqual(oth, target.EuronextMep, "Xyie");
            target = new Exchange(ExchangeMic.Exaa);
            Assert.AreEqual(oth, target.EuronextMep, "Exaa");
            target = new Exchange(ExchangeMic.Xwbo);
            Assert.AreEqual(oth, target.EuronextMep, "Xwbo");
            target = new Exchange(ExchangeMic.Wbah);
            Assert.AreEqual(oth, target.EuronextMep, "Wbah");
            target = new Exchange(ExchangeMic.Wbdm);
            Assert.AreEqual(oth, target.EuronextMep, "Wbdm");
            target = new Exchange(ExchangeMic.Wbgf);
            Assert.AreEqual(oth, target.EuronextMep, "Wbgf");
            target = new Exchange(ExchangeMic.Xceg);
            Assert.AreEqual(oth, target.EuronextMep, "Xceg");
            target = new Exchange(ExchangeMic.Xvie);
            Assert.AreEqual(oth, target.EuronextMep, "Xvie");
            target = new Exchange(ExchangeMic.Bsex);
            Assert.AreEqual(oth, target.EuronextMep, "Bsex");
            target = new Exchange(ExchangeMic.Xibe);
            Assert.AreEqual(oth, target.EuronextMep, "Xibe");
            target = new Exchange(ExchangeMic.Xbaa);
            Assert.AreEqual(oth, target.EuronextMep, "Xbaa");
            target = new Exchange(ExchangeMic.Bfex);
            Assert.AreEqual(oth, target.EuronextMep, "Bfex");
            target = new Exchange(ExchangeMic.Xbah);
            Assert.AreEqual(oth, target.EuronextMep, "Xbah");
            target = new Exchange(ExchangeMic.Xchg);
            Assert.AreEqual(oth, target.EuronextMep, "Xchg");
            target = new Exchange(ExchangeMic.Xdha);
            Assert.AreEqual(oth, target.EuronextMep, "Xdha");
            target = new Exchange(ExchangeMic.Xbab);
            Assert.AreEqual(oth, target.EuronextMep, "Xbab");
            target = new Exchange(ExchangeMic.Bajm);
            Assert.AreEqual(oth, target.EuronextMep, "Bajm");
            target = new Exchange(ExchangeMic.Bcse);
            Assert.AreEqual(oth, target.EuronextMep, "Bcse");
            target = new Exchange(ExchangeMic.Blpx);
            Assert.AreEqual(oth, target.EuronextMep, "Blpx");
            target = new Exchange(ExchangeMic.Bmts);
            Assert.AreEqual(oth, target.EuronextMep, "Bmts");
            target = new Exchange(ExchangeMic.Mtsd);
            Assert.AreEqual(oth, target.EuronextMep, "Mtsd");
            target = new Exchange(ExchangeMic.Mtsf);
            Assert.AreEqual(oth, target.EuronextMep, "Mtsf");
            target = new Exchange(ExchangeMic.Xbda);
            Assert.AreEqual(oth, target.EuronextMep, "Xbda");
            target = new Exchange(ExchangeMic.Xbol);
            Assert.AreEqual(oth, target.EuronextMep, "Xbol");
            target = new Exchange(ExchangeMic.Xblb);
            Assert.AreEqual(oth, target.EuronextMep, "Xblb");
            target = new Exchange(ExchangeMic.Blbf);
            Assert.AreEqual(oth, target.EuronextMep, "Blbf");
            target = new Exchange(ExchangeMic.Xsse);
            Assert.AreEqual(oth, target.EuronextMep, "Xsse");
            target = new Exchange(ExchangeMic.Xbot);
            Assert.AreEqual(oth, target.EuronextMep, "Xbot");
            target = new Exchange(ExchangeMic.Bote);
            Assert.AreEqual(oth, target.EuronextMep, "Bote");
            target = new Exchange(ExchangeMic.Botv);
            Assert.AreEqual(oth, target.EuronextMep, "Botv");
            target = new Exchange(ExchangeMic.Bcmm);
            Assert.AreEqual(oth, target.EuronextMep, "Bcmm");
            target = new Exchange(ExchangeMic.Bovm);
            Assert.AreEqual(oth, target.EuronextMep, "Bovm");
            target = new Exchange(ExchangeMic.Brix);
            Assert.AreEqual(oth, target.EuronextMep, "Brix");
            target = new Exchange(ExchangeMic.Bvmf);
            Assert.AreEqual(oth, target.EuronextMep, "Bvmf");
            target = new Exchange(ExchangeMic.Ceti);
            Assert.AreEqual(oth, target.EuronextMep, "Ceti");
            target = new Exchange(ExchangeMic.Selc);
            Assert.AreEqual(oth, target.EuronextMep, "Selc");
            target = new Exchange(ExchangeMic.Ibex);
            Assert.AreEqual(oth, target.EuronextMep, "Ibex");
            target = new Exchange(ExchangeMic.Xbul);
            Assert.AreEqual(oth, target.EuronextMep, "Xbul");
            target = new Exchange(ExchangeMic.Xcsx);
            Assert.AreEqual(oth, target.EuronextMep, "Xcsx");
            target = new Exchange(ExchangeMic.Xdsx);
            Assert.AreEqual(oth, target.EuronextMep, "Xdsx");
            target = new Exchange(ExchangeMic.Canx);
            Assert.AreEqual(oth, target.EuronextMep, "Canx");
            target = new Exchange(ExchangeMic.Chic);
            Assert.AreEqual(oth, target.EuronextMep, "Chic");
            target = new Exchange(ExchangeMic.Xcx2);
            Assert.AreEqual(oth, target.EuronextMep, "Xcx2");
            target = new Exchange(ExchangeMic.Cotc);
            Assert.AreEqual(oth, target.EuronextMep, "Cotc");
            target = new Exchange(ExchangeMic.Ifca);
            Assert.AreEqual(oth, target.EuronextMep, "Ifca");
            target = new Exchange(ExchangeMic.Ivzx);
            Assert.AreEqual(oth, target.EuronextMep, "Ivzx");
            target = new Exchange(ExchangeMic.Lica);
            Assert.AreEqual(oth, target.EuronextMep, "Lica");
            target = new Exchange(ExchangeMic.Matn);
            Assert.AreEqual(oth, target.EuronextMep, "Matn");
            target = new Exchange(ExchangeMic.Neoe);
            Assert.AreEqual(oth, target.EuronextMep, "Neoe");
            target = new Exchange(ExchangeMic.Ngxc);
            Assert.AreEqual(oth, target.EuronextMep, "Ngxc");
            target = new Exchange(ExchangeMic.Omga);
            Assert.AreEqual(oth, target.EuronextMep, "Omga");
            target = new Exchange(ExchangeMic.Lynx);
            Assert.AreEqual(oth, target.EuronextMep, "Lynx");
            target = new Exchange(ExchangeMic.Tmxs);
            Assert.AreEqual(oth, target.EuronextMep, "Tmxs");
            target = new Exchange(ExchangeMic.Xats);
            Assert.AreEqual(oth, target.EuronextMep, "Xats");
            target = new Exchange(ExchangeMic.Xbbk);
            Assert.AreEqual(oth, target.EuronextMep, "Xbbk");
            target = new Exchange(ExchangeMic.Xcnq);
            Assert.AreEqual(oth, target.EuronextMep, "Xcnq");
            target = new Exchange(ExchangeMic.Pure);
            Assert.AreEqual(oth, target.EuronextMep, "Pure");
            target = new Exchange(ExchangeMic.Xicx);
            Assert.AreEqual(oth, target.EuronextMep, "Xicx");
            target = new Exchange(ExchangeMic.Xmoc);
            Assert.AreEqual(oth, target.EuronextMep, "Xmoc");
            target = new Exchange(ExchangeMic.Xmod);
            Assert.AreEqual(oth, target.EuronextMep, "Xmod");
            target = new Exchange(ExchangeMic.Xtse);
            Assert.AreEqual(oth, target.EuronextMep, "Xtse");
            target = new Exchange(ExchangeMic.Xtsx);
            Assert.AreEqual(oth, target.EuronextMep, "Xtsx");
            target = new Exchange(ExchangeMic.Xtnx);
            Assert.AreEqual(oth, target.EuronextMep, "Xtnx");
            target = new Exchange(ExchangeMic.Xbvc);
            Assert.AreEqual(oth, target.EuronextMep, "Xbvc");
            target = new Exchange(ExchangeMic.Xcay);
            Assert.AreEqual(oth, target.EuronextMep, "Xcay");
            target = new Exchange(ExchangeMic.Bova);
            Assert.AreEqual(oth, target.EuronextMep, "Bova");
            target = new Exchange(ExchangeMic.Xbcl);
            Assert.AreEqual(oth, target.EuronextMep, "Xbcl");
            target = new Exchange(ExchangeMic.Xsgo);
            Assert.AreEqual(oth, target.EuronextMep, "Xsgo");
            target = new Exchange(ExchangeMic.Ccfx);
            Assert.AreEqual(oth, target.EuronextMep, "Ccfx");
            target = new Exchange(ExchangeMic.Cssx);
            Assert.AreEqual(oth, target.EuronextMep, "Cssx");
            target = new Exchange(ExchangeMic.Sgex);
            Assert.AreEqual(oth, target.EuronextMep, "Sgex");
            target = new Exchange(ExchangeMic.Xcfe);
            Assert.AreEqual(oth, target.EuronextMep, "Xcfe");
            target = new Exchange(ExchangeMic.Xdce);
            Assert.AreEqual(oth, target.EuronextMep, "Xdce");
            target = new Exchange(ExchangeMic.Xsge);
            Assert.AreEqual(oth, target.EuronextMep, "Xsge");
            target = new Exchange(ExchangeMic.Xine);
            Assert.AreEqual(oth, target.EuronextMep, "Xine");
            target = new Exchange(ExchangeMic.Xshe);
            Assert.AreEqual(oth, target.EuronextMep, "Xshe");
            target = new Exchange(ExchangeMic.Xsec);
            Assert.AreEqual(oth, target.EuronextMep, "Xsec");
            target = new Exchange(ExchangeMic.Xshg);
            Assert.AreEqual(oth, target.EuronextMep, "Xshg");
            target = new Exchange(ExchangeMic.Xssc);
            Assert.AreEqual(oth, target.EuronextMep, "Xssc");
            target = new Exchange(ExchangeMic.Xzce);
            Assert.AreEqual(oth, target.EuronextMep, "Xzce");
            target = new Exchange(ExchangeMic.Xbog);
            Assert.AreEqual(oth, target.EuronextMep, "Xbog");
            target = new Exchange(ExchangeMic.Xbnv);
            Assert.AreEqual(oth, target.EuronextMep, "Xbnv");
            target = new Exchange(ExchangeMic.Xcro);
            Assert.AreEqual(oth, target.EuronextMep, "Xcro");
            target = new Exchange(ExchangeMic.Xtrz);
            Assert.AreEqual(oth, target.EuronextMep, "Xtrz");
            target = new Exchange(ExchangeMic.Xzag);
            Assert.AreEqual(oth, target.EuronextMep, "Xzag");
            target = new Exchange(ExchangeMic.Xzam);
            Assert.AreEqual(oth, target.EuronextMep, "Xzam");
            target = new Exchange(ExchangeMic.Dcsx);
            Assert.AreEqual(oth, target.EuronextMep, "Dcsx");
            target = new Exchange(ExchangeMic.Xcys);
            Assert.AreEqual(oth, target.EuronextMep, "Xcys");
            target = new Exchange(ExchangeMic.Xcyo);
            Assert.AreEqual(oth, target.EuronextMep, "Xcyo");
            target = new Exchange(ExchangeMic.Xecm);
            Assert.AreEqual(oth, target.EuronextMep, "Xecm");
            target = new Exchange(ExchangeMic.Xpra);
            Assert.AreEqual(oth, target.EuronextMep, "Xpra");
            target = new Exchange(ExchangeMic.Xprm);
            Assert.AreEqual(oth, target.EuronextMep, "Xprm");
            target = new Exchange(ExchangeMic.Xpxe);
            Assert.AreEqual(oth, target.EuronextMep, "Xpxe");
            target = new Exchange(ExchangeMic.Xrmz);
            Assert.AreEqual(oth, target.EuronextMep, "Xrmz");
            target = new Exchange(ExchangeMic.Xrmo);
            Assert.AreEqual(oth, target.EuronextMep, "Xrmo");
            target = new Exchange(ExchangeMic.Dktc);
            Assert.AreEqual(oth, target.EuronextMep, "Dktc");
            target = new Exchange(ExchangeMic.Gxgr);
            Assert.AreEqual(oth, target.EuronextMep, "Gxgr");
            target = new Exchange(ExchangeMic.Gxgf);
            Assert.AreEqual(oth, target.EuronextMep, "Gxgf");
            target = new Exchange(ExchangeMic.Gxgm);
            Assert.AreEqual(oth, target.EuronextMep, "Gxgm");
            target = new Exchange(ExchangeMic.Npga);
            Assert.AreEqual(oth, target.EuronextMep, "Npga");
            target = new Exchange(ExchangeMic.Xcse);
            Assert.AreEqual(oth, target.EuronextMep, "Xcse");
            target = new Exchange(ExchangeMic.Dcse);
            Assert.AreEqual(oth, target.EuronextMep, "Dcse");
            target = new Exchange(ExchangeMic.Dndk);
            Assert.AreEqual(oth, target.EuronextMep, "Dndk");
            target = new Exchange(ExchangeMic.Fndk);
            Assert.AreEqual(oth, target.EuronextMep, "Fndk");
            target = new Exchange(ExchangeMic.Xbvr);
            Assert.AreEqual(oth, target.EuronextMep, "Xbvr");
            target = new Exchange(ExchangeMic.Xgua);
            Assert.AreEqual(oth, target.EuronextMep, "Xgua");
            target = new Exchange(ExchangeMic.Xqui);
            Assert.AreEqual(oth, target.EuronextMep, "Xqui");
            target = new Exchange(ExchangeMic.Nilx);
            Assert.AreEqual(oth, target.EuronextMep, "Nilx");
            target = new Exchange(ExchangeMic.Xcai);
            Assert.AreEqual(oth, target.EuronextMep, "Xcai");
            target = new Exchange(ExchangeMic.Xsva);
            Assert.AreEqual(oth, target.EuronextMep, "Xsva");
            target = new Exchange(ExchangeMic.Xtal);
            Assert.AreEqual(oth, target.EuronextMep, "Xtal");
            target = new Exchange(ExchangeMic.Fnee);
            Assert.AreEqual(oth, target.EuronextMep, "Fnee");
            target = new Exchange(ExchangeMic.Vmfx);
            Assert.AreEqual(oth, target.EuronextMep, "Vmfx");
            target = new Exchange(ExchangeMic.Xsps);
            Assert.AreEqual(oth, target.EuronextMep, "Xsps");
            target = new Exchange(ExchangeMic.Fgex);
            Assert.AreEqual(oth, target.EuronextMep, "Fgex");
            target = new Exchange(ExchangeMic.Xhel);
            Assert.AreEqual(oth, target.EuronextMep, "Xhel");
            target = new Exchange(ExchangeMic.Dhel);
            Assert.AreEqual(oth, target.EuronextMep, "Dhel");
            target = new Exchange(ExchangeMic.Dnfi);
            Assert.AreEqual(oth, target.EuronextMep, "Dnfi");
            target = new Exchange(ExchangeMic.Fnfi);
            Assert.AreEqual(oth, target.EuronextMep, "Fnfi");
            target = new Exchange(ExchangeMic.Coal);
            Assert.AreEqual(oth, target.EuronextMep, "Coal");
            target = new Exchange(ExchangeMic.Epex);
            Assert.AreEqual(oth, target.EuronextMep, "Epex");
            target = new Exchange(ExchangeMic.Fmts);
            Assert.AreEqual(oth, target.EuronextMep, "Fmts");
            target = new Exchange(ExchangeMic.Gmtf);
            Assert.AreEqual(oth, target.EuronextMep, "Gmtf");
            target = new Exchange(ExchangeMic.Lchc);
            Assert.AreEqual(oth, target.EuronextMep, "Lchc");
            target = new Exchange(ExchangeMic.Xafr);
            Assert.AreEqual(oth, target.EuronextMep, "Xafr");
            target = new Exchange(ExchangeMic.Xbln);
            Assert.AreEqual(oth, target.EuronextMep, "Xbln");
            target = new Exchange(ExchangeMic.Mtch);
            Assert.AreEqual(oth, target.EuronextMep, "Mtch");
            target = new Exchange(ExchangeMic.Xpow);
            Assert.AreEqual(oth, target.EuronextMep, "Xpow");
            target = new Exchange(ExchangeMic.Xpsf);
            Assert.AreEqual(oth, target.EuronextMep, "Xpsf");
            target = new Exchange(ExchangeMic.Xgse);
            Assert.AreEqual(oth, target.EuronextMep, "Xgse");
            target = new Exchange(ExchangeMic.X360T);
            Assert.AreEqual(oth, target.EuronextMep, "X360T");
            target = new Exchange(ExchangeMic.Cats);
            Assert.AreEqual(oth, target.EuronextMep, "Cats");
            target = new Exchange(ExchangeMic.Dbox);
            Assert.AreEqual(oth, target.EuronextMep, "Dbox");
            target = new Exchange(ExchangeMic.Auto);
            Assert.AreEqual(oth, target.EuronextMep, "Auto");
            target = new Exchange(ExchangeMic.Tgat);
            Assert.AreEqual(oth, target.EuronextMep, "Tgat");
            target = new Exchange(ExchangeMic.Xgat);
            Assert.AreEqual(oth, target.EuronextMep, "Xgat");
            target = new Exchange(ExchangeMic.Xgrm);
            Assert.AreEqual(oth, target.EuronextMep, "Xgrm");
            target = new Exchange(ExchangeMic.Xber);
            Assert.AreEqual(oth, target.EuronextMep, "Xber");
            target = new Exchange(ExchangeMic.Bera);
            Assert.AreEqual(oth, target.EuronextMep, "Bera");
            target = new Exchange(ExchangeMic.Berb);
            Assert.AreEqual(oth, target.EuronextMep, "Berb");
            target = new Exchange(ExchangeMic.Berc);
            Assert.AreEqual(oth, target.EuronextMep, "Berc");
            target = new Exchange(ExchangeMic.Eqta);
            Assert.AreEqual(oth, target.EuronextMep, "Eqta");
            target = new Exchange(ExchangeMic.Eqtb);
            Assert.AreEqual(oth, target.EuronextMep, "Eqtb");
            target = new Exchange(ExchangeMic.Eqtc);
            Assert.AreEqual(oth, target.EuronextMep, "Eqtc");
            target = new Exchange(ExchangeMic.Eqtd);
            Assert.AreEqual(oth, target.EuronextMep, "Eqtd");
            target = new Exchange(ExchangeMic.Xeqt);
            Assert.AreEqual(oth, target.EuronextMep, "Xeqt");
            target = new Exchange(ExchangeMic.Zobx);
            Assert.AreEqual(oth, target.EuronextMep, "Zobx");
            target = new Exchange(ExchangeMic.Xdus);
            Assert.AreEqual(oth, target.EuronextMep, "Xdus");
            target = new Exchange(ExchangeMic.Dusa);
            Assert.AreEqual(oth, target.EuronextMep, "Dusa");
            target = new Exchange(ExchangeMic.Dusb);
            Assert.AreEqual(oth, target.EuronextMep, "Dusb");
            target = new Exchange(ExchangeMic.Dusc);
            Assert.AreEqual(oth, target.EuronextMep, "Dusc");
            target = new Exchange(ExchangeMic.Dusd);
            Assert.AreEqual(oth, target.EuronextMep, "Dusd");
            target = new Exchange(ExchangeMic.Xqtx);
            Assert.AreEqual(oth, target.EuronextMep, "Xqtx");
            target = new Exchange(ExchangeMic.Xecb);
            Assert.AreEqual(oth, target.EuronextMep, "Xecb");
            target = new Exchange(ExchangeMic.Xecc);
            Assert.AreEqual(oth, target.EuronextMep, "Xecc");
            target = new Exchange(ExchangeMic.Xeee);
            Assert.AreEqual(oth, target.EuronextMep, "Xeee");
            target = new Exchange(ExchangeMic.Xeeo);
            Assert.AreEqual(oth, target.EuronextMep, "Xeeo");
            target = new Exchange(ExchangeMic.Xeer);
            Assert.AreEqual(oth, target.EuronextMep, "Xeer");
            target = new Exchange(ExchangeMic.Xeum);
            Assert.AreEqual(oth, target.EuronextMep, "Xeum");
            target = new Exchange(ExchangeMic.Xeur);
            Assert.AreEqual(oth, target.EuronextMep, "Xeur");
            target = new Exchange(ExchangeMic.Ecag);
            Assert.AreEqual(oth, target.EuronextMep, "Ecag");
            target = new Exchange(ExchangeMic.Xere);
            Assert.AreEqual(oth, target.EuronextMep, "Xere");
            target = new Exchange(ExchangeMic.Xert);
            Assert.AreEqual(oth, target.EuronextMep, "Xert");
            target = new Exchange(ExchangeMic.Xeub);
            Assert.AreEqual(oth, target.EuronextMep, "Xeub");
            target = new Exchange(ExchangeMic.Xeup);
            Assert.AreEqual(oth, target.EuronextMep, "Xeup");
            target = new Exchange(ExchangeMic.Xfra);
            Assert.AreEqual(oth, target.EuronextMep, "Xfra");
            target = new Exchange(ExchangeMic.Fraa);
            Assert.AreEqual(oth, target.EuronextMep, "Fraa");
            target = new Exchange(ExchangeMic.Frab);
            Assert.AreEqual(oth, target.EuronextMep, "Frab");
            target = new Exchange(ExchangeMic.Frad);
            Assert.AreEqual(oth, target.EuronextMep, "Frad");
            target = new Exchange(ExchangeMic.Xdbc);
            Assert.AreEqual(oth, target.EuronextMep, "Xdbc");
            target = new Exchange(ExchangeMic.Xdbv);
            Assert.AreEqual(oth, target.EuronextMep, "Xdbv");
            target = new Exchange(ExchangeMic.Xdbx);
            Assert.AreEqual(oth, target.EuronextMep, "Xdbx");
            target = new Exchange(ExchangeMic.Xeta);
            Assert.AreEqual(oth, target.EuronextMep, "Xeta");
            target = new Exchange(ExchangeMic.Xetb);
            Assert.AreEqual(oth, target.EuronextMep, "Xetb");
            target = new Exchange(ExchangeMic.Xetr);
            Assert.AreEqual(oth, target.EuronextMep, "Xetr");
            target = new Exchange(ExchangeMic.Xnew);
            Assert.AreEqual(oth, target.EuronextMep, "Xnew");
            target = new Exchange(ExchangeMic.Xham);
            Assert.AreEqual(oth, target.EuronextMep, "Xham");
            target = new Exchange(ExchangeMic.Hama);
            Assert.AreEqual(oth, target.EuronextMep, "Hama");
            target = new Exchange(ExchangeMic.Hamb);
            Assert.AreEqual(oth, target.EuronextMep, "Hamb");
            target = new Exchange(ExchangeMic.Xhan);
            Assert.AreEqual(oth, target.EuronextMep, "Xhan");
            target = new Exchange(ExchangeMic.Hana);
            Assert.AreEqual(oth, target.EuronextMep, "Hana");
            target = new Exchange(ExchangeMic.Hanb);
            Assert.AreEqual(oth, target.EuronextMep, "Hanb");
            target = new Exchange(ExchangeMic.Xinv);
            Assert.AreEqual(oth, target.EuronextMep, "Xinv");
            target = new Exchange(ExchangeMic.Xmun);
            Assert.AreEqual(oth, target.EuronextMep, "Xmun");
            target = new Exchange(ExchangeMic.Muna);
            Assert.AreEqual(oth, target.EuronextMep, "Muna");
            target = new Exchange(ExchangeMic.Munb);
            Assert.AreEqual(oth, target.EuronextMep, "Munb");
            target = new Exchange(ExchangeMic.Munc);
            Assert.AreEqual(oth, target.EuronextMep, "Munc");
            target = new Exchange(ExchangeMic.Mund);
            Assert.AreEqual(oth, target.EuronextMep, "Mund");
            target = new Exchange(ExchangeMic.Xsco);
            Assert.AreEqual(oth, target.EuronextMep, "Xsco");
            target = new Exchange(ExchangeMic.Xsc1);
            Assert.AreEqual(oth, target.EuronextMep, "Xsc1");
            target = new Exchange(ExchangeMic.Xsc2);
            Assert.AreEqual(oth, target.EuronextMep, "Xsc2");
            target = new Exchange(ExchangeMic.Xsc3);
            Assert.AreEqual(oth, target.EuronextMep, "Xsc3");
            target = new Exchange(ExchangeMic.Xstu);
            Assert.AreEqual(oth, target.EuronextMep, "Xstu");
            target = new Exchange(ExchangeMic.Euwx);
            Assert.AreEqual(oth, target.EuronextMep, "Euwx");
            target = new Exchange(ExchangeMic.Stua);
            Assert.AreEqual(oth, target.EuronextMep, "Stua");
            target = new Exchange(ExchangeMic.Stub);
            Assert.AreEqual(oth, target.EuronextMep, "Stub");
            target = new Exchange(ExchangeMic.Xxsc);
            Assert.AreEqual(oth, target.EuronextMep, "Xxsc");
            target = new Exchange(ExchangeMic.Xgha);
            Assert.AreEqual(oth, target.EuronextMep, "Xgha");
            target = new Exchange(ExchangeMic.Gsxl);
            Assert.AreEqual(oth, target.EuronextMep, "Gsxl");
            target = new Exchange(ExchangeMic.Asex);
            Assert.AreEqual(oth, target.EuronextMep, "Asex");
            target = new Exchange(ExchangeMic.Enax);
            Assert.AreEqual(oth, target.EuronextMep, "Enax");
            target = new Exchange(ExchangeMic.Euax);
            Assert.AreEqual(oth, target.EuronextMep, "Euax");
            target = new Exchange(ExchangeMic.Hotc);
            Assert.AreEqual(oth, target.EuronextMep, "Hotc");
            target = new Exchange(ExchangeMic.Xade);
            Assert.AreEqual(oth, target.EuronextMep, "Xade");
            target = new Exchange(ExchangeMic.Xath);
            Assert.AreEqual(oth, target.EuronextMep, "Xath");
            target = new Exchange(ExchangeMic.Xipo);
            Assert.AreEqual(oth, target.EuronextMep, "Xipo");
            target = new Exchange(ExchangeMic.Hdat);
            Assert.AreEqual(oth, target.EuronextMep, "Hdat");
            target = new Exchange(ExchangeMic.Hemo);
            Assert.AreEqual(oth, target.EuronextMep, "Hemo");
            target = new Exchange(ExchangeMic.Xgtg);
            Assert.AreEqual(oth, target.EuronextMep, "Xgtg");
            target = new Exchange(ExchangeMic.Xcie);
            Assert.AreEqual(oth, target.EuronextMep, "Xcie");
            target = new Exchange(ExchangeMic.Gsci);
            Assert.AreEqual(oth, target.EuronextMep, "Gsci");
            target = new Exchange(ExchangeMic.Xbcv);
            Assert.AreEqual(oth, target.EuronextMep, "Xbcv");
            target = new Exchange(ExchangeMic.Cgmh);
            Assert.AreEqual(oth, target.EuronextMep, "Cgmh");
            target = new Exchange(ExchangeMic.Clhk);
            Assert.AreEqual(oth, target.EuronextMep, "Clhk");
            target = new Exchange(ExchangeMic.Cshk);
            Assert.AreEqual(oth, target.EuronextMep, "Cshk");
            target = new Exchange(ExchangeMic.Cfhk);
            Assert.AreEqual(oth, target.EuronextMep, "Cfhk");
            target = new Exchange(ExchangeMic.Dbhk);
            Assert.AreEqual(oth, target.EuronextMep, "Dbhk");
            target = new Exchange(ExchangeMic.Eotc);
            Assert.AreEqual(oth, target.EuronextMep, "Eotc");
            target = new Exchange(ExchangeMic.Hsxa);
            Assert.AreEqual(oth, target.EuronextMep, "Hsxa");
            target = new Exchange(ExchangeMic.Maqh);
            Assert.AreEqual(oth, target.EuronextMep, "Maqh");
            target = new Exchange(ExchangeMic.Sigh);
            Assert.AreEqual(oth, target.EuronextMep, "Sigh");
            target = new Exchange(ExchangeMic.Tocp);
            Assert.AreEqual(oth, target.EuronextMep, "Tocp");
            target = new Exchange(ExchangeMic.Ubsx);
            Assert.AreEqual(oth, target.EuronextMep, "Ubsx");
            target = new Exchange(ExchangeMic.Xcgs);
            Assert.AreEqual(oth, target.EuronextMep, "Xcgs");
            target = new Exchange(ExchangeMic.Xhkf);
            Assert.AreEqual(oth, target.EuronextMep, "Xhkf");
            target = new Exchange(ExchangeMic.Xhkg);
            Assert.AreEqual(oth, target.EuronextMep, "Xhkg");
            target = new Exchange(ExchangeMic.Shsc);
            Assert.AreEqual(oth, target.EuronextMep, "Shsc");
            target = new Exchange(ExchangeMic.Xgem);
            Assert.AreEqual(oth, target.EuronextMep, "Xgem");
            target = new Exchange(ExchangeMic.Xihk);
            Assert.AreEqual(oth, target.EuronextMep, "Xihk");
            target = new Exchange(ExchangeMic.Xpst);
            Assert.AreEqual(oth, target.EuronextMep, "Xpst");
            target = new Exchange(ExchangeMic.Beta);
            Assert.AreEqual(oth, target.EuronextMep, "Beta");
            target = new Exchange(ExchangeMic.Hupx);
            Assert.AreEqual(oth, target.EuronextMep, "Hupx");
            target = new Exchange(ExchangeMic.Kccp);
            Assert.AreEqual(oth, target.EuronextMep, "Kccp");
            target = new Exchange(ExchangeMic.Xbud);
            Assert.AreEqual(oth, target.EuronextMep, "Xbud");
            target = new Exchange(ExchangeMic.Xgas);
            Assert.AreEqual(oth, target.EuronextMep, "Xgas");
            target = new Exchange(ExchangeMic.Xice);
            Assert.AreEqual(oth, target.EuronextMep, "Xice");
            target = new Exchange(ExchangeMic.Dice);
            Assert.AreEqual(oth, target.EuronextMep, "Dice");
            target = new Exchange(ExchangeMic.Dnis);
            Assert.AreEqual(oth, target.EuronextMep, "Dnis");
            target = new Exchange(ExchangeMic.Fnis);
            Assert.AreEqual(oth, target.EuronextMep, "Fnis");
            target = new Exchange(ExchangeMic.Acex);
            Assert.AreEqual(oth, target.EuronextMep, "Acex");
            target = new Exchange(ExchangeMic.Cdsl);
            Assert.AreEqual(oth, target.EuronextMep, "Cdsl");
            target = new Exchange(ExchangeMic.Icxl);
            Assert.AreEqual(oth, target.EuronextMep, "Icxl");
            target = new Exchange(ExchangeMic.Isex);
            Assert.AreEqual(oth, target.EuronextMep, "Isex");
            target = new Exchange(ExchangeMic.Mcxx);
            Assert.AreEqual(oth, target.EuronextMep, "Mcxx");
            target = new Exchange(ExchangeMic.Nbot);
            Assert.AreEqual(oth, target.EuronextMep, "Nbot");
            target = new Exchange(ExchangeMic.Nmce);
            Assert.AreEqual(oth, target.EuronextMep, "Nmce");
            target = new Exchange(ExchangeMic.Otcx);
            Assert.AreEqual(oth, target.EuronextMep, "Otcx");
            target = new Exchange(ExchangeMic.Pxil);
            Assert.AreEqual(oth, target.EuronextMep, "Pxil");
            target = new Exchange(ExchangeMic.Xban);
            Assert.AreEqual(oth, target.EuronextMep, "Xban");
            target = new Exchange(ExchangeMic.Xbom);
            Assert.AreEqual(oth, target.EuronextMep, "Xbom");
            target = new Exchange(ExchangeMic.Bsme);
            Assert.AreEqual(oth, target.EuronextMep, "Bsme");
            target = new Exchange(ExchangeMic.Xcal);
            Assert.AreEqual(oth, target.EuronextMep, "Xcal");
            target = new Exchange(ExchangeMic.Xdes);
            Assert.AreEqual(oth, target.EuronextMep, "Xdes");
            target = new Exchange(ExchangeMic.Ximc);
            Assert.AreEqual(oth, target.EuronextMep, "Ximc");
            target = new Exchange(ExchangeMic.Xmds);
            Assert.AreEqual(oth, target.EuronextMep, "Xmds");
            target = new Exchange(ExchangeMic.Xncd);
            Assert.AreEqual(oth, target.EuronextMep, "Xncd");
            target = new Exchange(ExchangeMic.Xnse);
            Assert.AreEqual(oth, target.EuronextMep, "Xnse");
            target = new Exchange(ExchangeMic.Xuse);
            Assert.AreEqual(oth, target.EuronextMep, "Xuse");
            target = new Exchange(ExchangeMic.Icdx);
            Assert.AreEqual(oth, target.EuronextMep, "Icdx");
            target = new Exchange(ExchangeMic.Xbbj);
            Assert.AreEqual(oth, target.EuronextMep, "Xbbj");
            target = new Exchange(ExchangeMic.Xidx);
            Assert.AreEqual(oth, target.EuronextMep, "Xidx");
            target = new Exchange(ExchangeMic.Xjnb);
            Assert.AreEqual(oth, target.EuronextMep, "Xjnb");
            target = new Exchange(ExchangeMic.Imex);
            Assert.AreEqual(oth, target.EuronextMep, "Imex");
            target = new Exchange(ExchangeMic.Xteh);
            Assert.AreEqual(oth, target.EuronextMep, "Xteh");
            target = new Exchange(ExchangeMic.Xiqs);
            Assert.AreEqual(oth, target.EuronextMep, "Xiqs");
            target = new Exchange(ExchangeMic.Xpos);
            Assert.AreEqual(oth, target.EuronextMep, "Xpos");
            target = new Exchange(ExchangeMic.Xcde);
            Assert.AreEqual(oth, target.EuronextMep, "Xcde");
            target = new Exchange(ExchangeMic.Xdub);
            Assert.AreEqual(oth, target.EuronextMep, "Xdub");
            target = new Exchange(ExchangeMic.Xatl);
            Assert.AreEqual(oth, target.EuronextMep, "Xatl");
            target = new Exchange(ExchangeMic.Xesm);
            Assert.AreEqual(oth, target.EuronextMep, "Xesm");
            target = new Exchange(ExchangeMic.Xeye);
            Assert.AreEqual(oth, target.EuronextMep, "Xeye");
            target = new Exchange(ExchangeMic.Xmsm);
            Assert.AreEqual(oth, target.EuronextMep, "Xmsm");
            target = new Exchange(ExchangeMic.Xebi);
            Assert.AreEqual(oth, target.EuronextMep, "Xebi");
            target = new Exchange(ExchangeMic.Xtae);
            Assert.AreEqual(oth, target.EuronextMep, "Xtae");
            target = new Exchange(ExchangeMic.Cgit);
            Assert.AreEqual(oth, target.EuronextMep, "Cgit");
            target = new Exchange(ExchangeMic.Cgcm);
            Assert.AreEqual(oth, target.EuronextMep, "Cgcm");
            target = new Exchange(ExchangeMic.Cgdb);
            Assert.AreEqual(oth, target.EuronextMep, "Cgdb");
            target = new Exchange(ExchangeMic.Cgeb);
            Assert.AreEqual(oth, target.EuronextMep, "Cgeb");
            target = new Exchange(ExchangeMic.Cggd);
            Assert.AreEqual(oth, target.EuronextMep, "Cggd");
            target = new Exchange(ExchangeMic.Cgnd);
            Assert.AreEqual(oth, target.EuronextMep, "Cgnd");
            target = new Exchange(ExchangeMic.Cgqd);
            Assert.AreEqual(oth, target.EuronextMep, "Cgqd");
            target = new Exchange(ExchangeMic.Cgqt);
            Assert.AreEqual(oth, target.EuronextMep, "Cgqt");
            target = new Exchange(ExchangeMic.Cgtr);
            Assert.AreEqual(oth, target.EuronextMep, "Cgtr");
            target = new Exchange(ExchangeMic.Emid);
            Assert.AreEqual(oth, target.EuronextMep, "Emid");
            target = new Exchange(ExchangeMic.Emdr);
            Assert.AreEqual(oth, target.EuronextMep, "Emdr");
            target = new Exchange(ExchangeMic.Emir);
            Assert.AreEqual(oth, target.EuronextMep, "Emir");
            target = new Exchange(ExchangeMic.Etlx);
            Assert.AreEqual(oth, target.EuronextMep, "Etlx");
            target = new Exchange(ExchangeMic.Hmtf);
            Assert.AreEqual(oth, target.EuronextMep, "Hmtf");
            target = new Exchange(ExchangeMic.Hmod);
            Assert.AreEqual(oth, target.EuronextMep, "Hmod");
            target = new Exchange(ExchangeMic.Mtsc);
            Assert.AreEqual(oth, target.EuronextMep, "Mtsc");
            target = new Exchange(ExchangeMic.Bond);
            Assert.AreEqual(oth, target.EuronextMep, "Bond");
            target = new Exchange(ExchangeMic.Mtsm);
            Assert.AreEqual(oth, target.EuronextMep, "Mtsm");
            target = new Exchange(ExchangeMic.Ssob);
            Assert.AreEqual(oth, target.EuronextMep, "Ssob");
            target = new Exchange(ExchangeMic.Xgme);
            Assert.AreEqual(oth, target.EuronextMep, "Xgme");
            target = new Exchange(ExchangeMic.Xmil);
            Assert.AreEqual(oth, target.EuronextMep, "Xmil");
            target = new Exchange(ExchangeMic.Etfp);
            Assert.AreEqual(oth, target.EuronextMep, "Etfp");
            target = new Exchange(ExchangeMic.Mivx);
            Assert.AreEqual(oth, target.EuronextMep, "Mivx");
            target = new Exchange(ExchangeMic.Motx);
            Assert.AreEqual(oth, target.EuronextMep, "Motx");
            target = new Exchange(ExchangeMic.Mtaa);
            Assert.AreEqual(oth, target.EuronextMep, "Mtaa");
            target = new Exchange(ExchangeMic.Mtah);
            Assert.AreEqual(oth, target.EuronextMep, "Mtah");
            target = new Exchange(ExchangeMic.Sedx);
            Assert.AreEqual(oth, target.EuronextMep, "Sedx");
            target = new Exchange(ExchangeMic.Xaim);
            Assert.AreEqual(oth, target.EuronextMep, "Xaim");
            target = new Exchange(ExchangeMic.Xdmi);
            Assert.AreEqual(oth, target.EuronextMep, "Xdmi");
            target = new Exchange(ExchangeMic.Xmot);
            Assert.AreEqual(oth, target.EuronextMep, "Xmot");
            target = new Exchange(ExchangeMic.Xbrv);
            Assert.AreEqual(oth, target.EuronextMep, "Xbrv");
            target = new Exchange(ExchangeMic.Xjam);
            Assert.AreEqual(oth, target.EuronextMep, "Xjam");
            target = new Exchange(ExchangeMic.Betp);
            Assert.AreEqual(oth, target.EuronextMep, "Betp");
            target = new Exchange(ExchangeMic.Chij);
            Assert.AreEqual(oth, target.EuronextMep, "Chij");
            target = new Exchange(ExchangeMic.Chis);
            Assert.AreEqual(oth, target.EuronextMep, "Chis");
            target = new Exchange(ExchangeMic.Chiv);
            Assert.AreEqual(oth, target.EuronextMep, "Chiv");
            target = new Exchange(ExchangeMic.Citx);
            Assert.AreEqual(oth, target.EuronextMep, "Citx");
            target = new Exchange(ExchangeMic.Citd);
            Assert.AreEqual(oth, target.EuronextMep, "Citd");
            target = new Exchange(ExchangeMic.Cljp);
            Assert.AreEqual(oth, target.EuronextMep, "Cljp");
            target = new Exchange(ExchangeMic.Cmet);
            Assert.AreEqual(oth, target.EuronextMep, "Cmet");
            target = new Exchange(ExchangeMic.Csjp);
            Assert.AreEqual(oth, target.EuronextMep, "Csjp");
            target = new Exchange(ExchangeMic.Cfjp);
            Assert.AreEqual(oth, target.EuronextMep, "Cfjp");
            target = new Exchange(ExchangeMic.Drct);
            Assert.AreEqual(oth, target.EuronextMep, "Drct");
            target = new Exchange(ExchangeMic.Lxjp);
            Assert.AreEqual(oth, target.EuronextMep, "Lxjp");
            target = new Exchange(ExchangeMic.Maqj);
            Assert.AreEqual(oth, target.EuronextMep, "Maqj");
            target = new Exchange(ExchangeMic.Mizx);
            Assert.AreEqual(oth, target.EuronextMep, "Mizx");
            target = new Exchange(ExchangeMic.Msms);
            Assert.AreEqual(oth, target.EuronextMep, "Msms");
            target = new Exchange(ExchangeMic.Nmrj);
            Assert.AreEqual(oth, target.EuronextMep, "Nmrj");
            target = new Exchange(ExchangeMic.Nxjp);
            Assert.AreEqual(oth, target.EuronextMep, "Nxjp");
            target = new Exchange(ExchangeMic.Nxse);
            Assert.AreEqual(oth, target.EuronextMep, "Nxse");
            target = new Exchange(ExchangeMic.Nxvw);
            Assert.AreEqual(oth, target.EuronextMep, "Nxvw");
            target = new Exchange(ExchangeMic.Sbij);
            Assert.AreEqual(oth, target.EuronextMep, "Sbij");
            target = new Exchange(ExchangeMic.Sbiu);
            Assert.AreEqual(oth, target.EuronextMep, "Sbiu");
            target = new Exchange(ExchangeMic.Sbiv);
            Assert.AreEqual(oth, target.EuronextMep, "Sbiv");
            target = new Exchange(ExchangeMic.Xsbi);
            Assert.AreEqual(oth, target.EuronextMep, "Xsbi");
            target = new Exchange(ExchangeMic.Sigj);
            Assert.AreEqual(oth, target.EuronextMep, "Sigj");
            target = new Exchange(ExchangeMic.Xfka);
            Assert.AreEqual(oth, target.EuronextMep, "Xfka");
            target = new Exchange(ExchangeMic.Xijp);
            Assert.AreEqual(oth, target.EuronextMep, "Xijp");
            target = new Exchange(ExchangeMic.Jasr);
            Assert.AreEqual(oth, target.EuronextMep, "Jasr");
            target = new Exchange(ExchangeMic.Xjpx);
            Assert.AreEqual(oth, target.EuronextMep, "Xjpx");
            target = new Exchange(ExchangeMic.Xjas);
            Assert.AreEqual(oth, target.EuronextMep, "Xjas");
            target = new Exchange(ExchangeMic.Xose);
            Assert.AreEqual(oth, target.EuronextMep, "Xose");
            target = new Exchange(ExchangeMic.Xosj);
            Assert.AreEqual(oth, target.EuronextMep, "Xosj");
            target = new Exchange(ExchangeMic.Xtam);
            Assert.AreEqual(oth, target.EuronextMep, "Xtam");
            target = new Exchange(ExchangeMic.Xtk1);
            Assert.AreEqual(oth, target.EuronextMep, "Xtk1");
            target = new Exchange(ExchangeMic.Xtk2);
            Assert.AreEqual(oth, target.EuronextMep, "Xtk2");
            target = new Exchange(ExchangeMic.Xtk3);
            Assert.AreEqual(oth, target.EuronextMep, "Xtk3");
            target = new Exchange(ExchangeMic.Xtks);
            Assert.AreEqual(oth, target.EuronextMep, "Xtks");
            target = new Exchange(ExchangeMic.Xkac);
            Assert.AreEqual(oth, target.EuronextMep, "Xkac");
            target = new Exchange(ExchangeMic.Xngo);
            Assert.AreEqual(oth, target.EuronextMep, "Xngo");
            target = new Exchange(ExchangeMic.Xnks);
            Assert.AreEqual(oth, target.EuronextMep, "Xnks");
            target = new Exchange(ExchangeMic.Xsap);
            Assert.AreEqual(oth, target.EuronextMep, "Xsap");
            target = new Exchange(ExchangeMic.Xtff);
            Assert.AreEqual(oth, target.EuronextMep, "Xtff");
            target = new Exchange(ExchangeMic.Xtkt);
            Assert.AreEqual(oth, target.EuronextMep, "Xtkt");
            target = new Exchange(ExchangeMic.Xamm);
            Assert.AreEqual(oth, target.EuronextMep, "Xamm");
            target = new Exchange(ExchangeMic.Etsc);
            Assert.AreEqual(oth, target.EuronextMep, "Etsc");
            target = new Exchange(ExchangeMic.Xkaz);
            Assert.AreEqual(oth, target.EuronextMep, "Xkaz");
            target = new Exchange(ExchangeMic.Xnai);
            Assert.AreEqual(oth, target.EuronextMep, "Xnai");
            target = new Exchange(ExchangeMic.Xkfb);
            Assert.AreEqual(oth, target.EuronextMep, "Xkfb");
            target = new Exchange(ExchangeMic.Xkrx);
            Assert.AreEqual(oth, target.EuronextMep, "Xkrx");
            target = new Exchange(ExchangeMic.Xkcm);
            Assert.AreEqual(oth, target.EuronextMep, "Xkcm");
            target = new Exchange(ExchangeMic.Xkem);
            Assert.AreEqual(oth, target.EuronextMep, "Xkem");
            target = new Exchange(ExchangeMic.Xkfe);
            Assert.AreEqual(oth, target.EuronextMep, "Xkfe");
            target = new Exchange(ExchangeMic.Xkon);
            Assert.AreEqual(oth, target.EuronextMep, "Xkon");
            target = new Exchange(ExchangeMic.Xkos);
            Assert.AreEqual(oth, target.EuronextMep, "Xkos");
            target = new Exchange(ExchangeMic.Xkuw);
            Assert.AreEqual(oth, target.EuronextMep, "Xkuw");
            target = new Exchange(ExchangeMic.Xkse);
            Assert.AreEqual(oth, target.EuronextMep, "Xkse");
            target = new Exchange(ExchangeMic.Xlao);
            Assert.AreEqual(oth, target.EuronextMep, "Xlao");
            target = new Exchange(ExchangeMic.Xris);
            Assert.AreEqual(oth, target.EuronextMep, "Xris");
            target = new Exchange(ExchangeMic.Fnlv);
            Assert.AreEqual(oth, target.EuronextMep, "Fnlv");
            target = new Exchange(ExchangeMic.Xbey);
            Assert.AreEqual(oth, target.EuronextMep, "Xbey");
            target = new Exchange(ExchangeMic.Xlsm);
            Assert.AreEqual(oth, target.EuronextMep, "Xlsm");
            target = new Exchange(ExchangeMic.Bapx);
            Assert.AreEqual(oth, target.EuronextMep, "Bapx");
            target = new Exchange(ExchangeMic.Getb);
            Assert.AreEqual(oth, target.EuronextMep, "Getb");
            target = new Exchange(ExchangeMic.Xlit);
            Assert.AreEqual(oth, target.EuronextMep, "Xlit");
            target = new Exchange(ExchangeMic.Fnlt);
            Assert.AreEqual(oth, target.EuronextMep, "Fnlt");
            target = new Exchange(ExchangeMic.Cclx);
            Assert.AreEqual(oth, target.EuronextMep, "Cclx");
            target = new Exchange(ExchangeMic.Xlux);
            Assert.AreEqual(oth, target.EuronextMep, "Xlux");
            target = new Exchange(ExchangeMic.Emtf);
            Assert.AreEqual(oth, target.EuronextMep, "Emtf");
            target = new Exchange(ExchangeMic.Xves);
            Assert.AreEqual(oth, target.EuronextMep, "Xves");
            target = new Exchange(ExchangeMic.Xmae);
            Assert.AreEqual(oth, target.EuronextMep, "Xmae");
            target = new Exchange(ExchangeMic.Xmdg);
            Assert.AreEqual(oth, target.EuronextMep, "Xmdg");
            target = new Exchange(ExchangeMic.Xmsw);
            Assert.AreEqual(oth, target.EuronextMep, "Xmsw");
            target = new Exchange(ExchangeMic.Xkls);
            Assert.AreEqual(oth, target.EuronextMep, "Xkls");
            target = new Exchange(ExchangeMic.Mesq);
            Assert.AreEqual(oth, target.EuronextMep, "Mesq");
            target = new Exchange(ExchangeMic.Xlfx);
            Assert.AreEqual(oth, target.EuronextMep, "Xlfx");
            target = new Exchange(ExchangeMic.Xrbm);
            Assert.AreEqual(oth, target.EuronextMep, "Xrbm");
            target = new Exchange(ExchangeMic.Malx);
            Assert.AreEqual(oth, target.EuronextMep, "Malx");
            target = new Exchange(ExchangeMic.Ewsm);
            Assert.AreEqual(oth, target.EuronextMep, "Ewsm");
            target = new Exchange(ExchangeMic.Xmal);
            Assert.AreEqual(oth, target.EuronextMep, "Xmal");
            target = new Exchange(ExchangeMic.Gbot);
            Assert.AreEqual(oth, target.EuronextMep, "Gbot");
            target = new Exchange(ExchangeMic.Xafx);
            Assert.AreEqual(oth, target.EuronextMep, "Xafx");
            target = new Exchange(ExchangeMic.Xmau);
            Assert.AreEqual(oth, target.EuronextMep, "Xmau");
            target = new Exchange(ExchangeMic.Cgmx);
            Assert.AreEqual(oth, target.EuronextMep, "Cgmx");
            target = new Exchange(ExchangeMic.Xemd);
            Assert.AreEqual(oth, target.EuronextMep, "Xemd");
            target = new Exchange(ExchangeMic.Xmex);
            Assert.AreEqual(oth, target.EuronextMep, "Xmex");
            target = new Exchange(ExchangeMic.Xmol);
            Assert.AreEqual(oth, target.EuronextMep, "Xmol");
            target = new Exchange(ExchangeMic.Xula);
            Assert.AreEqual(oth, target.EuronextMep, "Xula");
            target = new Exchange(ExchangeMic.Xmnx);
            Assert.AreEqual(oth, target.EuronextMep, "Xmnx");
            target = new Exchange(ExchangeMic.Xcas);
            Assert.AreEqual(oth, target.EuronextMep, "Xcas");
            target = new Exchange(ExchangeMic.Xbvm);
            Assert.AreEqual(oth, target.EuronextMep, "Xbvm");
            target = new Exchange(ExchangeMic.Xnam);
            Assert.AreEqual(oth, target.EuronextMep, "Xnam");
            target = new Exchange(ExchangeMic.Xnep);
            Assert.AreEqual(oth, target.EuronextMep, "Xnep");
            target = new Exchange(ExchangeMic.Nzfx);
            Assert.AreEqual(oth, target.EuronextMep, "Nzfx");
            target = new Exchange(ExchangeMic.Xnze);
            Assert.AreEqual(oth, target.EuronextMep, "Xnze");
            target = new Exchange(ExchangeMic.Xman);
            Assert.AreEqual(oth, target.EuronextMep, "Xman");
            target = new Exchange(ExchangeMic.Nasx);
            Assert.AreEqual(oth, target.EuronextMep, "Nasx");
            target = new Exchange(ExchangeMic.Xnsa);
            Assert.AreEqual(oth, target.EuronextMep, "Xnsa");
            target = new Exchange(ExchangeMic.Fish);
            Assert.AreEqual(oth, target.EuronextMep, "Fish");
            target = new Exchange(ExchangeMic.Fshx);
            Assert.AreEqual(oth, target.EuronextMep, "Fshx");
            target = new Exchange(ExchangeMic.Icas);
            Assert.AreEqual(oth, target.EuronextMep, "Icas");
            target = new Exchange(ExchangeMic.Nexo);
            Assert.AreEqual(oth, target.EuronextMep, "Nexo");
            target = new Exchange(ExchangeMic.Nops);
            Assert.AreEqual(oth, target.EuronextMep, "Nops");
            target = new Exchange(ExchangeMic.Norx);
            Assert.AreEqual(oth, target.EuronextMep, "Norx");
            target = new Exchange(ExchangeMic.Nosc);
            Assert.AreEqual(oth, target.EuronextMep, "Nosc");
            target = new Exchange(ExchangeMic.Notc);
            Assert.AreEqual(oth, target.EuronextMep, "Notc");
            target = new Exchange(ExchangeMic.Oslc);
            Assert.AreEqual(oth, target.EuronextMep, "Oslc");
            target = new Exchange(ExchangeMic.Xima);
            Assert.AreEqual(oth, target.EuronextMep, "Xima");
            target = new Exchange(ExchangeMic.Xosl);
            Assert.AreEqual(oth, target.EuronextMep, "Xosl");
            target = new Exchange(ExchangeMic.Merd);
            Assert.AreEqual(oth, target.EuronextMep, "Merd");
            target = new Exchange(ExchangeMic.Merk);
            Assert.AreEqual(oth, target.EuronextMep, "Merk");
            target = new Exchange(ExchangeMic.Nibr);
            Assert.AreEqual(oth, target.EuronextMep, "Nibr");
            target = new Exchange(ExchangeMic.Xoad);
            Assert.AreEqual(oth, target.EuronextMep, "Xoad");
            target = new Exchange(ExchangeMic.Xoam);
            Assert.AreEqual(oth, target.EuronextMep, "Xoam");
            target = new Exchange(ExchangeMic.Xoas);
            Assert.AreEqual(oth, target.EuronextMep, "Xoas");
            target = new Exchange(ExchangeMic.Xosc);
            Assert.AreEqual(oth, target.EuronextMep, "Xosc");
            target = new Exchange(ExchangeMic.Xosd);
            Assert.AreEqual(oth, target.EuronextMep, "Xosd");
            target = new Exchange(ExchangeMic.Xmus);
            Assert.AreEqual(oth, target.EuronextMep, "Xmus");
            target = new Exchange(ExchangeMic.Ncel);
            Assert.AreEqual(oth, target.EuronextMep, "Ncel");
            target = new Exchange(ExchangeMic.Xisl);
            Assert.AreEqual(oth, target.EuronextMep, "Xisl");
            target = new Exchange(ExchangeMic.Xkar);
            Assert.AreEqual(oth, target.EuronextMep, "Xkar");
            target = new Exchange(ExchangeMic.Xlah);
            Assert.AreEqual(oth, target.EuronextMep, "Xlah");
            target = new Exchange(ExchangeMic.Xpae);
            Assert.AreEqual(oth, target.EuronextMep, "Xpae");
            target = new Exchange(ExchangeMic.Xpty);
            Assert.AreEqual(oth, target.EuronextMep, "Xpty");
            target = new Exchange(ExchangeMic.Xpom);
            Assert.AreEqual(oth, target.EuronextMep, "Xpom");
            target = new Exchange(ExchangeMic.Xvpa);
            Assert.AreEqual(oth, target.EuronextMep, "Xvpa");
            target = new Exchange(ExchangeMic.Xlim);
            Assert.AreEqual(oth, target.EuronextMep, "Xlim");
            target = new Exchange(ExchangeMic.Clph);
            Assert.AreEqual(oth, target.EuronextMep, "Clph");
            target = new Exchange(ExchangeMic.Pdex);
            Assert.AreEqual(oth, target.EuronextMep, "Pdex");
            target = new Exchange(ExchangeMic.Xphs);
            Assert.AreEqual(oth, target.EuronextMep, "Xphs");
            target = new Exchange(ExchangeMic.Kdpw);
            Assert.AreEqual(oth, target.EuronextMep, "Kdpw");
            target = new Exchange(ExchangeMic.Xwar);
            Assert.AreEqual(oth, target.EuronextMep, "Xwar");
            target = new Exchange(ExchangeMic.Bosp);
            Assert.AreEqual(oth, target.EuronextMep, "Bosp");
            target = new Exchange(ExchangeMic.Plpd);
            Assert.AreEqual(oth, target.EuronextMep, "Plpd");
            target = new Exchange(ExchangeMic.Plpx);
            Assert.AreEqual(oth, target.EuronextMep, "Plpx");
            target = new Exchange(ExchangeMic.Rpwc);
            Assert.AreEqual(oth, target.EuronextMep, "Rpwc");
            target = new Exchange(ExchangeMic.Tbsp);
            Assert.AreEqual(oth, target.EuronextMep, "Tbsp");
            target = new Exchange(ExchangeMic.Wbcl);
            Assert.AreEqual(oth, target.EuronextMep, "Wbcl");
            target = new Exchange(ExchangeMic.Wbon);
            Assert.AreEqual(oth, target.EuronextMep, "Wbon");
            target = new Exchange(ExchangeMic.Wder);
            Assert.AreEqual(oth, target.EuronextMep, "Wder");
            target = new Exchange(ExchangeMic.Wetp);
            Assert.AreEqual(oth, target.EuronextMep, "Wetp");
            target = new Exchange(ExchangeMic.Wgas);
            Assert.AreEqual(oth, target.EuronextMep, "Wgas");
            target = new Exchange(ExchangeMic.Wind);
            Assert.AreEqual(oth, target.EuronextMep, "Wind");
            target = new Exchange(ExchangeMic.Wmtf);
            Assert.AreEqual(oth, target.EuronextMep, "Wmtf");
            target = new Exchange(ExchangeMic.Xnco);
            Assert.AreEqual(oth, target.EuronextMep, "Xnco");
            target = new Exchange(ExchangeMic.Omic);
            Assert.AreEqual(oth, target.EuronextMep, "Omic");
            target = new Exchange(ExchangeMic.Opex);
            Assert.AreEqual(oth, target.EuronextMep, "Opex");
            target = new Exchange(ExchangeMic.Omip);
            Assert.AreEqual(oth, target.EuronextMep, "Omip");
            target = new Exchange(ExchangeMic.Dsmd);
            Assert.AreEqual(oth, target.EuronextMep, "Dsmd");
            target = new Exchange(ExchangeMic.Trpx);
            Assert.AreEqual(oth, target.EuronextMep, "Trpx");
            target = new Exchange(ExchangeMic.Bmfx);
            Assert.AreEqual(oth, target.EuronextMep, "Bmfx");
            target = new Exchange(ExchangeMic.Bmfa);
            Assert.AreEqual(oth, target.EuronextMep, "Bmfa");
            target = new Exchange(ExchangeMic.Bmfm);
            Assert.AreEqual(oth, target.EuronextMep, "Bmfm");
            target = new Exchange(ExchangeMic.Sbmf);
            Assert.AreEqual(oth, target.EuronextMep, "Sbmf");
            target = new Exchange(ExchangeMic.Xbrm);
            Assert.AreEqual(oth, target.EuronextMep, "Xbrm");
            target = new Exchange(ExchangeMic.Xbse);
            Assert.AreEqual(oth, target.EuronextMep, "Xbse");
            target = new Exchange(ExchangeMic.Xbsd);
            Assert.AreEqual(oth, target.EuronextMep, "Xbsd");
            target = new Exchange(ExchangeMic.Xcan);
            Assert.AreEqual(oth, target.EuronextMep, "Xcan");
            target = new Exchange(ExchangeMic.Xras);
            Assert.AreEqual(oth, target.EuronextMep, "Xras");
            target = new Exchange(ExchangeMic.Xrpm);
            Assert.AreEqual(oth, target.EuronextMep, "Xrpm");
            target = new Exchange(ExchangeMic.Misx);
            Assert.AreEqual(oth, target.EuronextMep, "Misx");
            target = new Exchange(ExchangeMic.Rtsx);
            Assert.AreEqual(oth, target.EuronextMep, "Rtsx");
            target = new Exchange(ExchangeMic.Namx);
            Assert.AreEqual(oth, target.EuronextMep, "Namx");
            target = new Exchange(ExchangeMic.Rpdx);
            Assert.AreEqual(oth, target.EuronextMep, "Rpdx");
            target = new Exchange(ExchangeMic.Rusx);
            Assert.AreEqual(oth, target.EuronextMep, "Rusx");
            target = new Exchange(ExchangeMic.Spim);
            Assert.AreEqual(oth, target.EuronextMep, "Spim");
            target = new Exchange(ExchangeMic.Xmos);
            Assert.AreEqual(oth, target.EuronextMep, "Xmos");
            target = new Exchange(ExchangeMic.Xpet);
            Assert.AreEqual(oth, target.EuronextMep, "Xpet");
            target = new Exchange(ExchangeMic.Xpic);
            Assert.AreEqual(oth, target.EuronextMep, "Xpic");
            target = new Exchange(ExchangeMic.Xrus);
            Assert.AreEqual(oth, target.EuronextMep, "Xrus");
            target = new Exchange(ExchangeMic.Xsam);
            Assert.AreEqual(oth, target.EuronextMep, "Xsam");
            target = new Exchange(ExchangeMic.Xsib);
            Assert.AreEqual(oth, target.EuronextMep, "Xsib");
            target = new Exchange(ExchangeMic.Rotc);
            Assert.AreEqual(oth, target.EuronextMep, "Rotc");
            target = new Exchange(ExchangeMic.Rsex);
            Assert.AreEqual(oth, target.EuronextMep, "Rsex");
            target = new Exchange(ExchangeMic.Xecs);
            Assert.AreEqual(oth, target.EuronextMep, "Xecs");
            target = new Exchange(ExchangeMic.Xsau);
            Assert.AreEqual(oth, target.EuronextMep, "Xsau");
            target = new Exchange(ExchangeMic.Xbel);
            Assert.AreEqual(oth, target.EuronextMep, "Xbel");
            target = new Exchange(ExchangeMic.Cltd);
            Assert.AreEqual(oth, target.EuronextMep, "Cltd");
            target = new Exchange(ExchangeMic.Ecal);
            Assert.AreEqual(oth, target.EuronextMep, "Ecal");
            target = new Exchange(ExchangeMic.Eeal);
            Assert.AreEqual(oth, target.EuronextMep, "Eeal");
            target = new Exchange(ExchangeMic.Ifsg);
            Assert.AreEqual(oth, target.EuronextMep, "Ifsg");
            target = new Exchange(ExchangeMic.Jadx);
            Assert.AreEqual(oth, target.EuronextMep, "Jadx");
            target = new Exchange(ExchangeMic.Smex);
            Assert.AreEqual(oth, target.EuronextMep, "Smex");
            target = new Exchange(ExchangeMic.Tfsa);
            Assert.AreEqual(oth, target.EuronextMep, "Tfsa");
            target = new Exchange(ExchangeMic.Xses);
            Assert.AreEqual(oth, target.EuronextMep, "Xses");
            target = new Exchange(ExchangeMic.Xsca);
            Assert.AreEqual(oth, target.EuronextMep, "Xsca");
            target = new Exchange(ExchangeMic.Xsce);
            Assert.AreEqual(oth, target.EuronextMep, "Xsce");
            target = new Exchange(ExchangeMic.Xsim);
            Assert.AreEqual(oth, target.EuronextMep, "Xsim");
            target = new Exchange(ExchangeMic.Spxe);
            Assert.AreEqual(oth, target.EuronextMep, "Spxe");
            target = new Exchange(ExchangeMic.Xbra);
            Assert.AreEqual(oth, target.EuronextMep, "Xbra");
            target = new Exchange(ExchangeMic.Xlju);
            Assert.AreEqual(oth, target.EuronextMep, "Xlju");
            target = new Exchange(ExchangeMic.Xsop);
            Assert.AreEqual(oth, target.EuronextMep, "Xsop");
            target = new Exchange(ExchangeMic.Xjse);
            Assert.AreEqual(oth, target.EuronextMep, "Xjse");
            target = new Exchange(ExchangeMic.Altx);
            Assert.AreEqual(oth, target.EuronextMep, "Altx");
            target = new Exchange(ExchangeMic.Xbes);
            Assert.AreEqual(oth, target.EuronextMep, "Xbes");
            target = new Exchange(ExchangeMic.Xsaf);
            Assert.AreEqual(oth, target.EuronextMep, "Xsaf");
            target = new Exchange(ExchangeMic.Xsfa);
            Assert.AreEqual(oth, target.EuronextMep, "Xsfa");
            target = new Exchange(ExchangeMic.Yldx);
            Assert.AreEqual(oth, target.EuronextMep, "Yldx");
            target = new Exchange(ExchangeMic.Bmex);
            Assert.AreEqual(oth, target.EuronextMep, "Bmex");
            target = new Exchange(ExchangeMic.Bmcl);
            Assert.AreEqual(oth, target.EuronextMep, "Bmcl");
            target = new Exchange(ExchangeMic.Mabx);
            Assert.AreEqual(oth, target.EuronextMep, "Mabx");
            target = new Exchange(ExchangeMic.Marf);
            Assert.AreEqual(oth, target.EuronextMep, "Marf");
            target = new Exchange(ExchangeMic.Merf);
            Assert.AreEqual(oth, target.EuronextMep, "Merf");
            target = new Exchange(ExchangeMic.Send);
            Assert.AreEqual(oth, target.EuronextMep, "Send");
            target = new Exchange(ExchangeMic.Xbar);
            Assert.AreEqual(oth, target.EuronextMep, "Xbar");
            target = new Exchange(ExchangeMic.Xbil);
            Assert.AreEqual(oth, target.EuronextMep, "Xbil");
            target = new Exchange(ExchangeMic.Xdrf);
            Assert.AreEqual(oth, target.EuronextMep, "Xdrf");
            target = new Exchange(ExchangeMic.Xlat);
            Assert.AreEqual(oth, target.EuronextMep, "Xlat");
            target = new Exchange(ExchangeMic.Xmad);
            Assert.AreEqual(oth, target.EuronextMep, "Xmad");
            target = new Exchange(ExchangeMic.Xmce);
            Assert.AreEqual(oth, target.EuronextMep, "Xmce");
            target = new Exchange(ExchangeMic.Xmpw);
            Assert.AreEqual(oth, target.EuronextMep, "Xmpw");
            target = new Exchange(ExchangeMic.Xmrv);
            Assert.AreEqual(oth, target.EuronextMep, "Xmrv");
            target = new Exchange(ExchangeMic.Xval);
            Assert.AreEqual(oth, target.EuronextMep, "Xval");
            target = new Exchange(ExchangeMic.Ibgh);
            Assert.AreEqual(oth, target.EuronextMep, "Ibgh");
            target = new Exchange(ExchangeMic.Mibg);
            Assert.AreEqual(oth, target.EuronextMep, "Mibg");
            target = new Exchange(ExchangeMic.Omel);
            Assert.AreEqual(oth, target.EuronextMep, "Omel");
            target = new Exchange(ExchangeMic.Pave);
            Assert.AreEqual(oth, target.EuronextMep, "Pave");
            target = new Exchange(ExchangeMic.Xdpa);
            Assert.AreEqual(oth, target.EuronextMep, "Xdpa");
            target = new Exchange(ExchangeMic.Xnaf);
            Assert.AreEqual(oth, target.EuronextMep, "Xnaf");
            target = new Exchange(ExchangeMic.Xsrm);
            Assert.AreEqual(oth, target.EuronextMep, "Xsrm");
            target = new Exchange(ExchangeMic.Xcol);
            Assert.AreEqual(oth, target.EuronextMep, "Xcol");
            target = new Exchange(ExchangeMic.Xkha);
            Assert.AreEqual(oth, target.EuronextMep, "Xkha");
            target = new Exchange(ExchangeMic.Xswa);
            Assert.AreEqual(oth, target.EuronextMep, "Xswa");
            target = new Exchange(ExchangeMic.Cryd);
            Assert.AreEqual(oth, target.EuronextMep, "Cryd");
            target = new Exchange(ExchangeMic.Cryx);
            Assert.AreEqual(oth, target.EuronextMep, "Cryx");
            target = new Exchange(ExchangeMic.Sebx);
            Assert.AreEqual(oth, target.EuronextMep, "Sebx");
            target = new Exchange(ExchangeMic.Ensx);
            Assert.AreEqual(oth, target.EuronextMep, "Ensx");
            target = new Exchange(ExchangeMic.Xngm);
            Assert.AreEqual(oth, target.EuronextMep, "Xngm");
            target = new Exchange(ExchangeMic.Nmtf);
            Assert.AreEqual(oth, target.EuronextMep, "Nmtf");
            target = new Exchange(ExchangeMic.Xndx);
            Assert.AreEqual(oth, target.EuronextMep, "Xndx");
            target = new Exchange(ExchangeMic.Xnmr);
            Assert.AreEqual(oth, target.EuronextMep, "Xnmr");
            target = new Exchange(ExchangeMic.Xsat);
            Assert.AreEqual(oth, target.EuronextMep, "Xsat");
            target = new Exchange(ExchangeMic.Xsto);
            Assert.AreEqual(oth, target.EuronextMep, "Xsto");
            target = new Exchange(ExchangeMic.Csto);
            Assert.AreEqual(oth, target.EuronextMep, "Csto");
            target = new Exchange(ExchangeMic.Dnse);
            Assert.AreEqual(oth, target.EuronextMep, "Dnse");
            target = new Exchange(ExchangeMic.Dsto);
            Assert.AreEqual(oth, target.EuronextMep, "Dsto");
            target = new Exchange(ExchangeMic.Fnse);
            Assert.AreEqual(oth, target.EuronextMep, "Fnse");
            target = new Exchange(ExchangeMic.Xopv);
            Assert.AreEqual(oth, target.EuronextMep, "Xopv");
            target = new Exchange(ExchangeMic.Aixe);
            Assert.AreEqual(oth, target.EuronextMep, "Aixe");
            target = new Exchange(ExchangeMic.Dots);
            Assert.AreEqual(oth, target.EuronextMep, "Dots");
            target = new Exchange(ExchangeMic.Euch);
            Assert.AreEqual(oth, target.EuronextMep, "Euch");
            target = new Exchange(ExchangeMic.Eurm);
            Assert.AreEqual(oth, target.EuronextMep, "Eurm");
            target = new Exchange(ExchangeMic.Eusc);
            Assert.AreEqual(oth, target.EuronextMep, "Eusc");
            target = new Exchange(ExchangeMic.Eusp);
            Assert.AreEqual(oth, target.EuronextMep, "Eusp");
            target = new Exchange(ExchangeMic.Stox);
            Assert.AreEqual(oth, target.EuronextMep, "Stox");
            target = new Exchange(ExchangeMic.Xscu);
            Assert.AreEqual(oth, target.EuronextMep, "Xscu");
            target = new Exchange(ExchangeMic.Xstv);
            Assert.AreEqual(oth, target.EuronextMep, "Xstv");
            target = new Exchange(ExchangeMic.Xstx);
            Assert.AreEqual(oth, target.EuronextMep, "Xstx");
            target = new Exchange(ExchangeMic.Ubsg);
            Assert.AreEqual(oth, target.EuronextMep, "Ubsg");
            target = new Exchange(ExchangeMic.Ubsc);
            Assert.AreEqual(oth, target.EuronextMep, "Ubsc");
            target = new Exchange(ExchangeMic.Ubsf);
            Assert.AreEqual(oth, target.EuronextMep, "Ubsf");
            target = new Exchange(ExchangeMic.Xbrn);
            Assert.AreEqual(oth, target.EuronextMep, "Xbrn");
            target = new Exchange(ExchangeMic.Xswx);
            Assert.AreEqual(oth, target.EuronextMep, "Xswx");
            target = new Exchange(ExchangeMic.Xbtr);
            Assert.AreEqual(oth, target.EuronextMep, "Xbtr");
            target = new Exchange(ExchangeMic.Xicb);
            Assert.AreEqual(oth, target.EuronextMep, "Xicb");
            target = new Exchange(ExchangeMic.Xqmh);
            Assert.AreEqual(oth, target.EuronextMep, "Xqmh");
            target = new Exchange(ExchangeMic.Xvtx);
            Assert.AreEqual(oth, target.EuronextMep, "Xvtx");
            target = new Exchange(ExchangeMic.Zkbx);
            Assert.AreEqual(oth, target.EuronextMep, "Zkbx");
            target = new Exchange(ExchangeMic.Xdse);
            Assert.AreEqual(oth, target.EuronextMep, "Xdse");
            target = new Exchange(ExchangeMic.Roco);
            Assert.AreEqual(oth, target.EuronextMep, "Roco");
            target = new Exchange(ExchangeMic.Xtaf);
            Assert.AreEqual(oth, target.EuronextMep, "Xtaf");
            target = new Exchange(ExchangeMic.Xtai);
            Assert.AreEqual(oth, target.EuronextMep, "Xtai");
            target = new Exchange(ExchangeMic.Xdar);
            Assert.AreEqual(oth, target.EuronextMep, "Xdar");
            target = new Exchange(ExchangeMic.Afet);
            Assert.AreEqual(oth, target.EuronextMep, "Afet");
            target = new Exchange(ExchangeMic.Beex);
            Assert.AreEqual(oth, target.EuronextMep, "Beex");
            target = new Exchange(ExchangeMic.Tfex);
            Assert.AreEqual(oth, target.EuronextMep, "Tfex");
            target = new Exchange(ExchangeMic.Xbkk);
            Assert.AreEqual(oth, target.EuronextMep, "Xbkk");
            target = new Exchange(ExchangeMic.Xbkf);
            Assert.AreEqual(oth, target.EuronextMep, "Xbkf");
            target = new Exchange(ExchangeMic.Xmai);
            Assert.AreEqual(oth, target.EuronextMep, "Xmai");
            target = new Exchange(ExchangeMic.Clmx);
            Assert.AreEqual(oth, target.EuronextMep, "Clmx");
            target = new Exchange(ExchangeMic.Hchc);
            Assert.AreEqual(oth, target.EuronextMep, "Hchc");
            target = new Exchange(ExchangeMic.Ndex);
            Assert.AreEqual(oth, target.EuronextMep, "Ndex");
            target = new Exchange(ExchangeMic.Ndxs);
            Assert.AreEqual(oth, target.EuronextMep, "Ndxs");
            target = new Exchange(ExchangeMic.Nlpx);
            Assert.AreEqual(oth, target.EuronextMep, "Nlpx");
            target = new Exchange(ExchangeMic.Tomx);
            Assert.AreEqual(oth, target.EuronextMep, "Tomx");
            target = new Exchange(ExchangeMic.Tomd);
            Assert.AreEqual(oth, target.EuronextMep, "Tomd");
            target = new Exchange(ExchangeMic.Xems);
            Assert.AreEqual(oth, target.EuronextMep, "Xems");
            target = new Exchange(ExchangeMic.Xhft);
            Assert.AreEqual(oth, target.EuronextMep, "Xhft");
            target = new Exchange(ExchangeMic.Xtrn);
            Assert.AreEqual(oth, target.EuronextMep, "Xtrn");
            target = new Exchange(ExchangeMic.Xtun);
            Assert.AreEqual(oth, target.EuronextMep, "Xtun");
            target = new Exchange(ExchangeMic.Xist);
            Assert.AreEqual(oth, target.EuronextMep, "Xist");
            target = new Exchange(ExchangeMic.Xdsm);
            Assert.AreEqual(oth, target.EuronextMep, "Xdsm");
            target = new Exchange(ExchangeMic.Xeqy);
            Assert.AreEqual(oth, target.EuronextMep, "Xeqy");
            target = new Exchange(ExchangeMic.Xfno);
            Assert.AreEqual(oth, target.EuronextMep, "Xfno");
            target = new Exchange(ExchangeMic.Xpms);
            Assert.AreEqual(oth, target.EuronextMep, "Xpms");
            target = new Exchange(ExchangeMic.Ultx);
            Assert.AreEqual(oth, target.EuronextMep, "Ultx");
            target = new Exchange(ExchangeMic.Xuga);
            Assert.AreEqual(oth, target.EuronextMep, "Xuga");
            target = new Exchange(ExchangeMic.Eese);
            Assert.AreEqual(oth, target.EuronextMep, "Eese");
            target = new Exchange(ExchangeMic.Pfts);
            Assert.AreEqual(oth, target.EuronextMep, "Pfts");
            target = new Exchange(ExchangeMic.Pftq);
            Assert.AreEqual(oth, target.EuronextMep, "Pftq");
            target = new Exchange(ExchangeMic.Sepe);
            Assert.AreEqual(oth, target.EuronextMep, "Sepe");
            target = new Exchange(ExchangeMic.Ukex);
            Assert.AreEqual(oth, target.EuronextMep, "Ukex");
            target = new Exchange(ExchangeMic.Xdfb);
            Assert.AreEqual(oth, target.EuronextMep, "Xdfb");
            target = new Exchange(ExchangeMic.Xkhr);
            Assert.AreEqual(oth, target.EuronextMep, "Xkhr");
            target = new Exchange(ExchangeMic.Xkie);
            Assert.AreEqual(oth, target.EuronextMep, "Xkie");
            target = new Exchange(ExchangeMic.Xkis);
            Assert.AreEqual(oth, target.EuronextMep, "Xkis");
            target = new Exchange(ExchangeMic.Xode);
            Assert.AreEqual(oth, target.EuronextMep, "Xode");
            target = new Exchange(ExchangeMic.Xpri);
            Assert.AreEqual(oth, target.EuronextMep, "Xpri");
            target = new Exchange(ExchangeMic.Xuax);
            Assert.AreEqual(oth, target.EuronextMep, "Xuax");
            target = new Exchange(ExchangeMic.Xukr);
            Assert.AreEqual(oth, target.EuronextMep, "Xukr");
            target = new Exchange(ExchangeMic.Dgcx);
            Assert.AreEqual(oth, target.EuronextMep, "Dgcx");
            target = new Exchange(ExchangeMic.Difx);
            Assert.AreEqual(oth, target.EuronextMep, "Difx");
            target = new Exchange(ExchangeMic.Dumx);
            Assert.AreEqual(oth, target.EuronextMep, "Dumx");
            target = new Exchange(ExchangeMic.Xads);
            Assert.AreEqual(oth, target.EuronextMep, "Xads");
            target = new Exchange(ExchangeMic.Xdfm);
            Assert.AreEqual(oth, target.EuronextMep, "Xdfm");
            target = new Exchange(ExchangeMic.Aqxe);
            Assert.AreEqual(oth, target.EuronextMep, "Aqxe");
            target = new Exchange(ExchangeMic.Balt);
            Assert.AreEqual(oth, target.EuronextMep, "Balt");
            target = new Exchange(ExchangeMic.Bltx);
            Assert.AreEqual(oth, target.EuronextMep, "Bltx");
            target = new Exchange(ExchangeMic.Bcxe);
            Assert.AreEqual(oth, target.EuronextMep, "Bcxe");
            target = new Exchange(ExchangeMic.Batd);
            Assert.AreEqual(oth, target.EuronextMep, "Batd");
            target = new Exchange(ExchangeMic.Bate);
            Assert.AreEqual(oth, target.EuronextMep, "Bate");
            target = new Exchange(ExchangeMic.Batf);
            Assert.AreEqual(oth, target.EuronextMep, "Batf");
            target = new Exchange(ExchangeMic.Batp);
            Assert.AreEqual(oth, target.EuronextMep, "Batp");
            target = new Exchange(ExchangeMic.Botc);
            Assert.AreEqual(oth, target.EuronextMep, "Botc");
            target = new Exchange(ExchangeMic.Chid);
            Assert.AreEqual(oth, target.EuronextMep, "Chid");
            target = new Exchange(ExchangeMic.Chio);
            Assert.AreEqual(oth, target.EuronextMep, "Chio");
            target = new Exchange(ExchangeMic.Chix);
            Assert.AreEqual(oth, target.EuronextMep, "Chix");
            target = new Exchange(ExchangeMic.Bgci);
            Assert.AreEqual(oth, target.EuronextMep, "Bgci");
            target = new Exchange(ExchangeMic.Bgcb);
            Assert.AreEqual(oth, target.EuronextMep, "Bgcb");
            target = new Exchange(ExchangeMic.Blox);
            Assert.AreEqual(oth, target.EuronextMep, "Blox");
            target = new Exchange(ExchangeMic.Bmtf);
            Assert.AreEqual(oth, target.EuronextMep, "Bmtf");
            target = new Exchange(ExchangeMic.Boat);
            Assert.AreEqual(oth, target.EuronextMep, "Boat");
            target = new Exchange(ExchangeMic.Bosc);
            Assert.AreEqual(oth, target.EuronextMep, "Bosc");
            target = new Exchange(ExchangeMic.Brnx);
            Assert.AreEqual(oth, target.EuronextMep, "Brnx");
            target = new Exchange(ExchangeMic.Caze);
            Assert.AreEqual(oth, target.EuronextMep, "Caze");
            target = new Exchange(ExchangeMic.Cco2);
            Assert.AreEqual(oth, target.EuronextMep, "Cco2");
            target = new Exchange(ExchangeMic.Cgme);
            Assert.AreEqual(oth, target.EuronextMep, "Cgme");
            target = new Exchange(ExchangeMic.Chev);
            Assert.AreEqual(oth, target.EuronextMep, "Chev");
            target = new Exchange(ExchangeMic.Blnk);
            Assert.AreEqual(oth, target.EuronextMep, "Blnk");
            target = new Exchange(ExchangeMic.Cmee);
            Assert.AreEqual(oth, target.EuronextMep, "Cmee");
            target = new Exchange(ExchangeMic.Cmec);
            Assert.AreEqual(oth, target.EuronextMep, "Cmec");
            target = new Exchange(ExchangeMic.Cmed);
            Assert.AreEqual(oth, target.EuronextMep, "Cmed");
            target = new Exchange(ExchangeMic.Cmmt);
            Assert.AreEqual(oth, target.EuronextMep, "Cmmt");
            target = new Exchange(ExchangeMic.Cseu);
            Assert.AreEqual(oth, target.EuronextMep, "Cseu");
            target = new Exchange(ExchangeMic.Cscf);
            Assert.AreEqual(oth, target.EuronextMep, "Cscf");
            target = new Exchange(ExchangeMic.Dbix);
            Assert.AreEqual(oth, target.EuronextMep, "Dbix");
            target = new Exchange(ExchangeMic.Dbcr);
            Assert.AreEqual(oth, target.EuronextMep, "Dbcr");
            target = new Exchange(ExchangeMic.Dbcx);
            Assert.AreEqual(oth, target.EuronextMep, "Dbcx");
            target = new Exchange(ExchangeMic.Dbdc);
            Assert.AreEqual(oth, target.EuronextMep, "Dbdc");
            target = new Exchange(ExchangeMic.Dbmo);
            Assert.AreEqual(oth, target.EuronextMep, "Dbmo");
            target = new Exchange(ExchangeMic.Dbse);
            Assert.AreEqual(oth, target.EuronextMep, "Dbse");
            target = new Exchange(ExchangeMic.Encl);
            Assert.AreEqual(oth, target.EuronextMep, "Encl");
            target = new Exchange(ExchangeMic.Eqld);
            Assert.AreEqual(oth, target.EuronextMep, "Eqld");
            target = new Exchange(ExchangeMic.Exeu);
            Assert.AreEqual(oth, target.EuronextMep, "Exeu");
            target = new Exchange(ExchangeMic.Exbo);
            Assert.AreEqual(oth, target.EuronextMep, "Exbo");
            target = new Exchange(ExchangeMic.Excp);
            Assert.AreEqual(oth, target.EuronextMep, "Excp");
            target = new Exchange(ExchangeMic.Exmp);
            Assert.AreEqual(oth, target.EuronextMep, "Exmp");
            target = new Exchange(ExchangeMic.Exor);
            Assert.AreEqual(oth, target.EuronextMep, "Exor");
            target = new Exchange(ExchangeMic.Exsi);
            Assert.AreEqual(oth, target.EuronextMep, "Exsi");
            target = new Exchange(ExchangeMic.Exvp);
            Assert.AreEqual(oth, target.EuronextMep, "Exvp");
            target = new Exchange(ExchangeMic.Fair);
            Assert.AreEqual(oth, target.EuronextMep, "Fair");
            target = new Exchange(ExchangeMic.Gemx);
            Assert.AreEqual(oth, target.EuronextMep, "Gemx");
            target = new Exchange(ExchangeMic.Gfic);
            Assert.AreEqual(oth, target.EuronextMep, "Gfic");
            target = new Exchange(ExchangeMic.Gfif);
            Assert.AreEqual(oth, target.EuronextMep, "Gfif");
            target = new Exchange(ExchangeMic.Gfin);
            Assert.AreEqual(oth, target.EuronextMep, "Gfin");
            target = new Exchange(ExchangeMic.Gfir);
            Assert.AreEqual(oth, target.EuronextMep, "Gfir");
            target = new Exchange(ExchangeMic.Gmeg);
            Assert.AreEqual(oth, target.EuronextMep, "Gmeg");
            target = new Exchange(ExchangeMic.Xgcx);
            Assert.AreEqual(oth, target.EuronextMep, "Xgcx");
            target = new Exchange(ExchangeMic.Xgdx);
            Assert.AreEqual(oth, target.EuronextMep, "Xgdx");
            target = new Exchange(ExchangeMic.Xgsx);
            Assert.AreEqual(oth, target.EuronextMep, "Xgsx");
            target = new Exchange(ExchangeMic.Xldx);
            Assert.AreEqual(oth, target.EuronextMep, "Xldx");
            target = new Exchange(ExchangeMic.Grif);
            Assert.AreEqual(oth, target.EuronextMep, "Grif");
            target = new Exchange(ExchangeMic.Grse);
            Assert.AreEqual(oth, target.EuronextMep, "Grse");
            target = new Exchange(ExchangeMic.Hsxe);
            Assert.AreEqual(oth, target.EuronextMep, "Hsxe");
            target = new Exchange(ExchangeMic.Ibal);
            Assert.AreEqual(oth, target.EuronextMep, "Ibal");
            target = new Exchange(ExchangeMic.Icap);
            Assert.AreEqual(oth, target.EuronextMep, "Icap");
            target = new Exchange(ExchangeMic.Btee);
            Assert.AreEqual(oth, target.EuronextMep, "Btee");
            target = new Exchange(ExchangeMic.Ebsx);
            Assert.AreEqual(oth, target.EuronextMep, "Ebsx");
            target = new Exchange(ExchangeMic.Icah);
            Assert.AreEqual(oth, target.EuronextMep, "Icah");
            target = new Exchange(ExchangeMic.Icen);
            Assert.AreEqual(oth, target.EuronextMep, "Icen");
            target = new Exchange(ExchangeMic.Icse);
            Assert.AreEqual(oth, target.EuronextMep, "Icse");
            target = new Exchange(ExchangeMic.Ictq);
            Assert.AreEqual(oth, target.EuronextMep, "Ictq");
            target = new Exchange(ExchangeMic.Isdx);
            Assert.AreEqual(oth, target.EuronextMep, "Isdx");
            target = new Exchange(ExchangeMic.Wclk);
            Assert.AreEqual(oth, target.EuronextMep, "Wclk");
            target = new Exchange(ExchangeMic.Ifeu);
            Assert.AreEqual(oth, target.EuronextMep, "Ifeu");
            target = new Exchange(ExchangeMic.Cxrt);
            Assert.AreEqual(oth, target.EuronextMep, "Cxrt");
            target = new Exchange(ExchangeMic.Ifen);
            Assert.AreEqual(oth, target.EuronextMep, "Ifen");
            target = new Exchange(ExchangeMic.Ifll);
            Assert.AreEqual(oth, target.EuronextMep, "Ifll");
            target = new Exchange(ExchangeMic.Iflo);
            Assert.AreEqual(oth, target.EuronextMep, "Iflo");
            target = new Exchange(ExchangeMic.Iflx);
            Assert.AreEqual(oth, target.EuronextMep, "Iflx");
            target = new Exchange(ExchangeMic.Ifut);
            Assert.AreEqual(oth, target.EuronextMep, "Ifut");
            target = new Exchange(ExchangeMic.Iswa);
            Assert.AreEqual(oth, target.EuronextMep, "Iswa");
            target = new Exchange(ExchangeMic.Kleu);
            Assert.AreEqual(oth, target.EuronextMep, "Kleu");
            target = new Exchange(ExchangeMic.Liqu);
            Assert.AreEqual(oth, target.EuronextMep, "Liqu");
            target = new Exchange(ExchangeMic.Liqf);
            Assert.AreEqual(oth, target.EuronextMep, "Liqf");
            target = new Exchange(ExchangeMic.Liqh);
            Assert.AreEqual(oth, target.EuronextMep, "Liqh");
            target = new Exchange(ExchangeMic.Lmax);
            Assert.AreEqual(oth, target.EuronextMep, "Lmax");
            target = new Exchange(ExchangeMic.Lmad);
            Assert.AreEqual(oth, target.EuronextMep, "Lmad");
            target = new Exchange(ExchangeMic.Lmae);
            Assert.AreEqual(oth, target.EuronextMep, "Lmae");
            target = new Exchange(ExchangeMic.Lmaf);
            Assert.AreEqual(oth, target.EuronextMep, "Lmaf");
            target = new Exchange(ExchangeMic.Lmao);
            Assert.AreEqual(oth, target.EuronextMep, "Lmao");
            target = new Exchange(ExchangeMic.Lmec);
            Assert.AreEqual(oth, target.EuronextMep, "Lmec");
            target = new Exchange(ExchangeMic.Lotc);
            Assert.AreEqual(oth, target.EuronextMep, "Lotc");
            target = new Exchange(ExchangeMic.Pldx);
            Assert.AreEqual(oth, target.EuronextMep, "Pldx");
            target = new Exchange(ExchangeMic.Lppm);
            Assert.AreEqual(oth, target.EuronextMep, "Lppm");
            target = new Exchange(ExchangeMic.Mael);
            Assert.AreEqual(oth, target.EuronextMep, "Mael");
            target = new Exchange(ExchangeMic.Mfgl);
            Assert.AreEqual(oth, target.EuronextMep, "Mfgl");
            target = new Exchange(ExchangeMic.Mlxn);
            Assert.AreEqual(oth, target.EuronextMep, "Mlxn");
            target = new Exchange(ExchangeMic.Mlax);
            Assert.AreEqual(oth, target.EuronextMep, "Mlax");
            target = new Exchange(ExchangeMic.Mleu);
            Assert.AreEqual(oth, target.EuronextMep, "Mleu");
            target = new Exchange(ExchangeMic.Mlve);
            Assert.AreEqual(oth, target.EuronextMep, "Mlve");
            target = new Exchange(ExchangeMic.Msip);
            Assert.AreEqual(oth, target.EuronextMep, "Msip");
            target = new Exchange(ExchangeMic.Mytr);
            Assert.AreEqual(oth, target.EuronextMep, "Mytr");
            target = new Exchange(ExchangeMic.N2Ex);
            Assert.AreEqual(oth, target.EuronextMep, "N2Ex");
            target = new Exchange(ExchangeMic.Ndcm);
            Assert.AreEqual(oth, target.EuronextMep, "Ndcm");
            target = new Exchange(ExchangeMic.Noff);
            Assert.AreEqual(oth, target.EuronextMep, "Noff");
            target = new Exchange(ExchangeMic.Nuro);
            Assert.AreEqual(oth, target.EuronextMep, "Nuro");
            target = new Exchange(ExchangeMic.Nurd);
            Assert.AreEqual(oth, target.EuronextMep, "Nurd");
            target = new Exchange(ExchangeMic.Xnlx);
            Assert.AreEqual(oth, target.EuronextMep, "Xnlx");
            target = new Exchange(ExchangeMic.Nxeu);
            Assert.AreEqual(oth, target.EuronextMep, "Nxeu");
            target = new Exchange(ExchangeMic.Peel);
            Assert.AreEqual(oth, target.EuronextMep, "Peel");
            target = new Exchange(ExchangeMic.Xphx);
            Assert.AreEqual(oth, target.EuronextMep, "Xphx");
            target = new Exchange(ExchangeMic.Xrsp);
            Assert.AreEqual(oth, target.EuronextMep, "Xrsp");
            target = new Exchange(ExchangeMic.Pieu);
            Assert.AreEqual(oth, target.EuronextMep, "Pieu");
            target = new Exchange(ExchangeMic.Pirm);
            Assert.AreEqual(oth, target.EuronextMep, "Pirm");
            target = new Exchange(ExchangeMic.Qwix);
            Assert.AreEqual(oth, target.EuronextMep, "Qwix");
            target = new Exchange(ExchangeMic.Rbce);
            Assert.AreEqual(oth, target.EuronextMep, "Rbce");
            target = new Exchange(ExchangeMic.Rbsx);
            Assert.AreEqual(oth, target.EuronextMep, "Rbsx");
            target = new Exchange(ExchangeMic.Rtsl);
            Assert.AreEqual(oth, target.EuronextMep, "Rtsl");
            target = new Exchange(ExchangeMic.Secf);
            Assert.AreEqual(oth, target.EuronextMep, "Secf");
            target = new Exchange(ExchangeMic.Sgmx);
            Assert.AreEqual(oth, target.EuronextMep, "Sgmx");
            target = new Exchange(ExchangeMic.Shar);
            Assert.AreEqual(oth, target.EuronextMep, "Shar");
            target = new Exchange(ExchangeMic.Spec);
            Assert.AreEqual(oth, target.EuronextMep, "Spec");
            target = new Exchange(ExchangeMic.Sprz);
            Assert.AreEqual(oth, target.EuronextMep, "Sprz");
            target = new Exchange(ExchangeMic.Ssex);
            Assert.AreEqual(oth, target.EuronextMep, "Ssex");
            target = new Exchange(ExchangeMic.Swap);
            Assert.AreEqual(oth, target.EuronextMep, "Swap");
            target = new Exchange(ExchangeMic.Tfsv);
            Assert.AreEqual(oth, target.EuronextMep, "Tfsv");
            target = new Exchange(ExchangeMic.Tpie);
            Assert.AreEqual(oth, target.EuronextMep, "Tpie");
            target = new Exchange(ExchangeMic.Trde);
            Assert.AreEqual(oth, target.EuronextMep, "Trde");
            target = new Exchange(ExchangeMic.Dbvx);
            Assert.AreEqual(oth, target.EuronextMep, "Dbvx");
            target = new Exchange(ExchangeMic.Parx);
            Assert.AreEqual(oth, target.EuronextMep, "Parx");
            target = new Exchange(ExchangeMic.Tcds);
            Assert.AreEqual(oth, target.EuronextMep, "Tcds");
            target = new Exchange(ExchangeMic.Tfsg);
            Assert.AreEqual(oth, target.EuronextMep, "Tfsg");
            target = new Exchange(ExchangeMic.Trdx);
            Assert.AreEqual(oth, target.EuronextMep, "Trdx");
            target = new Exchange(ExchangeMic.Vola);
            Assert.AreEqual(oth, target.EuronextMep, "Vola");
            target = new Exchange(ExchangeMic.Treu);
            Assert.AreEqual(oth, target.EuronextMep, "Treu");
            target = new Exchange(ExchangeMic.Trqx);
            Assert.AreEqual(oth, target.EuronextMep, "Trqx");
            target = new Exchange(ExchangeMic.Trqm);
            Assert.AreEqual(oth, target.EuronextMep, "Trqm");
            target = new Exchange(ExchangeMic.Ubsl);
            Assert.AreEqual(oth, target.EuronextMep, "Ubsl");
            target = new Exchange(ExchangeMic.Ubse);
            Assert.AreEqual(oth, target.EuronextMep, "Ubse");
            target = new Exchange(ExchangeMic.Ukgd);
            Assert.AreEqual(oth, target.EuronextMep, "Ukgd");
            target = new Exchange(ExchangeMic.Ukpx);
            Assert.AreEqual(oth, target.EuronextMep, "Ukpx");
            target = new Exchange(ExchangeMic.Vega);
            Assert.AreEqual(oth, target.EuronextMep, "Vega");
            target = new Exchange(ExchangeMic.Wins);
            Assert.AreEqual(oth, target.EuronextMep, "Wins");
            target = new Exchange(ExchangeMic.Xalt);
            Assert.AreEqual(oth, target.EuronextMep, "Xalt");
            target = new Exchange(ExchangeMic.Xcor);
            Assert.AreEqual(oth, target.EuronextMep, "Xcor");
            target = new Exchange(ExchangeMic.Xgcl);
            Assert.AreEqual(oth, target.EuronextMep, "Xgcl");
            target = new Exchange(ExchangeMic.Xlbm);
            Assert.AreEqual(oth, target.EuronextMep, "Xlbm");
            target = new Exchange(ExchangeMic.Xlch);
            Assert.AreEqual(oth, target.EuronextMep, "Xlch");
            target = new Exchange(ExchangeMic.Xlme);
            Assert.AreEqual(oth, target.EuronextMep, "Xlme");
            target = new Exchange(ExchangeMic.Xlon);
            Assert.AreEqual(oth, target.EuronextMep, "Xlon");
            target = new Exchange(ExchangeMic.Xlod);
            Assert.AreEqual(oth, target.EuronextMep, "Xlod");
            target = new Exchange(ExchangeMic.Xmts);
            Assert.AreEqual(oth, target.EuronextMep, "Xmts");
            target = new Exchange(ExchangeMic.Amts);
            Assert.AreEqual(oth, target.EuronextMep, "Amts");
            target = new Exchange(ExchangeMic.Bvuk);
            Assert.AreEqual(oth, target.EuronextMep, "Bvuk");
            target = new Exchange(ExchangeMic.Eacm);
            Assert.AreEqual(oth, target.EuronextMep, "Eacm");
            target = new Exchange(ExchangeMic.Emts);
            Assert.AreEqual(oth, target.EuronextMep, "Emts");
            target = new Exchange(ExchangeMic.Gmts);
            Assert.AreEqual(oth, target.EuronextMep, "Gmts");
            target = new Exchange(ExchangeMic.Hung);
            Assert.AreEqual(oth, target.EuronextMep, "Hung");
            target = new Exchange(ExchangeMic.Imts);
            Assert.AreEqual(oth, target.EuronextMep, "Imts");
            target = new Exchange(ExchangeMic.Mczk);
            Assert.AreEqual(oth, target.EuronextMep, "Mczk");
            target = new Exchange(ExchangeMic.Mtsa);
            Assert.AreEqual(oth, target.EuronextMep, "Mtsa");
            target = new Exchange(ExchangeMic.Mtsg);
            Assert.AreEqual(oth, target.EuronextMep, "Mtsg");
            target = new Exchange(ExchangeMic.Mtss);
            Assert.AreEqual(oth, target.EuronextMep, "Mtss");
            target = new Exchange(ExchangeMic.Mtsw);
            Assert.AreEqual(oth, target.EuronextMep, "Mtsw");
            target = new Exchange(ExchangeMic.Port);
            Assert.AreEqual(oth, target.EuronextMep, "Port");
            target = new Exchange(ExchangeMic.Prme);
            Assert.AreEqual(oth, target.EuronextMep, "Prme");
            target = new Exchange(ExchangeMic.Rmts);
            Assert.AreEqual(oth, target.EuronextMep, "Rmts");
            target = new Exchange(ExchangeMic.Smts);
            Assert.AreEqual(oth, target.EuronextMep, "Smts");
            target = new Exchange(ExchangeMic.Vmts);
            Assert.AreEqual(oth, target.EuronextMep, "Vmts");
            target = new Exchange(ExchangeMic.Xsga);
            Assert.AreEqual(oth, target.EuronextMep, "Xsga");
            target = new Exchange(ExchangeMic.Xsmp);
            Assert.AreEqual(oth, target.EuronextMep, "Xsmp");
            target = new Exchange(ExchangeMic.Xswb);
            Assert.AreEqual(oth, target.EuronextMep, "Xswb");
            target = new Exchange(ExchangeMic.Xtup);
            Assert.AreEqual(oth, target.EuronextMep, "Xtup");
            target = new Exchange(ExchangeMic.Tben);
            Assert.AreEqual(oth, target.EuronextMep, "Tben");
            target = new Exchange(ExchangeMic.Tbla);
            Assert.AreEqual(oth, target.EuronextMep, "Tbla");
            target = new Exchange(ExchangeMic.Tpcd);
            Assert.AreEqual(oth, target.EuronextMep, "Tpcd");
            target = new Exchange(ExchangeMic.Tpeq);
            Assert.AreEqual(oth, target.EuronextMep, "Tpeq");
            target = new Exchange(ExchangeMic.Tpfd);
            Assert.AreEqual(oth, target.EuronextMep, "Tpfd");
            target = new Exchange(ExchangeMic.Tpre);
            Assert.AreEqual(oth, target.EuronextMep, "Tpre");
            target = new Exchange(ExchangeMic.Tpsd);
            Assert.AreEqual(oth, target.EuronextMep, "Tpsd");
            target = new Exchange(ExchangeMic.Tpsp);
            Assert.AreEqual(oth, target.EuronextMep, "Tpsp");
            target = new Exchange(ExchangeMic.Xtpe);
            Assert.AreEqual(oth, target.EuronextMep, "Xtpe");
            target = new Exchange(ExchangeMic.Xubs);
            Assert.AreEqual(oth, target.EuronextMep, "Xubs");
            target = new Exchange(ExchangeMic.Aats);
            Assert.AreEqual(oth, target.EuronextMep, "Aats");
            target = new Exchange(ExchangeMic.Aqua);
            Assert.AreEqual(oth, target.EuronextMep, "Aqua");
            target = new Exchange(ExchangeMic.Atdf);
            Assert.AreEqual(oth, target.EuronextMep, "Atdf");
            target = new Exchange(ExchangeMic.Core);
            Assert.AreEqual(oth, target.EuronextMep, "Core");
            target = new Exchange(ExchangeMic.Baml);
            Assert.AreEqual(oth, target.EuronextMep, "Baml");
            target = new Exchange(ExchangeMic.Mlco);
            Assert.AreEqual(oth, target.EuronextMep, "Mlco");
            target = new Exchange(ExchangeMic.Mlvx);
            Assert.AreEqual(oth, target.EuronextMep, "Mlvx");
            target = new Exchange(ExchangeMic.Barx);
            Assert.AreEqual(oth, target.EuronextMep, "Barx");
            target = new Exchange(ExchangeMic.Bard);
            Assert.AreEqual(oth, target.EuronextMep, "Bard");
            target = new Exchange(ExchangeMic.Barl);
            Assert.AreEqual(oth, target.EuronextMep, "Barl");
            target = new Exchange(ExchangeMic.Bcdx);
            Assert.AreEqual(oth, target.EuronextMep, "Bcdx");
            target = new Exchange(ExchangeMic.Bats);
            Assert.AreEqual(oth, target.EuronextMep, "Bats");
            target = new Exchange(ExchangeMic.Bato);
            Assert.AreEqual(oth, target.EuronextMep, "Bato");
            target = new Exchange(ExchangeMic.Baty);
            Assert.AreEqual(oth, target.EuronextMep, "Baty");
            target = new Exchange(ExchangeMic.Byxd);
            Assert.AreEqual(oth, target.EuronextMep, "Byxd");
            target = new Exchange(ExchangeMic.Bzxd);
            Assert.AreEqual(oth, target.EuronextMep, "Bzxd");
            target = new Exchange(ExchangeMic.Bbsf);
            Assert.AreEqual(oth, target.EuronextMep, "Bbsf");
            target = new Exchange(ExchangeMic.Bgcf);
            Assert.AreEqual(oth, target.EuronextMep, "Bgcf");
            target = new Exchange(ExchangeMic.Bgcd);
            Assert.AreEqual(oth, target.EuronextMep, "Bgcd");
            target = new Exchange(ExchangeMic.Bids);
            Assert.AreEqual(oth, target.EuronextMep, "Bids");
            target = new Exchange(ExchangeMic.Bltd);
            Assert.AreEqual(oth, target.EuronextMep, "Bltd");
            target = new Exchange(ExchangeMic.Bpol);
            Assert.AreEqual(oth, target.EuronextMep, "Bpol");
            target = new Exchange(ExchangeMic.Bndd);
            Assert.AreEqual(oth, target.EuronextMep, "Bndd");
            target = new Exchange(ExchangeMic.Bnyc);
            Assert.AreEqual(oth, target.EuronextMep, "Bnyc");
            target = new Exchange(ExchangeMic.Nyfx);
            Assert.AreEqual(oth, target.EuronextMep, "Nyfx");
            target = new Exchange(ExchangeMic.Vtex);
            Assert.AreEqual(oth, target.EuronextMep, "Vtex");
            target = new Exchange(ExchangeMic.Btec);
            Assert.AreEqual(oth, target.EuronextMep, "Btec");
            target = new Exchange(ExchangeMic.Icsu);
            Assert.AreEqual(oth, target.EuronextMep, "Icsu");
            target = new Exchange(ExchangeMic.Cded);
            Assert.AreEqual(oth, target.EuronextMep, "Cded");
            target = new Exchange(ExchangeMic.Cgmi);
            Assert.AreEqual(oth, target.EuronextMep, "Cgmi");
            target = new Exchange(ExchangeMic.Cblc);
            Assert.AreEqual(oth, target.EuronextMep, "Cblc");
            target = new Exchange(ExchangeMic.Cgmu);
            Assert.AreEqual(oth, target.EuronextMep, "Cgmu");
            target = new Exchange(ExchangeMic.Cicx);
            Assert.AreEqual(oth, target.EuronextMep, "Cicx");
            target = new Exchange(ExchangeMic.Lqfi);
            Assert.AreEqual(oth, target.EuronextMep, "Lqfi");
            target = new Exchange(ExchangeMic.Cmsf);
            Assert.AreEqual(oth, target.EuronextMep, "Cmsf");
            target = new Exchange(ExchangeMic.Cred);
            Assert.AreEqual(oth, target.EuronextMep, "Cred");
            target = new Exchange(ExchangeMic.Caes);
            Assert.AreEqual(oth, target.EuronextMep, "Caes");
            target = new Exchange(ExchangeMic.Cslp);
            Assert.AreEqual(oth, target.EuronextMep, "Cslp");
            target = new Exchange(ExchangeMic.Dbsx);
            Assert.AreEqual(oth, target.EuronextMep, "Dbsx");
            target = new Exchange(ExchangeMic.Deal);
            Assert.AreEqual(oth, target.EuronextMep, "Deal");
            target = new Exchange(ExchangeMic.Edge);
            Assert.AreEqual(oth, target.EuronextMep, "Edge");
            target = new Exchange(ExchangeMic.Eddp);
            Assert.AreEqual(oth, target.EuronextMep, "Eddp");
            target = new Exchange(ExchangeMic.Edga);
            Assert.AreEqual(oth, target.EuronextMep, "Edga");
            target = new Exchange(ExchangeMic.Edgd);
            Assert.AreEqual(oth, target.EuronextMep, "Edgd");
            target = new Exchange(ExchangeMic.Edgo);
            Assert.AreEqual(oth, target.EuronextMep, "Edgo");
            target = new Exchange(ExchangeMic.Edgx);
            Assert.AreEqual(oth, target.EuronextMep, "Edgx");
            target = new Exchange(ExchangeMic.Eris);
            Assert.AreEqual(oth, target.EuronextMep, "Eris");
            target = new Exchange(ExchangeMic.Fast);
            Assert.AreEqual(oth, target.EuronextMep, "Fast");
            target = new Exchange(ExchangeMic.Finr);
            Assert.AreEqual(oth, target.EuronextMep, "Finr");
            target = new Exchange(ExchangeMic.Finn);
            Assert.AreEqual(oth, target.EuronextMep, "Finn");
            target = new Exchange(ExchangeMic.Fino);
            Assert.AreEqual(oth, target.EuronextMep, "Fino");
            target = new Exchange(ExchangeMic.Finy);
            Assert.AreEqual(oth, target.EuronextMep, "Finy");
            target = new Exchange(ExchangeMic.Ootc);
            Assert.AreEqual(oth, target.EuronextMep, "Ootc");
            target = new Exchange(ExchangeMic.Xadf);
            Assert.AreEqual(oth, target.EuronextMep, "Xadf");
            target = new Exchange(ExchangeMic.Fxal);
            Assert.AreEqual(oth, target.EuronextMep, "Fxal");
            target = new Exchange(ExchangeMic.Fxcm);
            Assert.AreEqual(oth, target.EuronextMep, "Fxcm");
            target = new Exchange(ExchangeMic.G1xx);
            Assert.AreEqual(oth, target.EuronextMep, "G1xx");
            target = new Exchange(ExchangeMic.Gllc);
            Assert.AreEqual(oth, target.EuronextMep, "Gllc");
            target = new Exchange(ExchangeMic.Glps);
            Assert.AreEqual(oth, target.EuronextMep, "Glps");
            target = new Exchange(ExchangeMic.Govx);
            Assert.AreEqual(oth, target.EuronextMep, "Govx");
            target = new Exchange(ExchangeMic.Gree);
            Assert.AreEqual(oth, target.EuronextMep, "Gree");
            target = new Exchange(ExchangeMic.Gsef);
            Assert.AreEqual(oth, target.EuronextMep, "Gsef");
            target = new Exchange(ExchangeMic.Gtco);
            Assert.AreEqual(oth, target.EuronextMep, "Gtco");
            target = new Exchange(ExchangeMic.Hegx);
            Assert.AreEqual(oth, target.EuronextMep, "Hegx");
            target = new Exchange(ExchangeMic.Hppo);
            Assert.AreEqual(oth, target.EuronextMep, "Hppo");
            target = new Exchange(ExchangeMic.Hsfx);
            Assert.AreEqual(oth, target.EuronextMep, "Hsfx");
            target = new Exchange(ExchangeMic.Icel);
            Assert.AreEqual(oth, target.EuronextMep, "Icel");
            target = new Exchange(ExchangeMic.Iexg);
            Assert.AreEqual(oth, target.EuronextMep, "Iexg");
            target = new Exchange(ExchangeMic.Ifus);
            Assert.AreEqual(oth, target.EuronextMep, "Ifus");
            target = new Exchange(ExchangeMic.Ices);
            Assert.AreEqual(oth, target.EuronextMep, "Ices");
            target = new Exchange(ExchangeMic.Iepa);
            Assert.AreEqual(oth, target.EuronextMep, "Iepa");
            target = new Exchange(ExchangeMic.Ifed);
            Assert.AreEqual(oth, target.EuronextMep, "Ifed");
            target = new Exchange(ExchangeMic.Imag);
            Assert.AreEqual(oth, target.EuronextMep, "Imag");
            target = new Exchange(ExchangeMic.Imbd);
            Assert.AreEqual(oth, target.EuronextMep, "Imbd");
            target = new Exchange(ExchangeMic.Imcc);
            Assert.AreEqual(oth, target.EuronextMep, "Imcc");
            target = new Exchange(ExchangeMic.Imcg);
            Assert.AreEqual(oth, target.EuronextMep, "Imcg");
            target = new Exchange(ExchangeMic.Imco);
            Assert.AreEqual(oth, target.EuronextMep, "Imco");
            target = new Exchange(ExchangeMic.Imcr);
            Assert.AreEqual(oth, target.EuronextMep, "Imcr");
            target = new Exchange(ExchangeMic.Imen);
            Assert.AreEqual(oth, target.EuronextMep, "Imen");
            target = new Exchange(ExchangeMic.Imeq);
            Assert.AreEqual(oth, target.EuronextMep, "Imeq");
            target = new Exchange(ExchangeMic.Imfx);
            Assert.AreEqual(oth, target.EuronextMep, "Imfx");
            target = new Exchange(ExchangeMic.Imir);
            Assert.AreEqual(oth, target.EuronextMep, "Imir");
            target = new Exchange(ExchangeMic.Isda);
            Assert.AreEqual(oth, target.EuronextMep, "Isda");
            target = new Exchange(ExchangeMic.Itgi);
            Assert.AreEqual(oth, target.EuronextMep, "Itgi");
            target = new Exchange(ExchangeMic.Jefx);
            Assert.AreEqual(oth, target.EuronextMep, "Jefx");
            target = new Exchange(ExchangeMic.Jpmx);
            Assert.AreEqual(oth, target.EuronextMep, "Jpmx");
            target = new Exchange(ExchangeMic.Jsef);
            Assert.AreEqual(oth, target.EuronextMep, "Jsef");
            target = new Exchange(ExchangeMic.Jses);
            Assert.AreEqual(oth, target.EuronextMep, "Jses");
            target = new Exchange(ExchangeMic.Jsjx);
            Assert.AreEqual(oth, target.EuronextMep, "Jsjx");
            target = new Exchange(ExchangeMic.Knig);
            Assert.AreEqual(oth, target.EuronextMep, "Knig");
            target = new Exchange(ExchangeMic.Kncm);
            Assert.AreEqual(oth, target.EuronextMep, "Kncm");
            target = new Exchange(ExchangeMic.Knem);
            Assert.AreEqual(oth, target.EuronextMep, "Knem");
            target = new Exchange(ExchangeMic.Knli);
            Assert.AreEqual(oth, target.EuronextMep, "Knli");
            target = new Exchange(ExchangeMic.Knmx);
            Assert.AreEqual(oth, target.EuronextMep, "Knmx");
            target = new Exchange(ExchangeMic.Lasf);
            Assert.AreEqual(oth, target.EuronextMep, "Lasf");
            target = new Exchange(ExchangeMic.Levl);
            Assert.AreEqual(oth, target.EuronextMep, "Levl");
            target = new Exchange(ExchangeMic.Lius);
            Assert.AreEqual(oth, target.EuronextMep, "Lius");
            target = new Exchange(ExchangeMic.Lifi);
            Assert.AreEqual(oth, target.EuronextMep, "Lifi");
            target = new Exchange(ExchangeMic.Liuh);
            Assert.AreEqual(oth, target.EuronextMep, "Liuh");
            target = new Exchange(ExchangeMic.Lqed);
            Assert.AreEqual(oth, target.EuronextMep, "Lqed");
            target = new Exchange(ExchangeMic.Ltaa);
            Assert.AreEqual(oth, target.EuronextMep, "Ltaa");
            target = new Exchange(ExchangeMic.Lmnx);
            Assert.AreEqual(oth, target.EuronextMep, "Lmnx");
            target = new Exchange(ExchangeMic.Mihi);
            Assert.AreEqual(oth, target.EuronextMep, "Mihi");
            target = new Exchange(ExchangeMic.Mprl);
            Assert.AreEqual(oth, target.EuronextMep, "Mprl");
            target = new Exchange(ExchangeMic.Xmio);
            Assert.AreEqual(oth, target.EuronextMep, "Xmio");
            target = new Exchange(ExchangeMic.Msco);
            Assert.AreEqual(oth, target.EuronextMep, "Msco");
            target = new Exchange(ExchangeMic.Mslp);
            Assert.AreEqual(oth, target.EuronextMep, "Mslp");
            target = new Exchange(ExchangeMic.Mspl);
            Assert.AreEqual(oth, target.EuronextMep, "Mspl");
            target = new Exchange(ExchangeMic.Msrp);
            Assert.AreEqual(oth, target.EuronextMep, "Msrp");
            target = new Exchange(ExchangeMic.Mstx);
            Assert.AreEqual(oth, target.EuronextMep, "Mstx");
            target = new Exchange(ExchangeMic.Mtus);
            Assert.AreEqual(oth, target.EuronextMep, "Mtus");
            target = new Exchange(ExchangeMic.Bvus);
            Assert.AreEqual(oth, target.EuronextMep, "Bvus");
            target = new Exchange(ExchangeMic.Mtsb);
            Assert.AreEqual(oth, target.EuronextMep, "Mtsb");
            target = new Exchange(ExchangeMic.Mtxx);
            Assert.AreEqual(oth, target.EuronextMep, "Mtxx");
            target = new Exchange(ExchangeMic.Mtxa);
            Assert.AreEqual(oth, target.EuronextMep, "Mtxa");
            target = new Exchange(ExchangeMic.Mtxc);
            Assert.AreEqual(oth, target.EuronextMep, "Mtxc");
            target = new Exchange(ExchangeMic.Mtxm);
            Assert.AreEqual(oth, target.EuronextMep, "Mtxm");
            target = new Exchange(ExchangeMic.Mtxs);
            Assert.AreEqual(oth, target.EuronextMep, "Mtxs");
            target = new Exchange(ExchangeMic.Nblx);
            Assert.AreEqual(oth, target.EuronextMep, "Nblx");
            target = new Exchange(ExchangeMic.Nfsc);
            Assert.AreEqual(oth, target.EuronextMep, "Nfsc");
            target = new Exchange(ExchangeMic.Nfsa);
            Assert.AreEqual(oth, target.EuronextMep, "Nfsa");
            target = new Exchange(ExchangeMic.Nfsd);
            Assert.AreEqual(oth, target.EuronextMep, "Nfsd");
            target = new Exchange(ExchangeMic.Xstm);
            Assert.AreEqual(oth, target.EuronextMep, "Xstm");
            target = new Exchange(ExchangeMic.Nmra);
            Assert.AreEqual(oth, target.EuronextMep, "Nmra");
            target = new Exchange(ExchangeMic.Nodx);
            Assert.AreEqual(oth, target.EuronextMep, "Nodx");
            target = new Exchange(ExchangeMic.Nxus);
            Assert.AreEqual(oth, target.EuronextMep, "Nxus");
            target = new Exchange(ExchangeMic.Nypc);
            Assert.AreEqual(oth, target.EuronextMep, "Nypc");
            target = new Exchange(ExchangeMic.Ollc);
            Assert.AreEqual(oth, target.EuronextMep, "Ollc");
            target = new Exchange(ExchangeMic.Opra);
            Assert.AreEqual(oth, target.EuronextMep, "Opra");
            target = new Exchange(ExchangeMic.Otcm);
            Assert.AreEqual(oth, target.EuronextMep, "Otcm");
            target = new Exchange(ExchangeMic.Cave);
            Assert.AreEqual(oth, target.EuronextMep, "Cave");
            target = new Exchange(ExchangeMic.Otcb);
            Assert.AreEqual(oth, target.EuronextMep, "Otcb");
            target = new Exchange(ExchangeMic.Otcq);
            Assert.AreEqual(oth, target.EuronextMep, "Otcq");
            target = new Exchange(ExchangeMic.Pinc);
            Assert.AreEqual(oth, target.EuronextMep, "Pinc");
            target = new Exchange(ExchangeMic.Pini);
            Assert.AreEqual(oth, target.EuronextMep, "Pini");
            target = new Exchange(ExchangeMic.Pinl);
            Assert.AreEqual(oth, target.EuronextMep, "Pinl");
            target = new Exchange(ExchangeMic.Pinx);
            Assert.AreEqual(oth, target.EuronextMep, "Pinx");
            target = new Exchange(ExchangeMic.Psgm);
            Assert.AreEqual(oth, target.EuronextMep, "Psgm");
            target = new Exchange(ExchangeMic.Pdqx);
            Assert.AreEqual(oth, target.EuronextMep, "Pdqx");
            target = new Exchange(ExchangeMic.Pdqd);
            Assert.AreEqual(oth, target.EuronextMep, "Pdqd");
            target = new Exchange(ExchangeMic.Pipe);
            Assert.AreEqual(oth, target.EuronextMep, "Pipe");
            target = new Exchange(ExchangeMic.Prse);
            Assert.AreEqual(oth, target.EuronextMep, "Prse");
            target = new Exchange(ExchangeMic.Pulx);
            Assert.AreEqual(oth, target.EuronextMep, "Pulx");
            target = new Exchange(ExchangeMic.Ricx);
            Assert.AreEqual(oth, target.EuronextMep, "Ricx");
            target = new Exchange(ExchangeMic.Ricd);
            Assert.AreEqual(oth, target.EuronextMep, "Ricd");
            target = new Exchange(ExchangeMic.Sgma);
            Assert.AreEqual(oth, target.EuronextMep, "Sgma");
            target = new Exchange(ExchangeMic.Shaw);
            Assert.AreEqual(oth, target.EuronextMep, "Shaw");
            target = new Exchange(ExchangeMic.Shad);
            Assert.AreEqual(oth, target.EuronextMep, "Shad");
            target = new Exchange(ExchangeMic.Soho);
            Assert.AreEqual(oth, target.EuronextMep, "Soho");
            target = new Exchange(ExchangeMic.Sstx);
            Assert.AreEqual(oth, target.EuronextMep, "Sstx");
            target = new Exchange(ExchangeMic.Tera);
            Assert.AreEqual(oth, target.EuronextMep, "Tera");
            target = new Exchange(ExchangeMic.Tfsu);
            Assert.AreEqual(oth, target.EuronextMep, "Tfsu");
            target = new Exchange(ExchangeMic.Trck);
            Assert.AreEqual(oth, target.EuronextMep, "Trck");
            target = new Exchange(ExchangeMic.Trux);
            Assert.AreEqual(oth, target.EuronextMep, "Trux");
            target = new Exchange(ExchangeMic.Tru1);
            Assert.AreEqual(oth, target.EuronextMep, "Tru1");
            target = new Exchange(ExchangeMic.Tru2);
            Assert.AreEqual(oth, target.EuronextMep, "Tru2");
            target = new Exchange(ExchangeMic.Trwb);
            Assert.AreEqual(oth, target.EuronextMep, "Trwb");
            target = new Exchange(ExchangeMic.Dwsf);
            Assert.AreEqual(oth, target.EuronextMep, "Dwsf");
            target = new Exchange(ExchangeMic.Twsf);
            Assert.AreEqual(oth, target.EuronextMep, "Twsf");
            target = new Exchange(ExchangeMic.Tsbx);
            Assert.AreEqual(oth, target.EuronextMep, "Tsbx");
            target = new Exchange(ExchangeMic.Tsef);
            Assert.AreEqual(oth, target.EuronextMep, "Tsef");
            target = new Exchange(ExchangeMic.Ubsa);
            Assert.AreEqual(oth, target.EuronextMep, "Ubsa");
            target = new Exchange(ExchangeMic.Ubsp);
            Assert.AreEqual(oth, target.EuronextMep, "Ubsp");
            target = new Exchange(ExchangeMic.Welx);
            Assert.AreEqual(oth, target.EuronextMep, "Welx");
            target = new Exchange(ExchangeMic.Wsag);
            Assert.AreEqual(oth, target.EuronextMep, "Wsag");
            target = new Exchange(ExchangeMic.Xaqs);
            Assert.AreEqual(oth, target.EuronextMep, "Xaqs");
            target = new Exchange(ExchangeMic.Xbox);
            Assert.AreEqual(oth, target.EuronextMep, "Xbox");
            target = new Exchange(ExchangeMic.Xcbo);
            Assert.AreEqual(oth, target.EuronextMep, "Xcbo");
            target = new Exchange(ExchangeMic.C2Ox);
            Assert.AreEqual(oth, target.EuronextMep, "C2Ox");
            target = new Exchange(ExchangeMic.Cbsx);
            Assert.AreEqual(oth, target.EuronextMep, "Cbsx");
            target = new Exchange(ExchangeMic.Xcbf);
            Assert.AreEqual(oth, target.EuronextMep, "Xcbf");
            target = new Exchange(ExchangeMic.Xcbt);
            Assert.AreEqual(oth, target.EuronextMep, "Xcbt");
            target = new Exchange(ExchangeMic.Fcbt);
            Assert.AreEqual(oth, target.EuronextMep, "Fcbt");
            target = new Exchange(ExchangeMic.Xkbt);
            Assert.AreEqual(oth, target.EuronextMep, "Xkbt");
            target = new Exchange(ExchangeMic.Xcff);
            Assert.AreEqual(oth, target.EuronextMep, "Xcff");
            target = new Exchange(ExchangeMic.Xchi);
            Assert.AreEqual(oth, target.EuronextMep, "Xchi");
            target = new Exchange(ExchangeMic.Xcis);
            Assert.AreEqual(oth, target.EuronextMep, "Xcis");
            target = new Exchange(ExchangeMic.Xcme);
            Assert.AreEqual(oth, target.EuronextMep, "Xcme");
            target = new Exchange(ExchangeMic.Cbts);
            Assert.AreEqual(oth, target.EuronextMep, "Cbts");
            target = new Exchange(ExchangeMic.Cecs);
            Assert.AreEqual(oth, target.EuronextMep, "Cecs");
            target = new Exchange(ExchangeMic.Cmes);
            Assert.AreEqual(oth, target.EuronextMep, "Cmes");
            target = new Exchange(ExchangeMic.Fcme);
            Assert.AreEqual(oth, target.EuronextMep, "Fcme");
            target = new Exchange(ExchangeMic.Glbx);
            Assert.AreEqual(oth, target.EuronextMep, "Glbx");
            target = new Exchange(ExchangeMic.Nyms);
            Assert.AreEqual(oth, target.EuronextMep, "Nyms");
            target = new Exchange(ExchangeMic.Ximm);
            Assert.AreEqual(oth, target.EuronextMep, "Ximm");
            target = new Exchange(ExchangeMic.Xiom);
            Assert.AreEqual(oth, target.EuronextMep, "Xiom");
            target = new Exchange(ExchangeMic.Xcur);
            Assert.AreEqual(oth, target.EuronextMep, "Xcur");
            target = new Exchange(ExchangeMic.Xelx);
            Assert.AreEqual(oth, target.EuronextMep, "Xelx");
            target = new Exchange(ExchangeMic.Xfci);
            Assert.AreEqual(oth, target.EuronextMep, "Xfci");
            target = new Exchange(ExchangeMic.Xgmx);
            Assert.AreEqual(oth, target.EuronextMep, "Xgmx");
            target = new Exchange(ExchangeMic.Xins);
            Assert.AreEqual(oth, target.EuronextMep, "Xins");
            target = new Exchange(ExchangeMic.Iblx);
            Assert.AreEqual(oth, target.EuronextMep, "Iblx");
            target = new Exchange(ExchangeMic.Icbx);
            Assert.AreEqual(oth, target.EuronextMep, "Icbx");
            target = new Exchange(ExchangeMic.Icro);
            Assert.AreEqual(oth, target.EuronextMep, "Icro");
            target = new Exchange(ExchangeMic.Iidx);
            Assert.AreEqual(oth, target.EuronextMep, "Iidx");
            target = new Exchange(ExchangeMic.Mocx);
            Assert.AreEqual(oth, target.EuronextMep, "Mocx");
            target = new Exchange(ExchangeMic.Rcbx);
            Assert.AreEqual(oth, target.EuronextMep, "Rcbx");
            target = new Exchange(ExchangeMic.Xisx);
            Assert.AreEqual(oth, target.EuronextMep, "Xisx");
            target = new Exchange(ExchangeMic.Gmni);
            Assert.AreEqual(oth, target.EuronextMep, "Gmni");
            target = new Exchange(ExchangeMic.Mcry);
            Assert.AreEqual(oth, target.EuronextMep, "Mcry");
            target = new Exchange(ExchangeMic.Xisa);
            Assert.AreEqual(oth, target.EuronextMep, "Xisa");
            target = new Exchange(ExchangeMic.Xise);
            Assert.AreEqual(oth, target.EuronextMep, "Xise");
            target = new Exchange(ExchangeMic.Xmer);
            Assert.AreEqual(oth, target.EuronextMep, "Xmer");
            target = new Exchange(ExchangeMic.Xmge);
            Assert.AreEqual(oth, target.EuronextMep, "Xmge");
            target = new Exchange(ExchangeMic.Xnas);
            Assert.AreEqual(oth, target.EuronextMep, "Xnas");
            target = new Exchange(ExchangeMic.Bosd);
            Assert.AreEqual(oth, target.EuronextMep, "Bosd");
            target = new Exchange(ExchangeMic.Espd);
            Assert.AreEqual(oth, target.EuronextMep, "Espd");
            target = new Exchange(ExchangeMic.Nasd);
            Assert.AreEqual(oth, target.EuronextMep, "Nasd");
            target = new Exchange(ExchangeMic.Xbos);
            Assert.AreEqual(oth, target.EuronextMep, "Xbos");
            target = new Exchange(ExchangeMic.Xbrt);
            Assert.AreEqual(oth, target.EuronextMep, "Xbrt");
            target = new Exchange(ExchangeMic.Xbxo);
            Assert.AreEqual(oth, target.EuronextMep, "Xbxo");
            target = new Exchange(ExchangeMic.Xncm);
            Assert.AreEqual(oth, target.EuronextMep, "Xncm");
            target = new Exchange(ExchangeMic.Xndq);
            Assert.AreEqual(oth, target.EuronextMep, "Xndq");
            target = new Exchange(ExchangeMic.Xngs);
            Assert.AreEqual(oth, target.EuronextMep, "Xngs");
            target = new Exchange(ExchangeMic.Xnim);
            Assert.AreEqual(oth, target.EuronextMep, "Xnim");
            target = new Exchange(ExchangeMic.Xnms);
            Assert.AreEqual(oth, target.EuronextMep, "Xnms");
            target = new Exchange(ExchangeMic.Xpbt);
            Assert.AreEqual(oth, target.EuronextMep, "Xpbt");
            target = new Exchange(ExchangeMic.Xphl);
            Assert.AreEqual(oth, target.EuronextMep, "Xphl");
            target = new Exchange(ExchangeMic.Xpho);
            Assert.AreEqual(oth, target.EuronextMep, "Xpho");
            target = new Exchange(ExchangeMic.Xpor);
            Assert.AreEqual(oth, target.EuronextMep, "Xpor");
            target = new Exchange(ExchangeMic.Xpsx);
            Assert.AreEqual(oth, target.EuronextMep, "Xpsx");
            target = new Exchange(ExchangeMic.Xnym);
            Assert.AreEqual(oth, target.EuronextMep, "Xnym");
            target = new Exchange(ExchangeMic.Xcec);
            Assert.AreEqual(oth, target.EuronextMep, "Xcec");
            target = new Exchange(ExchangeMic.Xnye);
            Assert.AreEqual(oth, target.EuronextMep, "Xnye");
            target = new Exchange(ExchangeMic.Xnyl);
            Assert.AreEqual(oth, target.EuronextMep, "Xnyl");
            target = new Exchange(ExchangeMic.Xnys);
            Assert.AreEqual(oth, target.EuronextMep, "Xnys");
            target = new Exchange(ExchangeMic.Aldp);
            Assert.AreEqual(oth, target.EuronextMep, "Aldp");
            target = new Exchange(ExchangeMic.Amxo);
            Assert.AreEqual(oth, target.EuronextMep, "Amxo");
            target = new Exchange(ExchangeMic.Arcd);
            Assert.AreEqual(oth, target.EuronextMep, "Arcd");
            target = new Exchange(ExchangeMic.Arco);
            Assert.AreEqual(oth, target.EuronextMep, "Arco");
            target = new Exchange(ExchangeMic.Arcx);
            Assert.AreEqual(oth, target.EuronextMep, "Arcx");
            target = new Exchange(ExchangeMic.Nysd);
            Assert.AreEqual(oth, target.EuronextMep, "Nysd");
            target = new Exchange(ExchangeMic.Xase);
            Assert.AreEqual(oth, target.EuronextMep, "Xase");
            target = new Exchange(ExchangeMic.Xnli);
            Assert.AreEqual(oth, target.EuronextMep, "Xnli");
            target = new Exchange(ExchangeMic.Xoch);
            Assert.AreEqual(oth, target.EuronextMep, "Xoch");
            target = new Exchange(ExchangeMic.Xotc);
            Assert.AreEqual(oth, target.EuronextMep, "Xotc");
            target = new Exchange(ExchangeMic.Xsef);
            Assert.AreEqual(oth, target.EuronextMep, "Xsef");
            target = new Exchange(ExchangeMic.Xwee);
            Assert.AreEqual(oth, target.EuronextMep, "Xwee");
            target = new Exchange(ExchangeMic.Bvur);
            Assert.AreEqual(oth, target.EuronextMep, "Bvur");
            target = new Exchange(ExchangeMic.Xmnt);
            Assert.AreEqual(oth, target.EuronextMep, "Xmnt");
            target = new Exchange(ExchangeMic.Xcet);
            Assert.AreEqual(oth, target.EuronextMep, "Xcet");
            target = new Exchange(ExchangeMic.Xcue);
            Assert.AreEqual(oth, target.EuronextMep, "Xcue");
            target = new Exchange(ExchangeMic.Xkce);
            Assert.AreEqual(oth, target.EuronextMep, "Xkce");
            target = new Exchange(ExchangeMic.Xste);
            Assert.AreEqual(oth, target.EuronextMep, "Xste");
            target = new Exchange(ExchangeMic.Xuni);
            Assert.AreEqual(oth, target.EuronextMep, "Xuni");
            target = new Exchange(ExchangeMic.Gxma);
            Assert.AreEqual(oth, target.EuronextMep, "Gxma");
            target = new Exchange(ExchangeMic.Bvca);
            Assert.AreEqual(oth, target.EuronextMep, "Bvca");
            target = new Exchange(ExchangeMic.Hstc);
            Assert.AreEqual(oth, target.EuronextMep, "Hstc");
            target = new Exchange(ExchangeMic.Xhnx);
            Assert.AreEqual(oth, target.EuronextMep, "Xhnx");
            target = new Exchange(ExchangeMic.Xstc);
            Assert.AreEqual(oth, target.EuronextMep, "Xstc");
            target = new Exchange(ExchangeMic.Xlus);
            Assert.AreEqual(oth, target.EuronextMep, "Xlus");
            target = new Exchange(ExchangeMic.Xzim);
            Assert.AreEqual(oth, target.EuronextMep, "Xzim");
            target = new Exchange(ExchangeMic.Xoff);
            Assert.AreEqual(oth, target.EuronextMep, "Xoff");
            target = new Exchange(ExchangeMic.Xxxx);
            Assert.AreEqual(oth, target.EuronextMep, "Xxxx");
        }
        #endregion

        #region EuronextMepNumberTest
        /// <summary>
        /// A test for EuronextMepNumber.
        /// </summary>
        [TestMethod]
        public void EuronextMepNumberTest()
        {
            const int ams = 2;
            const int bru = 3;
            const int par = 1;
            const int lis = 5;
            const int oth = 6;

            var target = new Exchange(ExchangeMic.Xbru);
            Assert.AreEqual(bru, target.EuronextMepNumber, "Xbru");
            target = new Exchange(ExchangeMic.Alxb);
            Assert.AreEqual(bru, target.EuronextMepNumber, "Alxb");
            target = new Exchange(ExchangeMic.Enxb);
            Assert.AreEqual(bru, target.EuronextMepNumber, "Enxb");
            target = new Exchange(ExchangeMic.Mlxb);
            Assert.AreEqual(bru, target.EuronextMepNumber, "Mlxb");
            target = new Exchange(ExchangeMic.Tnlb);
            Assert.AreEqual(bru, target.EuronextMepNumber, "Tnlb");
            target = new Exchange(ExchangeMic.Vpxb);
            Assert.AreEqual(bru, target.EuronextMepNumber, "Vpxb");
            target = new Exchange(ExchangeMic.Xbrd);
            Assert.AreEqual(bru, target.EuronextMepNumber, "Xbrd");
            target = new Exchange(ExchangeMic.Xpar);
            Assert.AreEqual(par, target.EuronextMepNumber, "Xpar");
            target = new Exchange(ExchangeMic.Alxp);
            Assert.AreEqual(par, target.EuronextMepNumber, "Alxp");
            target = new Exchange(ExchangeMic.Xmat);
            Assert.AreEqual(par, target.EuronextMepNumber, "Xmat");
            target = new Exchange(ExchangeMic.Xmli);
            Assert.AreEqual(par, target.EuronextMepNumber, "Xmli");
            target = new Exchange(ExchangeMic.Xmon);
            Assert.AreEqual(par, target.EuronextMepNumber, "Xmon");
            target = new Exchange(ExchangeMic.Xlis);
            Assert.AreEqual(lis, target.EuronextMepNumber, "Xlis");
            target = new Exchange(ExchangeMic.Alxl);
            Assert.AreEqual(lis, target.EuronextMepNumber, "Alxl");
            target = new Exchange(ExchangeMic.Enxl);
            Assert.AreEqual(lis, target.EuronextMepNumber, "Enxl");
            target = new Exchange(ExchangeMic.Mfox);
            Assert.AreEqual(lis, target.EuronextMepNumber, "Mfox");
            target = new Exchange(ExchangeMic.Wqxl);
            Assert.AreEqual(lis, target.EuronextMepNumber, "Wqxl");
            target = new Exchange(ExchangeMic.Xams);
            Assert.AreEqual(ams, target.EuronextMepNumber, "Xams");
            target = new Exchange(ExchangeMic.Alxa);
            Assert.AreEqual(ams, target.EuronextMepNumber, "Alxa");
            target = new Exchange(ExchangeMic.Tnla);
            Assert.AreEqual(ams, target.EuronextMepNumber, "Tnla");
            target = new Exchange(ExchangeMic.Xeuc);
            Assert.AreEqual(ams, target.EuronextMepNumber, "Xeuc");
            target = new Exchange(ExchangeMic.Xeue);
            Assert.AreEqual(ams, target.EuronextMepNumber, "Xeue");
            target = new Exchange(ExchangeMic.Xeui);
            Assert.AreEqual(ams, target.EuronextMepNumber, "Xeui");
            target = new Exchange(ExchangeMic.Xldn);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xldn");
            target = new Exchange(ExchangeMic.Xtir);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtir");
            target = new Exchange(ExchangeMic.Xalg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xalg");
            target = new Exchange(ExchangeMic.Bace);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bace");
            target = new Exchange(ExchangeMic.Bcfs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bcfs");
            target = new Exchange(ExchangeMic.Xmvl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmvl");
            target = new Exchange(ExchangeMic.Rofx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rofx");
            target = new Exchange(ExchangeMic.Xbcc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbcc");
            target = new Exchange(ExchangeMic.Mvcx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mvcx");
            target = new Exchange(ExchangeMic.Xbcm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbcm");
            target = new Exchange(ExchangeMic.Xbcx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbcx");
            target = new Exchange(ExchangeMic.Xbue);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbue");
            target = new Exchange(ExchangeMic.Xmev);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmev");
            target = new Exchange(ExchangeMic.Xcnf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcnf");
            target = new Exchange(ExchangeMic.Xmab);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmab");
            target = new Exchange(ExchangeMic.Xmtb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmtb");
            target = new Exchange(ExchangeMic.Xros);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xros");
            target = new Exchange(ExchangeMic.Xrox);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xrox");
            target = new Exchange(ExchangeMic.Xtuc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtuc");
            target = new Exchange(ExchangeMic.Xarm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xarm");
            target = new Exchange(ExchangeMic.Apxl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Apxl");
            target = new Exchange(ExchangeMic.Awbx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Awbx");
            target = new Exchange(ExchangeMic.Awex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Awex");
            target = new Exchange(ExchangeMic.Blev);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Blev");
            target = new Exchange(ExchangeMic.Cgma);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgma");
            target = new Exchange(ExchangeMic.Chia);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Chia");
            target = new Exchange(ExchangeMic.Cxac);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cxac");
            target = new Exchange(ExchangeMic.Cxaf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cxaf");
            target = new Exchange(ExchangeMic.Cxam);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cxam");
            target = new Exchange(ExchangeMic.Cxan);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cxan");
            target = new Exchange(ExchangeMic.Cxap);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cxap");
            target = new Exchange(ExchangeMic.Cxav);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cxav");
            target = new Exchange(ExchangeMic.Cxaw);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cxaw");
            target = new Exchange(ExchangeMic.Clau);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Clau");
            target = new Exchange(ExchangeMic.Csau);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Csau");
            target = new Exchange(ExchangeMic.Cfau);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cfau");
            target = new Exchange(ExchangeMic.Maqx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Maqx");
            target = new Exchange(ExchangeMic.Msal);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Msal");
            target = new Exchange(ExchangeMic.Nsxb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nsxb");
            target = new Exchange(ExchangeMic.Siga);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Siga");
            target = new Exchange(ExchangeMic.Simv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Simv");
            target = new Exchange(ExchangeMic.Xasx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xasx");
            target = new Exchange(ExchangeMic.Asxb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Asxb");
            target = new Exchange(ExchangeMic.Asxc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Asxc");
            target = new Exchange(ExchangeMic.Asxp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Asxp");
            target = new Exchange(ExchangeMic.Asxt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Asxt");
            target = new Exchange(ExchangeMic.Asxv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Asxv");
            target = new Exchange(ExchangeMic.Xsfe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsfe");
            target = new Exchange(ExchangeMic.Xfex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xfex");
            target = new Exchange(ExchangeMic.Xnec);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnec");
            target = new Exchange(ExchangeMic.Xyie);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xyie");
            target = new Exchange(ExchangeMic.Exaa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Exaa");
            target = new Exchange(ExchangeMic.Xwbo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xwbo");
            target = new Exchange(ExchangeMic.Wbah);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wbah");
            target = new Exchange(ExchangeMic.Wbdm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wbdm");
            target = new Exchange(ExchangeMic.Wbgf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wbgf");
            target = new Exchange(ExchangeMic.Xceg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xceg");
            target = new Exchange(ExchangeMic.Xvie);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xvie");
            target = new Exchange(ExchangeMic.Bsex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bsex");
            target = new Exchange(ExchangeMic.Xibe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xibe");
            target = new Exchange(ExchangeMic.Xbaa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbaa");
            target = new Exchange(ExchangeMic.Bfex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bfex");
            target = new Exchange(ExchangeMic.Xbah);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbah");
            target = new Exchange(ExchangeMic.Xchg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xchg");
            target = new Exchange(ExchangeMic.Xdha);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdha");
            target = new Exchange(ExchangeMic.Xbab);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbab");
            target = new Exchange(ExchangeMic.Bajm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bajm");
            target = new Exchange(ExchangeMic.Bcse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bcse");
            target = new Exchange(ExchangeMic.Blpx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Blpx");
            target = new Exchange(ExchangeMic.Bmts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bmts");
            target = new Exchange(ExchangeMic.Mtsd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtsd");
            target = new Exchange(ExchangeMic.Mtsf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtsf");
            target = new Exchange(ExchangeMic.Xbda);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbda");
            target = new Exchange(ExchangeMic.Xbol);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbol");
            target = new Exchange(ExchangeMic.Xblb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xblb");
            target = new Exchange(ExchangeMic.Blbf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Blbf");
            target = new Exchange(ExchangeMic.Xsse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsse");
            target = new Exchange(ExchangeMic.Xbot);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbot");
            target = new Exchange(ExchangeMic.Bote);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bote");
            target = new Exchange(ExchangeMic.Botv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Botv");
            target = new Exchange(ExchangeMic.Bcmm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bcmm");
            target = new Exchange(ExchangeMic.Bovm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bovm");
            target = new Exchange(ExchangeMic.Brix);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Brix");
            target = new Exchange(ExchangeMic.Bvmf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bvmf");
            target = new Exchange(ExchangeMic.Ceti);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ceti");
            target = new Exchange(ExchangeMic.Selc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Selc");
            target = new Exchange(ExchangeMic.Ibex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ibex");
            target = new Exchange(ExchangeMic.Xbul);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbul");
            target = new Exchange(ExchangeMic.Xcsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcsx");
            target = new Exchange(ExchangeMic.Xdsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdsx");
            target = new Exchange(ExchangeMic.Canx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Canx");
            target = new Exchange(ExchangeMic.Chic);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Chic");
            target = new Exchange(ExchangeMic.Xcx2);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcx2");
            target = new Exchange(ExchangeMic.Cotc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cotc");
            target = new Exchange(ExchangeMic.Ifca);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ifca");
            target = new Exchange(ExchangeMic.Ivzx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ivzx");
            target = new Exchange(ExchangeMic.Lica);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lica");
            target = new Exchange(ExchangeMic.Matn);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Matn");
            target = new Exchange(ExchangeMic.Neoe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Neoe");
            target = new Exchange(ExchangeMic.Ngxc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ngxc");
            target = new Exchange(ExchangeMic.Omga);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Omga");
            target = new Exchange(ExchangeMic.Lynx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lynx");
            target = new Exchange(ExchangeMic.Tmxs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tmxs");
            target = new Exchange(ExchangeMic.Xats);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xats");
            target = new Exchange(ExchangeMic.Xbbk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbbk");
            target = new Exchange(ExchangeMic.Xcnq);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcnq");
            target = new Exchange(ExchangeMic.Pure);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pure");
            target = new Exchange(ExchangeMic.Xicx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xicx");
            target = new Exchange(ExchangeMic.Xmoc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmoc");
            target = new Exchange(ExchangeMic.Xmod);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmod");
            target = new Exchange(ExchangeMic.Xtse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtse");
            target = new Exchange(ExchangeMic.Xtsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtsx");
            target = new Exchange(ExchangeMic.Xtnx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtnx");
            target = new Exchange(ExchangeMic.Xbvc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbvc");
            target = new Exchange(ExchangeMic.Xcay);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcay");
            target = new Exchange(ExchangeMic.Bova);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bova");
            target = new Exchange(ExchangeMic.Xbcl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbcl");
            target = new Exchange(ExchangeMic.Xsgo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsgo");
            target = new Exchange(ExchangeMic.Ccfx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ccfx");
            target = new Exchange(ExchangeMic.Cssx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cssx");
            target = new Exchange(ExchangeMic.Sgex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sgex");
            target = new Exchange(ExchangeMic.Xcfe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcfe");
            target = new Exchange(ExchangeMic.Xdce);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdce");
            target = new Exchange(ExchangeMic.Xsge);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsge");
            target = new Exchange(ExchangeMic.Xine);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xine");
            target = new Exchange(ExchangeMic.Xshe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xshe");
            target = new Exchange(ExchangeMic.Xsec);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsec");
            target = new Exchange(ExchangeMic.Xshg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xshg");
            target = new Exchange(ExchangeMic.Xssc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xssc");
            target = new Exchange(ExchangeMic.Xzce);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xzce");
            target = new Exchange(ExchangeMic.Xbog);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbog");
            target = new Exchange(ExchangeMic.Xbnv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbnv");
            target = new Exchange(ExchangeMic.Xcro);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcro");
            target = new Exchange(ExchangeMic.Xtrz);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtrz");
            target = new Exchange(ExchangeMic.Xzag);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xzag");
            target = new Exchange(ExchangeMic.Xzam);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xzam");
            target = new Exchange(ExchangeMic.Dcsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dcsx");
            target = new Exchange(ExchangeMic.Xcys);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcys");
            target = new Exchange(ExchangeMic.Xcyo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcyo");
            target = new Exchange(ExchangeMic.Xecm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xecm");
            target = new Exchange(ExchangeMic.Xpra);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpra");
            target = new Exchange(ExchangeMic.Xprm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xprm");
            target = new Exchange(ExchangeMic.Xpxe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpxe");
            target = new Exchange(ExchangeMic.Xrmz);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xrmz");
            target = new Exchange(ExchangeMic.Xrmo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xrmo");
            target = new Exchange(ExchangeMic.Dktc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dktc");
            target = new Exchange(ExchangeMic.Gxgr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gxgr");
            target = new Exchange(ExchangeMic.Gxgf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gxgf");
            target = new Exchange(ExchangeMic.Gxgm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gxgm");
            target = new Exchange(ExchangeMic.Npga);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Npga");
            target = new Exchange(ExchangeMic.Xcse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcse");
            target = new Exchange(ExchangeMic.Dcse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dcse");
            target = new Exchange(ExchangeMic.Dndk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dndk");
            target = new Exchange(ExchangeMic.Fndk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fndk");
            target = new Exchange(ExchangeMic.Xbvr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbvr");
            target = new Exchange(ExchangeMic.Xgua);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgua");
            target = new Exchange(ExchangeMic.Xqui);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xqui");
            target = new Exchange(ExchangeMic.Nilx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nilx");
            target = new Exchange(ExchangeMic.Xcai);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcai");
            target = new Exchange(ExchangeMic.Xsva);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsva");
            target = new Exchange(ExchangeMic.Xtal);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtal");
            target = new Exchange(ExchangeMic.Fnee);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fnee");
            target = new Exchange(ExchangeMic.Vmfx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Vmfx");
            target = new Exchange(ExchangeMic.Xsps);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsps");
            target = new Exchange(ExchangeMic.Fgex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fgex");
            target = new Exchange(ExchangeMic.Xhel);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xhel");
            target = new Exchange(ExchangeMic.Dhel);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dhel");
            target = new Exchange(ExchangeMic.Dnfi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dnfi");
            target = new Exchange(ExchangeMic.Fnfi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fnfi");
            target = new Exchange(ExchangeMic.Coal);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Coal");
            target = new Exchange(ExchangeMic.Epex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Epex");
            target = new Exchange(ExchangeMic.Fmts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fmts");
            target = new Exchange(ExchangeMic.Gmtf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gmtf");
            target = new Exchange(ExchangeMic.Lchc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lchc");
            target = new Exchange(ExchangeMic.Xafr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xafr");
            target = new Exchange(ExchangeMic.Xbln);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbln");
            target = new Exchange(ExchangeMic.Mtch);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtch");
            target = new Exchange(ExchangeMic.Xpow);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpow");
            target = new Exchange(ExchangeMic.Xpsf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpsf");
            target = new Exchange(ExchangeMic.Xgse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgse");
            target = new Exchange(ExchangeMic.X360T);
            Assert.AreEqual(oth, target.EuronextMepNumber, "X360T");
            target = new Exchange(ExchangeMic.Cats);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cats");
            target = new Exchange(ExchangeMic.Dbox);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dbox");
            target = new Exchange(ExchangeMic.Auto);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Auto");
            target = new Exchange(ExchangeMic.Tgat);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tgat");
            target = new Exchange(ExchangeMic.Xgat);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgat");
            target = new Exchange(ExchangeMic.Xgrm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgrm");
            target = new Exchange(ExchangeMic.Xber);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xber");
            target = new Exchange(ExchangeMic.Bera);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bera");
            target = new Exchange(ExchangeMic.Berb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Berb");
            target = new Exchange(ExchangeMic.Berc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Berc");
            target = new Exchange(ExchangeMic.Eqta);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eqta");
            target = new Exchange(ExchangeMic.Eqtb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eqtb");
            target = new Exchange(ExchangeMic.Eqtc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eqtc");
            target = new Exchange(ExchangeMic.Eqtd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eqtd");
            target = new Exchange(ExchangeMic.Xeqt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeqt");
            target = new Exchange(ExchangeMic.Zobx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Zobx");
            target = new Exchange(ExchangeMic.Xdus);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdus");
            target = new Exchange(ExchangeMic.Dusa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dusa");
            target = new Exchange(ExchangeMic.Dusb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dusb");
            target = new Exchange(ExchangeMic.Dusc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dusc");
            target = new Exchange(ExchangeMic.Dusd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dusd");
            target = new Exchange(ExchangeMic.Xqtx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xqtx");
            target = new Exchange(ExchangeMic.Xecb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xecb");
            target = new Exchange(ExchangeMic.Xecc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xecc");
            target = new Exchange(ExchangeMic.Xeee);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeee");
            target = new Exchange(ExchangeMic.Xeeo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeeo");
            target = new Exchange(ExchangeMic.Xeer);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeer");
            target = new Exchange(ExchangeMic.Xeum);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeum");
            target = new Exchange(ExchangeMic.Xeur);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeur");
            target = new Exchange(ExchangeMic.Ecag);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ecag");
            target = new Exchange(ExchangeMic.Xere);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xere");
            target = new Exchange(ExchangeMic.Xert);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xert");
            target = new Exchange(ExchangeMic.Xeub);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeub");
            target = new Exchange(ExchangeMic.Xeup);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeup");
            target = new Exchange(ExchangeMic.Xfra);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xfra");
            target = new Exchange(ExchangeMic.Fraa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fraa");
            target = new Exchange(ExchangeMic.Frab);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Frab");
            target = new Exchange(ExchangeMic.Frad);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Frad");
            target = new Exchange(ExchangeMic.Xdbc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdbc");
            target = new Exchange(ExchangeMic.Xdbv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdbv");
            target = new Exchange(ExchangeMic.Xdbx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdbx");
            target = new Exchange(ExchangeMic.Xeta);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeta");
            target = new Exchange(ExchangeMic.Xetb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xetb");
            target = new Exchange(ExchangeMic.Xetr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xetr");
            target = new Exchange(ExchangeMic.Xnew);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnew");
            target = new Exchange(ExchangeMic.Xham);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xham");
            target = new Exchange(ExchangeMic.Hama);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hama");
            target = new Exchange(ExchangeMic.Hamb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hamb");
            target = new Exchange(ExchangeMic.Xhan);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xhan");
            target = new Exchange(ExchangeMic.Hana);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hana");
            target = new Exchange(ExchangeMic.Hanb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hanb");
            target = new Exchange(ExchangeMic.Xinv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xinv");
            target = new Exchange(ExchangeMic.Xmun);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmun");
            target = new Exchange(ExchangeMic.Muna);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Muna");
            target = new Exchange(ExchangeMic.Munb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Munb");
            target = new Exchange(ExchangeMic.Munc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Munc");
            target = new Exchange(ExchangeMic.Mund);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mund");
            target = new Exchange(ExchangeMic.Xsco);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsco");
            target = new Exchange(ExchangeMic.Xsc1);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsc1");
            target = new Exchange(ExchangeMic.Xsc2);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsc2");
            target = new Exchange(ExchangeMic.Xsc3);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsc3");
            target = new Exchange(ExchangeMic.Xstu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xstu");
            target = new Exchange(ExchangeMic.Euwx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Euwx");
            target = new Exchange(ExchangeMic.Stua);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Stua");
            target = new Exchange(ExchangeMic.Stub);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Stub");
            target = new Exchange(ExchangeMic.Xxsc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xxsc");
            target = new Exchange(ExchangeMic.Xgha);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgha");
            target = new Exchange(ExchangeMic.Gsxl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gsxl");
            target = new Exchange(ExchangeMic.Asex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Asex");
            target = new Exchange(ExchangeMic.Enax);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Enax");
            target = new Exchange(ExchangeMic.Euax);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Euax");
            target = new Exchange(ExchangeMic.Hotc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hotc");
            target = new Exchange(ExchangeMic.Xade);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xade");
            target = new Exchange(ExchangeMic.Xath);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xath");
            target = new Exchange(ExchangeMic.Xipo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xipo");
            target = new Exchange(ExchangeMic.Hdat);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hdat");
            target = new Exchange(ExchangeMic.Hemo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hemo");
            target = new Exchange(ExchangeMic.Xgtg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgtg");
            target = new Exchange(ExchangeMic.Xcie);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcie");
            target = new Exchange(ExchangeMic.Gsci);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gsci");
            target = new Exchange(ExchangeMic.Xbcv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbcv");
            target = new Exchange(ExchangeMic.Cgmh);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgmh");
            target = new Exchange(ExchangeMic.Clhk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Clhk");
            target = new Exchange(ExchangeMic.Cshk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cshk");
            target = new Exchange(ExchangeMic.Cfhk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cfhk");
            target = new Exchange(ExchangeMic.Dbhk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dbhk");
            target = new Exchange(ExchangeMic.Eotc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eotc");
            target = new Exchange(ExchangeMic.Hsxa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hsxa");
            target = new Exchange(ExchangeMic.Maqh);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Maqh");
            target = new Exchange(ExchangeMic.Sigh);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sigh");
            target = new Exchange(ExchangeMic.Tocp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tocp");
            target = new Exchange(ExchangeMic.Ubsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ubsx");
            target = new Exchange(ExchangeMic.Xcgs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcgs");
            target = new Exchange(ExchangeMic.Xhkf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xhkf");
            target = new Exchange(ExchangeMic.Xhkg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xhkg");
            target = new Exchange(ExchangeMic.Shsc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Shsc");
            target = new Exchange(ExchangeMic.Xgem);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgem");
            target = new Exchange(ExchangeMic.Xihk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xihk");
            target = new Exchange(ExchangeMic.Xpst);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpst");
            target = new Exchange(ExchangeMic.Beta);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Beta");
            target = new Exchange(ExchangeMic.Hupx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hupx");
            target = new Exchange(ExchangeMic.Kccp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Kccp");
            target = new Exchange(ExchangeMic.Xbud);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbud");
            target = new Exchange(ExchangeMic.Xgas);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgas");
            target = new Exchange(ExchangeMic.Xice);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xice");
            target = new Exchange(ExchangeMic.Dice);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dice");
            target = new Exchange(ExchangeMic.Dnis);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dnis");
            target = new Exchange(ExchangeMic.Fnis);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fnis");
            target = new Exchange(ExchangeMic.Acex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Acex");
            target = new Exchange(ExchangeMic.Cdsl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cdsl");
            target = new Exchange(ExchangeMic.Icxl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icxl");
            target = new Exchange(ExchangeMic.Isex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Isex");
            target = new Exchange(ExchangeMic.Mcxx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mcxx");
            target = new Exchange(ExchangeMic.Nbot);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nbot");
            target = new Exchange(ExchangeMic.Nmce);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nmce");
            target = new Exchange(ExchangeMic.Otcx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Otcx");
            target = new Exchange(ExchangeMic.Pxil);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pxil");
            target = new Exchange(ExchangeMic.Xban);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xban");
            target = new Exchange(ExchangeMic.Xbom);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbom");
            target = new Exchange(ExchangeMic.Bsme);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bsme");
            target = new Exchange(ExchangeMic.Xcal);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcal");
            target = new Exchange(ExchangeMic.Xdes);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdes");
            target = new Exchange(ExchangeMic.Ximc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ximc");
            target = new Exchange(ExchangeMic.Xmds);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmds");
            target = new Exchange(ExchangeMic.Xncd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xncd");
            target = new Exchange(ExchangeMic.Xnse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnse");
            target = new Exchange(ExchangeMic.Xuse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xuse");
            target = new Exchange(ExchangeMic.Icdx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icdx");
            target = new Exchange(ExchangeMic.Xbbj);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbbj");
            target = new Exchange(ExchangeMic.Xidx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xidx");
            target = new Exchange(ExchangeMic.Xjnb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xjnb");
            target = new Exchange(ExchangeMic.Imex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imex");
            target = new Exchange(ExchangeMic.Xteh);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xteh");
            target = new Exchange(ExchangeMic.Xiqs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xiqs");
            target = new Exchange(ExchangeMic.Xpos);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpos");
            target = new Exchange(ExchangeMic.Xcde);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcde");
            target = new Exchange(ExchangeMic.Xdub);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdub");
            target = new Exchange(ExchangeMic.Xatl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xatl");
            target = new Exchange(ExchangeMic.Xesm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xesm");
            target = new Exchange(ExchangeMic.Xeye);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeye");
            target = new Exchange(ExchangeMic.Xmsm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmsm");
            target = new Exchange(ExchangeMic.Xebi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xebi");
            target = new Exchange(ExchangeMic.Xtae);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtae");
            target = new Exchange(ExchangeMic.Cgit);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgit");
            target = new Exchange(ExchangeMic.Cgcm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgcm");
            target = new Exchange(ExchangeMic.Cgdb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgdb");
            target = new Exchange(ExchangeMic.Cgeb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgeb");
            target = new Exchange(ExchangeMic.Cggd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cggd");
            target = new Exchange(ExchangeMic.Cgnd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgnd");
            target = new Exchange(ExchangeMic.Cgqd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgqd");
            target = new Exchange(ExchangeMic.Cgqt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgqt");
            target = new Exchange(ExchangeMic.Cgtr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgtr");
            target = new Exchange(ExchangeMic.Emid);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Emid");
            target = new Exchange(ExchangeMic.Emdr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Emdr");
            target = new Exchange(ExchangeMic.Emir);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Emir");
            target = new Exchange(ExchangeMic.Etlx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Etlx");
            target = new Exchange(ExchangeMic.Hmtf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hmtf");
            target = new Exchange(ExchangeMic.Hmod);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hmod");
            target = new Exchange(ExchangeMic.Mtsc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtsc");
            target = new Exchange(ExchangeMic.Bond);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bond");
            target = new Exchange(ExchangeMic.Mtsm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtsm");
            target = new Exchange(ExchangeMic.Ssob);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ssob");
            target = new Exchange(ExchangeMic.Xgme);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgme");
            target = new Exchange(ExchangeMic.Xmil);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmil");
            target = new Exchange(ExchangeMic.Etfp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Etfp");
            target = new Exchange(ExchangeMic.Mivx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mivx");
            target = new Exchange(ExchangeMic.Motx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Motx");
            target = new Exchange(ExchangeMic.Mtaa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtaa");
            target = new Exchange(ExchangeMic.Mtah);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtah");
            target = new Exchange(ExchangeMic.Sedx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sedx");
            target = new Exchange(ExchangeMic.Xaim);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xaim");
            target = new Exchange(ExchangeMic.Xdmi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdmi");
            target = new Exchange(ExchangeMic.Xmot);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmot");
            target = new Exchange(ExchangeMic.Xbrv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbrv");
            target = new Exchange(ExchangeMic.Xjam);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xjam");
            target = new Exchange(ExchangeMic.Betp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Betp");
            target = new Exchange(ExchangeMic.Chij);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Chij");
            target = new Exchange(ExchangeMic.Chis);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Chis");
            target = new Exchange(ExchangeMic.Chiv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Chiv");
            target = new Exchange(ExchangeMic.Citx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Citx");
            target = new Exchange(ExchangeMic.Citd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Citd");
            target = new Exchange(ExchangeMic.Cljp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cljp");
            target = new Exchange(ExchangeMic.Cmet);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cmet");
            target = new Exchange(ExchangeMic.Csjp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Csjp");
            target = new Exchange(ExchangeMic.Cfjp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cfjp");
            target = new Exchange(ExchangeMic.Drct);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Drct");
            target = new Exchange(ExchangeMic.Lxjp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lxjp");
            target = new Exchange(ExchangeMic.Maqj);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Maqj");
            target = new Exchange(ExchangeMic.Mizx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mizx");
            target = new Exchange(ExchangeMic.Msms);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Msms");
            target = new Exchange(ExchangeMic.Nmrj);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nmrj");
            target = new Exchange(ExchangeMic.Nxjp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nxjp");
            target = new Exchange(ExchangeMic.Nxse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nxse");
            target = new Exchange(ExchangeMic.Nxvw);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nxvw");
            target = new Exchange(ExchangeMic.Sbij);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sbij");
            target = new Exchange(ExchangeMic.Sbiu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sbiu");
            target = new Exchange(ExchangeMic.Sbiv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sbiv");
            target = new Exchange(ExchangeMic.Xsbi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsbi");
            target = new Exchange(ExchangeMic.Sigj);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sigj");
            target = new Exchange(ExchangeMic.Xfka);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xfka");
            target = new Exchange(ExchangeMic.Xijp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xijp");
            target = new Exchange(ExchangeMic.Jasr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Jasr");
            target = new Exchange(ExchangeMic.Xjpx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xjpx");
            target = new Exchange(ExchangeMic.Xjas);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xjas");
            target = new Exchange(ExchangeMic.Xose);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xose");
            target = new Exchange(ExchangeMic.Xosj);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xosj");
            target = new Exchange(ExchangeMic.Xtam);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtam");
            target = new Exchange(ExchangeMic.Xtk1);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtk1");
            target = new Exchange(ExchangeMic.Xtk2);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtk2");
            target = new Exchange(ExchangeMic.Xtk3);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtk3");
            target = new Exchange(ExchangeMic.Xtks);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtks");
            target = new Exchange(ExchangeMic.Xkac);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkac");
            target = new Exchange(ExchangeMic.Xngo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xngo");
            target = new Exchange(ExchangeMic.Xnks);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnks");
            target = new Exchange(ExchangeMic.Xsap);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsap");
            target = new Exchange(ExchangeMic.Xtff);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtff");
            target = new Exchange(ExchangeMic.Xtkt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtkt");
            target = new Exchange(ExchangeMic.Xamm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xamm");
            target = new Exchange(ExchangeMic.Etsc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Etsc");
            target = new Exchange(ExchangeMic.Xkaz);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkaz");
            target = new Exchange(ExchangeMic.Xnai);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnai");
            target = new Exchange(ExchangeMic.Xkfb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkfb");
            target = new Exchange(ExchangeMic.Xkrx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkrx");
            target = new Exchange(ExchangeMic.Xkcm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkcm");
            target = new Exchange(ExchangeMic.Xkem);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkem");
            target = new Exchange(ExchangeMic.Xkfe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkfe");
            target = new Exchange(ExchangeMic.Xkon);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkon");
            target = new Exchange(ExchangeMic.Xkos);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkos");
            target = new Exchange(ExchangeMic.Xkuw);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkuw");
            target = new Exchange(ExchangeMic.Xkse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkse");
            target = new Exchange(ExchangeMic.Xlao);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlao");
            target = new Exchange(ExchangeMic.Xris);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xris");
            target = new Exchange(ExchangeMic.Fnlv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fnlv");
            target = new Exchange(ExchangeMic.Xbey);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbey");
            target = new Exchange(ExchangeMic.Xlsm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlsm");
            target = new Exchange(ExchangeMic.Bapx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bapx");
            target = new Exchange(ExchangeMic.Getb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Getb");
            target = new Exchange(ExchangeMic.Xlit);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlit");
            target = new Exchange(ExchangeMic.Fnlt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fnlt");
            target = new Exchange(ExchangeMic.Cclx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cclx");
            target = new Exchange(ExchangeMic.Xlux);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlux");
            target = new Exchange(ExchangeMic.Emtf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Emtf");
            target = new Exchange(ExchangeMic.Xves);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xves");
            target = new Exchange(ExchangeMic.Xmae);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmae");
            target = new Exchange(ExchangeMic.Xmdg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmdg");
            target = new Exchange(ExchangeMic.Xmsw);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmsw");
            target = new Exchange(ExchangeMic.Xkls);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkls");
            target = new Exchange(ExchangeMic.Mesq);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mesq");
            target = new Exchange(ExchangeMic.Xlfx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlfx");
            target = new Exchange(ExchangeMic.Xrbm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xrbm");
            target = new Exchange(ExchangeMic.Malx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Malx");
            target = new Exchange(ExchangeMic.Ewsm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ewsm");
            target = new Exchange(ExchangeMic.Xmal);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmal");
            target = new Exchange(ExchangeMic.Gbot);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gbot");
            target = new Exchange(ExchangeMic.Xafx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xafx");
            target = new Exchange(ExchangeMic.Xmau);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmau");
            target = new Exchange(ExchangeMic.Cgmx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgmx");
            target = new Exchange(ExchangeMic.Xemd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xemd");
            target = new Exchange(ExchangeMic.Xmex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmex");
            target = new Exchange(ExchangeMic.Xmol);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmol");
            target = new Exchange(ExchangeMic.Xula);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xula");
            target = new Exchange(ExchangeMic.Xmnx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmnx");
            target = new Exchange(ExchangeMic.Xcas);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcas");
            target = new Exchange(ExchangeMic.Xbvm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbvm");
            target = new Exchange(ExchangeMic.Xnam);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnam");
            target = new Exchange(ExchangeMic.Xnep);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnep");
            target = new Exchange(ExchangeMic.Nzfx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nzfx");
            target = new Exchange(ExchangeMic.Xnze);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnze");
            target = new Exchange(ExchangeMic.Xman);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xman");
            target = new Exchange(ExchangeMic.Nasx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nasx");
            target = new Exchange(ExchangeMic.Xnsa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnsa");
            target = new Exchange(ExchangeMic.Fish);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fish");
            target = new Exchange(ExchangeMic.Fshx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fshx");
            target = new Exchange(ExchangeMic.Icas);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icas");
            target = new Exchange(ExchangeMic.Nexo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nexo");
            target = new Exchange(ExchangeMic.Nops);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nops");
            target = new Exchange(ExchangeMic.Norx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Norx");
            target = new Exchange(ExchangeMic.Nosc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nosc");
            target = new Exchange(ExchangeMic.Notc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Notc");
            target = new Exchange(ExchangeMic.Oslc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Oslc");
            target = new Exchange(ExchangeMic.Xima);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xima");
            target = new Exchange(ExchangeMic.Xosl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xosl");
            target = new Exchange(ExchangeMic.Merd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Merd");
            target = new Exchange(ExchangeMic.Merk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Merk");
            target = new Exchange(ExchangeMic.Nibr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nibr");
            target = new Exchange(ExchangeMic.Xoad);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xoad");
            target = new Exchange(ExchangeMic.Xoam);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xoam");
            target = new Exchange(ExchangeMic.Xoas);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xoas");
            target = new Exchange(ExchangeMic.Xosc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xosc");
            target = new Exchange(ExchangeMic.Xosd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xosd");
            target = new Exchange(ExchangeMic.Xmus);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmus");
            target = new Exchange(ExchangeMic.Ncel);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ncel");
            target = new Exchange(ExchangeMic.Xisl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xisl");
            target = new Exchange(ExchangeMic.Xkar);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkar");
            target = new Exchange(ExchangeMic.Xlah);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlah");
            target = new Exchange(ExchangeMic.Xpae);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpae");
            target = new Exchange(ExchangeMic.Xpty);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpty");
            target = new Exchange(ExchangeMic.Xpom);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpom");
            target = new Exchange(ExchangeMic.Xvpa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xvpa");
            target = new Exchange(ExchangeMic.Xlim);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlim");
            target = new Exchange(ExchangeMic.Clph);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Clph");
            target = new Exchange(ExchangeMic.Pdex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pdex");
            target = new Exchange(ExchangeMic.Xphs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xphs");
            target = new Exchange(ExchangeMic.Kdpw);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Kdpw");
            target = new Exchange(ExchangeMic.Xwar);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xwar");
            target = new Exchange(ExchangeMic.Bosp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bosp");
            target = new Exchange(ExchangeMic.Plpd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Plpd");
            target = new Exchange(ExchangeMic.Plpx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Plpx");
            target = new Exchange(ExchangeMic.Rpwc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rpwc");
            target = new Exchange(ExchangeMic.Tbsp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tbsp");
            target = new Exchange(ExchangeMic.Wbcl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wbcl");
            target = new Exchange(ExchangeMic.Wbon);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wbon");
            target = new Exchange(ExchangeMic.Wder);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wder");
            target = new Exchange(ExchangeMic.Wetp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wetp");
            target = new Exchange(ExchangeMic.Wgas);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wgas");
            target = new Exchange(ExchangeMic.Wind);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wind");
            target = new Exchange(ExchangeMic.Wmtf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wmtf");
            target = new Exchange(ExchangeMic.Xnco);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnco");
            target = new Exchange(ExchangeMic.Omic);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Omic");
            target = new Exchange(ExchangeMic.Opex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Opex");
            target = new Exchange(ExchangeMic.Omip);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Omip");
            target = new Exchange(ExchangeMic.Dsmd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dsmd");
            target = new Exchange(ExchangeMic.Trpx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Trpx");
            target = new Exchange(ExchangeMic.Bmfx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bmfx");
            target = new Exchange(ExchangeMic.Bmfa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bmfa");
            target = new Exchange(ExchangeMic.Bmfm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bmfm");
            target = new Exchange(ExchangeMic.Sbmf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sbmf");
            target = new Exchange(ExchangeMic.Xbrm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbrm");
            target = new Exchange(ExchangeMic.Xbse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbse");
            target = new Exchange(ExchangeMic.Xbsd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbsd");
            target = new Exchange(ExchangeMic.Xcan);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcan");
            target = new Exchange(ExchangeMic.Xras);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xras");
            target = new Exchange(ExchangeMic.Xrpm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xrpm");
            target = new Exchange(ExchangeMic.Misx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Misx");
            target = new Exchange(ExchangeMic.Rtsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rtsx");
            target = new Exchange(ExchangeMic.Namx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Namx");
            target = new Exchange(ExchangeMic.Rpdx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rpdx");
            target = new Exchange(ExchangeMic.Rusx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rusx");
            target = new Exchange(ExchangeMic.Spim);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Spim");
            target = new Exchange(ExchangeMic.Xmos);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmos");
            target = new Exchange(ExchangeMic.Xpet);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpet");
            target = new Exchange(ExchangeMic.Xpic);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpic");
            target = new Exchange(ExchangeMic.Xrus);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xrus");
            target = new Exchange(ExchangeMic.Xsam);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsam");
            target = new Exchange(ExchangeMic.Xsib);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsib");
            target = new Exchange(ExchangeMic.Rotc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rotc");
            target = new Exchange(ExchangeMic.Rsex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rsex");
            target = new Exchange(ExchangeMic.Xecs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xecs");
            target = new Exchange(ExchangeMic.Xsau);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsau");
            target = new Exchange(ExchangeMic.Xbel);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbel");
            target = new Exchange(ExchangeMic.Cltd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cltd");
            target = new Exchange(ExchangeMic.Ecal);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ecal");
            target = new Exchange(ExchangeMic.Eeal);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eeal");
            target = new Exchange(ExchangeMic.Ifsg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ifsg");
            target = new Exchange(ExchangeMic.Jadx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Jadx");
            target = new Exchange(ExchangeMic.Smex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Smex");
            target = new Exchange(ExchangeMic.Tfsa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tfsa");
            target = new Exchange(ExchangeMic.Xses);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xses");
            target = new Exchange(ExchangeMic.Xsca);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsca");
            target = new Exchange(ExchangeMic.Xsce);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsce");
            target = new Exchange(ExchangeMic.Xsim);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsim");
            target = new Exchange(ExchangeMic.Spxe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Spxe");
            target = new Exchange(ExchangeMic.Xbra);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbra");
            target = new Exchange(ExchangeMic.Xlju);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlju");
            target = new Exchange(ExchangeMic.Xsop);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsop");
            target = new Exchange(ExchangeMic.Xjse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xjse");
            target = new Exchange(ExchangeMic.Altx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Altx");
            target = new Exchange(ExchangeMic.Xbes);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbes");
            target = new Exchange(ExchangeMic.Xsaf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsaf");
            target = new Exchange(ExchangeMic.Xsfa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsfa");
            target = new Exchange(ExchangeMic.Yldx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Yldx");
            target = new Exchange(ExchangeMic.Bmex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bmex");
            target = new Exchange(ExchangeMic.Bmcl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bmcl");
            target = new Exchange(ExchangeMic.Mabx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mabx");
            target = new Exchange(ExchangeMic.Marf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Marf");
            target = new Exchange(ExchangeMic.Merf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Merf");
            target = new Exchange(ExchangeMic.Send);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Send");
            target = new Exchange(ExchangeMic.Xbar);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbar");
            target = new Exchange(ExchangeMic.Xbil);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbil");
            target = new Exchange(ExchangeMic.Xdrf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdrf");
            target = new Exchange(ExchangeMic.Xlat);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlat");
            target = new Exchange(ExchangeMic.Xmad);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmad");
            target = new Exchange(ExchangeMic.Xmce);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmce");
            target = new Exchange(ExchangeMic.Xmpw);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmpw");
            target = new Exchange(ExchangeMic.Xmrv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmrv");
            target = new Exchange(ExchangeMic.Xval);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xval");
            target = new Exchange(ExchangeMic.Ibgh);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ibgh");
            target = new Exchange(ExchangeMic.Mibg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mibg");
            target = new Exchange(ExchangeMic.Omel);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Omel");
            target = new Exchange(ExchangeMic.Pave);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pave");
            target = new Exchange(ExchangeMic.Xdpa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdpa");
            target = new Exchange(ExchangeMic.Xnaf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnaf");
            target = new Exchange(ExchangeMic.Xsrm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsrm");
            target = new Exchange(ExchangeMic.Xcol);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcol");
            target = new Exchange(ExchangeMic.Xkha);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkha");
            target = new Exchange(ExchangeMic.Xswa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xswa");
            target = new Exchange(ExchangeMic.Cryd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cryd");
            target = new Exchange(ExchangeMic.Cryx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cryx");
            target = new Exchange(ExchangeMic.Sebx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sebx");
            target = new Exchange(ExchangeMic.Ensx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ensx");
            target = new Exchange(ExchangeMic.Xngm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xngm");
            target = new Exchange(ExchangeMic.Nmtf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nmtf");
            target = new Exchange(ExchangeMic.Xndx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xndx");
            target = new Exchange(ExchangeMic.Xnmr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnmr");
            target = new Exchange(ExchangeMic.Xsat);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsat");
            target = new Exchange(ExchangeMic.Xsto);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsto");
            target = new Exchange(ExchangeMic.Csto);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Csto");
            target = new Exchange(ExchangeMic.Dnse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dnse");
            target = new Exchange(ExchangeMic.Dsto);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dsto");
            target = new Exchange(ExchangeMic.Fnse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fnse");
            target = new Exchange(ExchangeMic.Xopv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xopv");
            target = new Exchange(ExchangeMic.Aixe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Aixe");
            target = new Exchange(ExchangeMic.Dots);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dots");
            target = new Exchange(ExchangeMic.Euch);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Euch");
            target = new Exchange(ExchangeMic.Eurm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eurm");
            target = new Exchange(ExchangeMic.Eusc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eusc");
            target = new Exchange(ExchangeMic.Eusp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eusp");
            target = new Exchange(ExchangeMic.Stox);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Stox");
            target = new Exchange(ExchangeMic.Xscu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xscu");
            target = new Exchange(ExchangeMic.Xstv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xstv");
            target = new Exchange(ExchangeMic.Xstx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xstx");
            target = new Exchange(ExchangeMic.Ubsg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ubsg");
            target = new Exchange(ExchangeMic.Ubsc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ubsc");
            target = new Exchange(ExchangeMic.Ubsf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ubsf");
            target = new Exchange(ExchangeMic.Xbrn);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbrn");
            target = new Exchange(ExchangeMic.Xswx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xswx");
            target = new Exchange(ExchangeMic.Xbtr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbtr");
            target = new Exchange(ExchangeMic.Xicb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xicb");
            target = new Exchange(ExchangeMic.Xqmh);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xqmh");
            target = new Exchange(ExchangeMic.Xvtx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xvtx");
            target = new Exchange(ExchangeMic.Zkbx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Zkbx");
            target = new Exchange(ExchangeMic.Xdse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdse");
            target = new Exchange(ExchangeMic.Roco);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Roco");
            target = new Exchange(ExchangeMic.Xtaf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtaf");
            target = new Exchange(ExchangeMic.Xtai);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtai");
            target = new Exchange(ExchangeMic.Xdar);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdar");
            target = new Exchange(ExchangeMic.Afet);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Afet");
            target = new Exchange(ExchangeMic.Beex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Beex");
            target = new Exchange(ExchangeMic.Tfex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tfex");
            target = new Exchange(ExchangeMic.Xbkk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbkk");
            target = new Exchange(ExchangeMic.Xbkf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbkf");
            target = new Exchange(ExchangeMic.Xmai);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmai");
            target = new Exchange(ExchangeMic.Clmx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Clmx");
            target = new Exchange(ExchangeMic.Hchc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hchc");
            target = new Exchange(ExchangeMic.Ndex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ndex");
            target = new Exchange(ExchangeMic.Ndxs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ndxs");
            target = new Exchange(ExchangeMic.Nlpx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nlpx");
            target = new Exchange(ExchangeMic.Tomx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tomx");
            target = new Exchange(ExchangeMic.Tomd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tomd");
            target = new Exchange(ExchangeMic.Xems);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xems");
            target = new Exchange(ExchangeMic.Xhft);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xhft");
            target = new Exchange(ExchangeMic.Xtrn);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtrn");
            target = new Exchange(ExchangeMic.Xtun);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtun");
            target = new Exchange(ExchangeMic.Xist);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xist");
            target = new Exchange(ExchangeMic.Xdsm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdsm");
            target = new Exchange(ExchangeMic.Xeqy);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xeqy");
            target = new Exchange(ExchangeMic.Xfno);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xfno");
            target = new Exchange(ExchangeMic.Xpms);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpms");
            target = new Exchange(ExchangeMic.Ultx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ultx");
            target = new Exchange(ExchangeMic.Xuga);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xuga");
            target = new Exchange(ExchangeMic.Eese);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eese");
            target = new Exchange(ExchangeMic.Pfts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pfts");
            target = new Exchange(ExchangeMic.Pftq);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pftq");
            target = new Exchange(ExchangeMic.Sepe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sepe");
            target = new Exchange(ExchangeMic.Ukex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ukex");
            target = new Exchange(ExchangeMic.Xdfb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdfb");
            target = new Exchange(ExchangeMic.Xkhr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkhr");
            target = new Exchange(ExchangeMic.Xkie);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkie");
            target = new Exchange(ExchangeMic.Xkis);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkis");
            target = new Exchange(ExchangeMic.Xode);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xode");
            target = new Exchange(ExchangeMic.Xpri);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpri");
            target = new Exchange(ExchangeMic.Xuax);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xuax");
            target = new Exchange(ExchangeMic.Xukr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xukr");
            target = new Exchange(ExchangeMic.Dgcx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dgcx");
            target = new Exchange(ExchangeMic.Difx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Difx");
            target = new Exchange(ExchangeMic.Dumx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dumx");
            target = new Exchange(ExchangeMic.Xads);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xads");
            target = new Exchange(ExchangeMic.Xdfm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xdfm");
            target = new Exchange(ExchangeMic.Aqxe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Aqxe");
            target = new Exchange(ExchangeMic.Balt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Balt");
            target = new Exchange(ExchangeMic.Bltx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bltx");
            target = new Exchange(ExchangeMic.Bcxe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bcxe");
            target = new Exchange(ExchangeMic.Batd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Batd");
            target = new Exchange(ExchangeMic.Bate);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bate");
            target = new Exchange(ExchangeMic.Batf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Batf");
            target = new Exchange(ExchangeMic.Batp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Batp");
            target = new Exchange(ExchangeMic.Botc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Botc");
            target = new Exchange(ExchangeMic.Chid);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Chid");
            target = new Exchange(ExchangeMic.Chio);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Chio");
            target = new Exchange(ExchangeMic.Chix);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Chix");
            target = new Exchange(ExchangeMic.Bgci);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bgci");
            target = new Exchange(ExchangeMic.Bgcb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bgcb");
            target = new Exchange(ExchangeMic.Blox);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Blox");
            target = new Exchange(ExchangeMic.Bmtf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bmtf");
            target = new Exchange(ExchangeMic.Boat);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Boat");
            target = new Exchange(ExchangeMic.Bosc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bosc");
            target = new Exchange(ExchangeMic.Brnx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Brnx");
            target = new Exchange(ExchangeMic.Caze);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Caze");
            target = new Exchange(ExchangeMic.Cco2);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cco2");
            target = new Exchange(ExchangeMic.Cgme);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgme");
            target = new Exchange(ExchangeMic.Chev);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Chev");
            target = new Exchange(ExchangeMic.Blnk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Blnk");
            target = new Exchange(ExchangeMic.Cmee);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cmee");
            target = new Exchange(ExchangeMic.Cmec);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cmec");
            target = new Exchange(ExchangeMic.Cmed);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cmed");
            target = new Exchange(ExchangeMic.Cmmt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cmmt");
            target = new Exchange(ExchangeMic.Cseu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cseu");
            target = new Exchange(ExchangeMic.Cscf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cscf");
            target = new Exchange(ExchangeMic.Dbix);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dbix");
            target = new Exchange(ExchangeMic.Dbcr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dbcr");
            target = new Exchange(ExchangeMic.Dbcx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dbcx");
            target = new Exchange(ExchangeMic.Dbdc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dbdc");
            target = new Exchange(ExchangeMic.Dbmo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dbmo");
            target = new Exchange(ExchangeMic.Dbse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dbse");
            target = new Exchange(ExchangeMic.Encl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Encl");
            target = new Exchange(ExchangeMic.Eqld);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eqld");
            target = new Exchange(ExchangeMic.Exeu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Exeu");
            target = new Exchange(ExchangeMic.Exbo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Exbo");
            target = new Exchange(ExchangeMic.Excp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Excp");
            target = new Exchange(ExchangeMic.Exmp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Exmp");
            target = new Exchange(ExchangeMic.Exor);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Exor");
            target = new Exchange(ExchangeMic.Exsi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Exsi");
            target = new Exchange(ExchangeMic.Exvp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Exvp");
            target = new Exchange(ExchangeMic.Fair);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fair");
            target = new Exchange(ExchangeMic.Gemx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gemx");
            target = new Exchange(ExchangeMic.Gfic);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gfic");
            target = new Exchange(ExchangeMic.Gfif);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gfif");
            target = new Exchange(ExchangeMic.Gfin);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gfin");
            target = new Exchange(ExchangeMic.Gfir);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gfir");
            target = new Exchange(ExchangeMic.Gmeg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gmeg");
            target = new Exchange(ExchangeMic.Xgcx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgcx");
            target = new Exchange(ExchangeMic.Xgdx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgdx");
            target = new Exchange(ExchangeMic.Xgsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgsx");
            target = new Exchange(ExchangeMic.Xldx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xldx");
            target = new Exchange(ExchangeMic.Grif);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Grif");
            target = new Exchange(ExchangeMic.Grse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Grse");
            target = new Exchange(ExchangeMic.Hsxe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hsxe");
            target = new Exchange(ExchangeMic.Ibal);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ibal");
            target = new Exchange(ExchangeMic.Icap);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icap");
            target = new Exchange(ExchangeMic.Btee);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Btee");
            target = new Exchange(ExchangeMic.Ebsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ebsx");
            target = new Exchange(ExchangeMic.Icah);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icah");
            target = new Exchange(ExchangeMic.Icen);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icen");
            target = new Exchange(ExchangeMic.Icse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icse");
            target = new Exchange(ExchangeMic.Ictq);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ictq");
            target = new Exchange(ExchangeMic.Isdx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Isdx");
            target = new Exchange(ExchangeMic.Wclk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wclk");
            target = new Exchange(ExchangeMic.Ifeu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ifeu");
            target = new Exchange(ExchangeMic.Cxrt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cxrt");
            target = new Exchange(ExchangeMic.Ifen);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ifen");
            target = new Exchange(ExchangeMic.Ifll);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ifll");
            target = new Exchange(ExchangeMic.Iflo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Iflo");
            target = new Exchange(ExchangeMic.Iflx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Iflx");
            target = new Exchange(ExchangeMic.Ifut);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ifut");
            target = new Exchange(ExchangeMic.Iswa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Iswa");
            target = new Exchange(ExchangeMic.Kleu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Kleu");
            target = new Exchange(ExchangeMic.Liqu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Liqu");
            target = new Exchange(ExchangeMic.Liqf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Liqf");
            target = new Exchange(ExchangeMic.Liqh);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Liqh");
            target = new Exchange(ExchangeMic.Lmax);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lmax");
            target = new Exchange(ExchangeMic.Lmad);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lmad");
            target = new Exchange(ExchangeMic.Lmae);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lmae");
            target = new Exchange(ExchangeMic.Lmaf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lmaf");
            target = new Exchange(ExchangeMic.Lmao);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lmao");
            target = new Exchange(ExchangeMic.Lmec);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lmec");
            target = new Exchange(ExchangeMic.Lotc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lotc");
            target = new Exchange(ExchangeMic.Pldx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pldx");
            target = new Exchange(ExchangeMic.Lppm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lppm");
            target = new Exchange(ExchangeMic.Mael);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mael");
            target = new Exchange(ExchangeMic.Mfgl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mfgl");
            target = new Exchange(ExchangeMic.Mlxn);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mlxn");
            target = new Exchange(ExchangeMic.Mlax);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mlax");
            target = new Exchange(ExchangeMic.Mleu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mleu");
            target = new Exchange(ExchangeMic.Mlve);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mlve");
            target = new Exchange(ExchangeMic.Msip);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Msip");
            target = new Exchange(ExchangeMic.Mytr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mytr");
            target = new Exchange(ExchangeMic.N2Ex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "N2Ex");
            target = new Exchange(ExchangeMic.Ndcm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ndcm");
            target = new Exchange(ExchangeMic.Noff);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Noff");
            target = new Exchange(ExchangeMic.Nuro);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nuro");
            target = new Exchange(ExchangeMic.Nurd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nurd");
            target = new Exchange(ExchangeMic.Xnlx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnlx");
            target = new Exchange(ExchangeMic.Nxeu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nxeu");
            target = new Exchange(ExchangeMic.Peel);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Peel");
            target = new Exchange(ExchangeMic.Xphx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xphx");
            target = new Exchange(ExchangeMic.Xrsp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xrsp");
            target = new Exchange(ExchangeMic.Pieu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pieu");
            target = new Exchange(ExchangeMic.Pirm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pirm");
            target = new Exchange(ExchangeMic.Qwix);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Qwix");
            target = new Exchange(ExchangeMic.Rbce);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rbce");
            target = new Exchange(ExchangeMic.Rbsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rbsx");
            target = new Exchange(ExchangeMic.Rtsl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rtsl");
            target = new Exchange(ExchangeMic.Secf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Secf");
            target = new Exchange(ExchangeMic.Sgmx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sgmx");
            target = new Exchange(ExchangeMic.Shar);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Shar");
            target = new Exchange(ExchangeMic.Spec);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Spec");
            target = new Exchange(ExchangeMic.Sprz);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sprz");
            target = new Exchange(ExchangeMic.Ssex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ssex");
            target = new Exchange(ExchangeMic.Swap);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Swap");
            target = new Exchange(ExchangeMic.Tfsv);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tfsv");
            target = new Exchange(ExchangeMic.Tpie);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tpie");
            target = new Exchange(ExchangeMic.Trde);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Trde");
            target = new Exchange(ExchangeMic.Dbvx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dbvx");
            target = new Exchange(ExchangeMic.Parx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Parx");
            target = new Exchange(ExchangeMic.Tcds);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tcds");
            target = new Exchange(ExchangeMic.Tfsg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tfsg");
            target = new Exchange(ExchangeMic.Trdx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Trdx");
            target = new Exchange(ExchangeMic.Vola);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Vola");
            target = new Exchange(ExchangeMic.Treu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Treu");
            target = new Exchange(ExchangeMic.Trqx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Trqx");
            target = new Exchange(ExchangeMic.Trqm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Trqm");
            target = new Exchange(ExchangeMic.Ubsl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ubsl");
            target = new Exchange(ExchangeMic.Ubse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ubse");
            target = new Exchange(ExchangeMic.Ukgd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ukgd");
            target = new Exchange(ExchangeMic.Ukpx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ukpx");
            target = new Exchange(ExchangeMic.Vega);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Vega");
            target = new Exchange(ExchangeMic.Wins);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wins");
            target = new Exchange(ExchangeMic.Xalt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xalt");
            target = new Exchange(ExchangeMic.Xcor);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcor");
            target = new Exchange(ExchangeMic.Xgcl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgcl");
            target = new Exchange(ExchangeMic.Xlbm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlbm");
            target = new Exchange(ExchangeMic.Xlch);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlch");
            target = new Exchange(ExchangeMic.Xlme);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlme");
            target = new Exchange(ExchangeMic.Xlon);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlon");
            target = new Exchange(ExchangeMic.Xlod);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlod");
            target = new Exchange(ExchangeMic.Xmts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmts");
            target = new Exchange(ExchangeMic.Amts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Amts");
            target = new Exchange(ExchangeMic.Bvuk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bvuk");
            target = new Exchange(ExchangeMic.Eacm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eacm");
            target = new Exchange(ExchangeMic.Emts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Emts");
            target = new Exchange(ExchangeMic.Gmts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gmts");
            target = new Exchange(ExchangeMic.Hung);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hung");
            target = new Exchange(ExchangeMic.Imts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imts");
            target = new Exchange(ExchangeMic.Mczk);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mczk");
            target = new Exchange(ExchangeMic.Mtsa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtsa");
            target = new Exchange(ExchangeMic.Mtsg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtsg");
            target = new Exchange(ExchangeMic.Mtss);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtss");
            target = new Exchange(ExchangeMic.Mtsw);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtsw");
            target = new Exchange(ExchangeMic.Port);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Port");
            target = new Exchange(ExchangeMic.Prme);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Prme");
            target = new Exchange(ExchangeMic.Rmts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rmts");
            target = new Exchange(ExchangeMic.Smts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Smts");
            target = new Exchange(ExchangeMic.Vmts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Vmts");
            target = new Exchange(ExchangeMic.Xsga);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsga");
            target = new Exchange(ExchangeMic.Xsmp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsmp");
            target = new Exchange(ExchangeMic.Xswb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xswb");
            target = new Exchange(ExchangeMic.Xtup);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtup");
            target = new Exchange(ExchangeMic.Tben);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tben");
            target = new Exchange(ExchangeMic.Tbla);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tbla");
            target = new Exchange(ExchangeMic.Tpcd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tpcd");
            target = new Exchange(ExchangeMic.Tpeq);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tpeq");
            target = new Exchange(ExchangeMic.Tpfd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tpfd");
            target = new Exchange(ExchangeMic.Tpre);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tpre");
            target = new Exchange(ExchangeMic.Tpsd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tpsd");
            target = new Exchange(ExchangeMic.Tpsp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tpsp");
            target = new Exchange(ExchangeMic.Xtpe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xtpe");
            target = new Exchange(ExchangeMic.Xubs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xubs");
            target = new Exchange(ExchangeMic.Aats);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Aats");
            target = new Exchange(ExchangeMic.Aqua);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Aqua");
            target = new Exchange(ExchangeMic.Atdf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Atdf");
            target = new Exchange(ExchangeMic.Core);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Core");
            target = new Exchange(ExchangeMic.Baml);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Baml");
            target = new Exchange(ExchangeMic.Mlco);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mlco");
            target = new Exchange(ExchangeMic.Mlvx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mlvx");
            target = new Exchange(ExchangeMic.Barx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Barx");
            target = new Exchange(ExchangeMic.Bard);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bard");
            target = new Exchange(ExchangeMic.Barl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Barl");
            target = new Exchange(ExchangeMic.Bcdx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bcdx");
            target = new Exchange(ExchangeMic.Bats);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bats");
            target = new Exchange(ExchangeMic.Bato);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bato");
            target = new Exchange(ExchangeMic.Baty);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Baty");
            target = new Exchange(ExchangeMic.Byxd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Byxd");
            target = new Exchange(ExchangeMic.Bzxd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bzxd");
            target = new Exchange(ExchangeMic.Bbsf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bbsf");
            target = new Exchange(ExchangeMic.Bgcf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bgcf");
            target = new Exchange(ExchangeMic.Bgcd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bgcd");
            target = new Exchange(ExchangeMic.Bids);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bids");
            target = new Exchange(ExchangeMic.Bltd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bltd");
            target = new Exchange(ExchangeMic.Bpol);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bpol");
            target = new Exchange(ExchangeMic.Bndd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bndd");
            target = new Exchange(ExchangeMic.Bnyc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bnyc");
            target = new Exchange(ExchangeMic.Nyfx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nyfx");
            target = new Exchange(ExchangeMic.Vtex);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Vtex");
            target = new Exchange(ExchangeMic.Btec);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Btec");
            target = new Exchange(ExchangeMic.Icsu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icsu");
            target = new Exchange(ExchangeMic.Cded);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cded");
            target = new Exchange(ExchangeMic.Cgmi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgmi");
            target = new Exchange(ExchangeMic.Cblc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cblc");
            target = new Exchange(ExchangeMic.Cgmu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cgmu");
            target = new Exchange(ExchangeMic.Cicx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cicx");
            target = new Exchange(ExchangeMic.Lqfi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lqfi");
            target = new Exchange(ExchangeMic.Cmsf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cmsf");
            target = new Exchange(ExchangeMic.Cred);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cred");
            target = new Exchange(ExchangeMic.Caes);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Caes");
            target = new Exchange(ExchangeMic.Cslp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cslp");
            target = new Exchange(ExchangeMic.Dbsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dbsx");
            target = new Exchange(ExchangeMic.Deal);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Deal");
            target = new Exchange(ExchangeMic.Edge);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Edge");
            target = new Exchange(ExchangeMic.Eddp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eddp");
            target = new Exchange(ExchangeMic.Edga);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Edga");
            target = new Exchange(ExchangeMic.Edgd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Edgd");
            target = new Exchange(ExchangeMic.Edgo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Edgo");
            target = new Exchange(ExchangeMic.Edgx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Edgx");
            target = new Exchange(ExchangeMic.Eris);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Eris");
            target = new Exchange(ExchangeMic.Fast);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fast");
            target = new Exchange(ExchangeMic.Finr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Finr");
            target = new Exchange(ExchangeMic.Finn);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Finn");
            target = new Exchange(ExchangeMic.Fino);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fino");
            target = new Exchange(ExchangeMic.Finy);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Finy");
            target = new Exchange(ExchangeMic.Ootc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ootc");
            target = new Exchange(ExchangeMic.Xadf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xadf");
            target = new Exchange(ExchangeMic.Fxal);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fxal");
            target = new Exchange(ExchangeMic.Fxcm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fxcm");
            target = new Exchange(ExchangeMic.G1xx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "G1xx");
            target = new Exchange(ExchangeMic.Gllc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gllc");
            target = new Exchange(ExchangeMic.Glps);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Glps");
            target = new Exchange(ExchangeMic.Govx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Govx");
            target = new Exchange(ExchangeMic.Gree);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gree");
            target = new Exchange(ExchangeMic.Gsef);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gsef");
            target = new Exchange(ExchangeMic.Gtco);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gtco");
            target = new Exchange(ExchangeMic.Hegx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hegx");
            target = new Exchange(ExchangeMic.Hppo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hppo");
            target = new Exchange(ExchangeMic.Hsfx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hsfx");
            target = new Exchange(ExchangeMic.Icel);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icel");
            target = new Exchange(ExchangeMic.Iexg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Iexg");
            target = new Exchange(ExchangeMic.Ifus);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ifus");
            target = new Exchange(ExchangeMic.Ices);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ices");
            target = new Exchange(ExchangeMic.Iepa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Iepa");
            target = new Exchange(ExchangeMic.Ifed);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ifed");
            target = new Exchange(ExchangeMic.Imag);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imag");
            target = new Exchange(ExchangeMic.Imbd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imbd");
            target = new Exchange(ExchangeMic.Imcc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imcc");
            target = new Exchange(ExchangeMic.Imcg);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imcg");
            target = new Exchange(ExchangeMic.Imco);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imco");
            target = new Exchange(ExchangeMic.Imcr);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imcr");
            target = new Exchange(ExchangeMic.Imen);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imen");
            target = new Exchange(ExchangeMic.Imeq);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imeq");
            target = new Exchange(ExchangeMic.Imfx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imfx");
            target = new Exchange(ExchangeMic.Imir);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Imir");
            target = new Exchange(ExchangeMic.Isda);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Isda");
            target = new Exchange(ExchangeMic.Itgi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Itgi");
            target = new Exchange(ExchangeMic.Jefx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Jefx");
            target = new Exchange(ExchangeMic.Jpmx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Jpmx");
            target = new Exchange(ExchangeMic.Jsef);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Jsef");
            target = new Exchange(ExchangeMic.Jses);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Jses");
            target = new Exchange(ExchangeMic.Jsjx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Jsjx");
            target = new Exchange(ExchangeMic.Knig);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Knig");
            target = new Exchange(ExchangeMic.Kncm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Kncm");
            target = new Exchange(ExchangeMic.Knem);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Knem");
            target = new Exchange(ExchangeMic.Knli);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Knli");
            target = new Exchange(ExchangeMic.Knmx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Knmx");
            target = new Exchange(ExchangeMic.Lasf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lasf");
            target = new Exchange(ExchangeMic.Levl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Levl");
            target = new Exchange(ExchangeMic.Lius);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lius");
            target = new Exchange(ExchangeMic.Lifi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lifi");
            target = new Exchange(ExchangeMic.Liuh);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Liuh");
            target = new Exchange(ExchangeMic.Lqed);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lqed");
            target = new Exchange(ExchangeMic.Ltaa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ltaa");
            target = new Exchange(ExchangeMic.Lmnx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Lmnx");
            target = new Exchange(ExchangeMic.Mihi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mihi");
            target = new Exchange(ExchangeMic.Mprl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mprl");
            target = new Exchange(ExchangeMic.Xmio);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmio");
            target = new Exchange(ExchangeMic.Msco);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Msco");
            target = new Exchange(ExchangeMic.Mslp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mslp");
            target = new Exchange(ExchangeMic.Mspl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mspl");
            target = new Exchange(ExchangeMic.Msrp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Msrp");
            target = new Exchange(ExchangeMic.Mstx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mstx");
            target = new Exchange(ExchangeMic.Mtus);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtus");
            target = new Exchange(ExchangeMic.Bvus);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bvus");
            target = new Exchange(ExchangeMic.Mtsb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtsb");
            target = new Exchange(ExchangeMic.Mtxx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtxx");
            target = new Exchange(ExchangeMic.Mtxa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtxa");
            target = new Exchange(ExchangeMic.Mtxc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtxc");
            target = new Exchange(ExchangeMic.Mtxm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtxm");
            target = new Exchange(ExchangeMic.Mtxs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mtxs");
            target = new Exchange(ExchangeMic.Nblx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nblx");
            target = new Exchange(ExchangeMic.Nfsc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nfsc");
            target = new Exchange(ExchangeMic.Nfsa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nfsa");
            target = new Exchange(ExchangeMic.Nfsd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nfsd");
            target = new Exchange(ExchangeMic.Xstm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xstm");
            target = new Exchange(ExchangeMic.Nmra);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nmra");
            target = new Exchange(ExchangeMic.Nodx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nodx");
            target = new Exchange(ExchangeMic.Nxus);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nxus");
            target = new Exchange(ExchangeMic.Nypc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nypc");
            target = new Exchange(ExchangeMic.Ollc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ollc");
            target = new Exchange(ExchangeMic.Opra);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Opra");
            target = new Exchange(ExchangeMic.Otcm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Otcm");
            target = new Exchange(ExchangeMic.Cave);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cave");
            target = new Exchange(ExchangeMic.Otcb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Otcb");
            target = new Exchange(ExchangeMic.Otcq);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Otcq");
            target = new Exchange(ExchangeMic.Pinc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pinc");
            target = new Exchange(ExchangeMic.Pini);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pini");
            target = new Exchange(ExchangeMic.Pinl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pinl");
            target = new Exchange(ExchangeMic.Pinx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pinx");
            target = new Exchange(ExchangeMic.Psgm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Psgm");
            target = new Exchange(ExchangeMic.Pdqx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pdqx");
            target = new Exchange(ExchangeMic.Pdqd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pdqd");
            target = new Exchange(ExchangeMic.Pipe);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pipe");
            target = new Exchange(ExchangeMic.Prse);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Prse");
            target = new Exchange(ExchangeMic.Pulx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Pulx");
            target = new Exchange(ExchangeMic.Ricx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ricx");
            target = new Exchange(ExchangeMic.Ricd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ricd");
            target = new Exchange(ExchangeMic.Sgma);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sgma");
            target = new Exchange(ExchangeMic.Shaw);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Shaw");
            target = new Exchange(ExchangeMic.Shad);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Shad");
            target = new Exchange(ExchangeMic.Soho);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Soho");
            target = new Exchange(ExchangeMic.Sstx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Sstx");
            target = new Exchange(ExchangeMic.Tera);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tera");
            target = new Exchange(ExchangeMic.Tfsu);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tfsu");
            target = new Exchange(ExchangeMic.Trck);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Trck");
            target = new Exchange(ExchangeMic.Trux);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Trux");
            target = new Exchange(ExchangeMic.Tru1);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tru1");
            target = new Exchange(ExchangeMic.Tru2);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tru2");
            target = new Exchange(ExchangeMic.Trwb);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Trwb");
            target = new Exchange(ExchangeMic.Dwsf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Dwsf");
            target = new Exchange(ExchangeMic.Twsf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Twsf");
            target = new Exchange(ExchangeMic.Tsbx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tsbx");
            target = new Exchange(ExchangeMic.Tsef);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Tsef");
            target = new Exchange(ExchangeMic.Ubsa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ubsa");
            target = new Exchange(ExchangeMic.Ubsp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ubsp");
            target = new Exchange(ExchangeMic.Welx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Welx");
            target = new Exchange(ExchangeMic.Wsag);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Wsag");
            target = new Exchange(ExchangeMic.Xaqs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xaqs");
            target = new Exchange(ExchangeMic.Xbox);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbox");
            target = new Exchange(ExchangeMic.Xcbo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcbo");
            target = new Exchange(ExchangeMic.C2Ox);
            Assert.AreEqual(oth, target.EuronextMepNumber, "C2Ox");
            target = new Exchange(ExchangeMic.Cbsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cbsx");
            target = new Exchange(ExchangeMic.Xcbf);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcbf");
            target = new Exchange(ExchangeMic.Xcbt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcbt");
            target = new Exchange(ExchangeMic.Fcbt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fcbt");
            target = new Exchange(ExchangeMic.Xkbt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkbt");
            target = new Exchange(ExchangeMic.Xcff);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcff");
            target = new Exchange(ExchangeMic.Xchi);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xchi");
            target = new Exchange(ExchangeMic.Xcis);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcis");
            target = new Exchange(ExchangeMic.Xcme);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcme");
            target = new Exchange(ExchangeMic.Cbts);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cbts");
            target = new Exchange(ExchangeMic.Cecs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cecs");
            target = new Exchange(ExchangeMic.Cmes);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Cmes");
            target = new Exchange(ExchangeMic.Fcme);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Fcme");
            target = new Exchange(ExchangeMic.Glbx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Glbx");
            target = new Exchange(ExchangeMic.Nyms);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nyms");
            target = new Exchange(ExchangeMic.Ximm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Ximm");
            target = new Exchange(ExchangeMic.Xiom);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xiom");
            target = new Exchange(ExchangeMic.Xcur);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcur");
            target = new Exchange(ExchangeMic.Xelx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xelx");
            target = new Exchange(ExchangeMic.Xfci);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xfci");
            target = new Exchange(ExchangeMic.Xgmx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xgmx");
            target = new Exchange(ExchangeMic.Xins);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xins");
            target = new Exchange(ExchangeMic.Iblx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Iblx");
            target = new Exchange(ExchangeMic.Icbx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icbx");
            target = new Exchange(ExchangeMic.Icro);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Icro");
            target = new Exchange(ExchangeMic.Iidx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Iidx");
            target = new Exchange(ExchangeMic.Mocx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mocx");
            target = new Exchange(ExchangeMic.Rcbx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Rcbx");
            target = new Exchange(ExchangeMic.Xisx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xisx");
            target = new Exchange(ExchangeMic.Gmni);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gmni");
            target = new Exchange(ExchangeMic.Mcry);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Mcry");
            target = new Exchange(ExchangeMic.Xisa);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xisa");
            target = new Exchange(ExchangeMic.Xise);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xise");
            target = new Exchange(ExchangeMic.Xmer);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmer");
            target = new Exchange(ExchangeMic.Xmge);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmge");
            target = new Exchange(ExchangeMic.Xnas);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnas");
            target = new Exchange(ExchangeMic.Bosd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bosd");
            target = new Exchange(ExchangeMic.Espd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Espd");
            target = new Exchange(ExchangeMic.Nasd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nasd");
            target = new Exchange(ExchangeMic.Xbos);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbos");
            target = new Exchange(ExchangeMic.Xbrt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbrt");
            target = new Exchange(ExchangeMic.Xbxo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xbxo");
            target = new Exchange(ExchangeMic.Xncm);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xncm");
            target = new Exchange(ExchangeMic.Xndq);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xndq");
            target = new Exchange(ExchangeMic.Xngs);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xngs");
            target = new Exchange(ExchangeMic.Xnim);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnim");
            target = new Exchange(ExchangeMic.Xnms);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnms");
            target = new Exchange(ExchangeMic.Xpbt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpbt");
            target = new Exchange(ExchangeMic.Xphl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xphl");
            target = new Exchange(ExchangeMic.Xpho);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpho");
            target = new Exchange(ExchangeMic.Xpor);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpor");
            target = new Exchange(ExchangeMic.Xpsx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xpsx");
            target = new Exchange(ExchangeMic.Xnym);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnym");
            target = new Exchange(ExchangeMic.Xcec);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcec");
            target = new Exchange(ExchangeMic.Xnye);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnye");
            target = new Exchange(ExchangeMic.Xnyl);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnyl");
            target = new Exchange(ExchangeMic.Xnys);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnys");
            target = new Exchange(ExchangeMic.Aldp);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Aldp");
            target = new Exchange(ExchangeMic.Amxo);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Amxo");
            target = new Exchange(ExchangeMic.Arcd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Arcd");
            target = new Exchange(ExchangeMic.Arco);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Arco");
            target = new Exchange(ExchangeMic.Arcx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Arcx");
            target = new Exchange(ExchangeMic.Nysd);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Nysd");
            target = new Exchange(ExchangeMic.Xase);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xase");
            target = new Exchange(ExchangeMic.Xnli);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xnli");
            target = new Exchange(ExchangeMic.Xoch);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xoch");
            target = new Exchange(ExchangeMic.Xotc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xotc");
            target = new Exchange(ExchangeMic.Xsef);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xsef");
            target = new Exchange(ExchangeMic.Xwee);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xwee");
            target = new Exchange(ExchangeMic.Bvur);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bvur");
            target = new Exchange(ExchangeMic.Xmnt);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xmnt");
            target = new Exchange(ExchangeMic.Xcet);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcet");
            target = new Exchange(ExchangeMic.Xcue);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xcue");
            target = new Exchange(ExchangeMic.Xkce);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xkce");
            target = new Exchange(ExchangeMic.Xste);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xste");
            target = new Exchange(ExchangeMic.Xuni);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xuni");
            target = new Exchange(ExchangeMic.Gxma);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Gxma");
            target = new Exchange(ExchangeMic.Bvca);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Bvca");
            target = new Exchange(ExchangeMic.Hstc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Hstc");
            target = new Exchange(ExchangeMic.Xhnx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xhnx");
            target = new Exchange(ExchangeMic.Xstc);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xstc");
            target = new Exchange(ExchangeMic.Xlus);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xlus");
            target = new Exchange(ExchangeMic.Xzim);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xzim");
            target = new Exchange(ExchangeMic.Xoff);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xoff");
            target = new Exchange(ExchangeMic.Xxxx);
            Assert.AreEqual(oth, target.EuronextMepNumber, "Xxxx");
        }
        #endregion

        #region MicTest
        /// <summary>
        /// A test for Mic.
        /// </summary>
        [TestMethod]
        public void MicTest()
        {
            var target = new Exchange(EuronextMic.Xbru);
            Assert.AreEqual(ExchangeMic.Xbru, target.Mic, "Xbru");
            target = new Exchange(EuronextMic.Alxb);
            Assert.AreEqual(ExchangeMic.Alxb, target.Mic, "Alxb");
            target = new Exchange(EuronextMic.Enxb);
            Assert.AreEqual(ExchangeMic.Enxb, target.Mic, "Enxb");
            target = new Exchange(EuronextMic.Mlxb);
            Assert.AreEqual(ExchangeMic.Mlxb, target.Mic, "Mlxb");
            target = new Exchange(EuronextMic.Tnlb);
            Assert.AreEqual(ExchangeMic.Tnlb, target.Mic, "Tnlb");
            target = new Exchange(EuronextMic.Vpxb);
            Assert.AreEqual(ExchangeMic.Vpxb, target.Mic, "Vpxb");
            target = new Exchange(EuronextMic.Xbrd);
            Assert.AreEqual(ExchangeMic.Xbrd, target.Mic, "Xbrd");
            target = new Exchange(EuronextMic.Xpar);
            Assert.AreEqual(ExchangeMic.Xpar, target.Mic, "Xpar");
            target = new Exchange(EuronextMic.Alxp);
            Assert.AreEqual(ExchangeMic.Alxp, target.Mic, "Alxp");
            target = new Exchange(EuronextMic.Xmat);
            Assert.AreEqual(ExchangeMic.Xmat, target.Mic, "Xmat");
            target = new Exchange(EuronextMic.Xmli);
            Assert.AreEqual(ExchangeMic.Xmli, target.Mic, "Xmli");
            target = new Exchange(EuronextMic.Xmon);
            Assert.AreEqual(ExchangeMic.Xmon, target.Mic, "Xmon");
            target = new Exchange(EuronextMic.Xlis);
            Assert.AreEqual(ExchangeMic.Xlis, target.Mic, "Xlis");
            target = new Exchange(EuronextMic.Alxl);
            Assert.AreEqual(ExchangeMic.Alxl, target.Mic, "Alxl");
            target = new Exchange(EuronextMic.Enxl);
            Assert.AreEqual(ExchangeMic.Enxl, target.Mic, "Enxl");
            target = new Exchange(EuronextMic.Mfox);
            Assert.AreEqual(ExchangeMic.Mfox, target.Mic, "Mfox");
            target = new Exchange(EuronextMic.Wqxl);
            Assert.AreEqual(ExchangeMic.Wqxl, target.Mic, "Wqxl");
            target = new Exchange(EuronextMic.Xams);
            Assert.AreEqual(ExchangeMic.Xams, target.Mic, "Xams");
            target = new Exchange(EuronextMic.Alxa);
            Assert.AreEqual(ExchangeMic.Alxa, target.Mic, "Alxa");
            target = new Exchange(EuronextMic.Tnla);
            Assert.AreEqual(ExchangeMic.Tnla, target.Mic, "Tnla");
            target = new Exchange(EuronextMic.Xeuc);
            Assert.AreEqual(ExchangeMic.Xeuc, target.Mic, "Xeuc");
            target = new Exchange(EuronextMic.Xeue);
            Assert.AreEqual(ExchangeMic.Xeue, target.Mic, "Xeue");
            target = new Exchange(EuronextMic.Xeui);
            Assert.AreEqual(ExchangeMic.Xeui, target.Mic, "Xeui");
            target = new Exchange(EuronextMic.Xldn);
            Assert.AreEqual(ExchangeMic.Xldn, target.Mic, "Xldn");
            target = new Exchange(EuronextMic.Xxxx);
            Assert.AreEqual(ExchangeMic.Xxxx, target.Mic, "Xxxx");
        }
        #endregion

        #region SerializationTest
        private static void SerializeTo(Exchange instance, string fileName)
        {
            var dcs = new DataContractSerializer(typeof(Exchange), null, 65536, false, true, null);
            using (var fs = new FileStream(fileName, FileMode.Create))
            {
                dcs.WriteObject(fs, instance);
                fs.Close();
            }
        }

        private static Exchange DeserializeFrom(string fileName)
        {
            var fs = new FileStream(fileName, FileMode.Open);
            XmlDictionaryReader reader = XmlDictionaryReader.CreateTextReader(fs, new XmlDictionaryReaderQuotas());
            var ser = new DataContractSerializer(typeof(Exchange), null, 65536, false, true, null);
            var instance = (Exchange)ser.ReadObject(reader, true);
            reader.Close();
            fs.Close();
            return instance;
        }

        /// <summary>
        /// A test for the serialization.
        /// </summary>
        [TestMethod]
        public void SerializationTest()
        {
            var source = new Exchange(ExchangeMic.Xpar);
            const string fileName = "ExchangeTest_1.xml";
            SerializeTo(source, fileName);
            Exchange target = DeserializeFrom(fileName);
            Assert.IsTrue(target.Mic == ExchangeMic.Xpar);
            Assert.IsTrue(target.IsEuronext);
            //FileInfo fi = new FileInfo(fileName);
            //fi.Delete();
        }
        #endregion
    }
}
