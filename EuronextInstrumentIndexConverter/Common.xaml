<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:EuronextInstrumentIndexConverter;assembly=EuronextInstrumentIndexConverter"
    >

    <Style x:Key="menuButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="8,0,0,0" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="button" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Height" Value="Auto" />
    </Style>

    <Style x:Key="stackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="1" />
    </Style>

    <Style x:Key="checkBox" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="3,1,1,1" />
        <Setter Property="Height" Value="Auto" />
    </Style>

    <Style x:Key="expander" TargetType="{x:Type Expander}">
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="ExpandDirection" Value="Down" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="BorderBrush" Value="White" />
    </Style>

    <Style x:Key="textBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="10" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="textBox" TargetType="{x:Type TextBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="AcceptsReturn" Value="False" />
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MaxLines" Value="1" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Focusable" Value="True" />
        <!-- Setter Property="Background" Value="Transparent" / -->
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="5" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="10" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="10" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="logTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource textBox}">
        <Setter Property="MaxLines" Value="4096" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="IsReadOnly" Value="False" />
    </Style>

    <Style x:Key="listBox" TargetType="{x:Type ListBox}">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="SelectionMode" Value="Multiple" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="SelectedIndex" Value="-1" />
        <Setter Property="IsTextSearchEnabled" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <!-- Setter Property="Background" Value="Transparent" / -->
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="0" Color="White" BlurRadius="5" />
            </Setter.Value>
        </Setter>
        <Setter Property="ListBox.ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<!--
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="granularityValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="local:TimeGranularityUnit" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <Style x:Key="granularityComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="SelectedIndex" Value="3" />
        <Setter Property="ItemsSource" Value="{Binding Source={StaticResource granularityValues}}" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="ComboBox.ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
-->
</ResourceDictionary>